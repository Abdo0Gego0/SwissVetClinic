{"version":3,"sources":["kendo.scheduler.recurrence.js"],"names":["f","define","$","undefined","intervalExcess","diff","interval","excess","dayInYear","date","month","getMonth","days","leapYear","DAYS_IN_LEAPYEAR","DAYS_IN_YEAR","getDate","weekInYear","weekStart","year","Date","getFullYear","adjustDST","setDayOfWeek","setDate","getDay","Math","floor","getTime","weekInMonth","firstWeekDay","firstDayOfMonth","firstWeekLength","ceil","normalizeDayIndex","weekDay","normalizeOffset","rule","lastDate","weeksInMonth","day","skipFirst","skipLast","offset","numberOfWeeks","isInWeek","ruleWeekValues","weekDays","ruleWeekOffset","weekNumber","currentDay","length","result","idx","push","ruleValues","rules","value","normalize","ruleValue","availableRules","parseArray","list","range","parseInt","isNaN","start","end","sort","numberSortPredicate","parseWeekDayList","valueLength","substring","toUpperCase","WEEK_DAYS_IDX","serializeWeekDayList","valueString","WEEK_DAYS","getMonthLength","MONTHS","a","b","parseExceptions","exceptions","zone","dates","split","indexOf","parseUTCDate","isException","Array","isArray","dateTime","getMilliseconds","toExceptionString","concat","kendo","timezone","convert","getTimezoneOffset","toString","RECURRENCE_DATE_FORMAT","join","startPeriodByFreq","freq","setFullYear","hours","setHours","minutes","setMinutes","seconds","setSeconds","endPeriodByFreq","eventsByPosition","periodEvents","positions","until","position","event","inPeriod","periodEventsLength","events","removeExceptionDates","exceptionDates","expand","startTime","endTime","endDate","durationMS","startPeriod","ruleStart","ruleEnd","useEventStart","freqName","eventStartTime","eventStartMS","eventStart","count","currentIdx","shiftedStart","shiftedEnd","shiftedStartTime","shifterEndTime","allDayCompensation","inPeriodCheckEndDate","startZone","endZone","startOffsetDiff","endOffsetDiff","startTZOffsetDiff","endTZOffsetDiff","offsetTicksStart","offsetTicksEnd","isMissingDSTHour","parseRule","recurrenceRule","getZoneOffset","startTimezone","MS_PER_MINUTE","endTimezone","clone","recurrenceException","exdates","set","frequencies","getHours","getMinutes","getSeconds","_startPeriod","kendoDate","_endPeriod","duration","isAllDay","_startTime","toInvariantTime","setup","limit","setTime","toUtcTime","toOccurrence","_endTime","next","slice","isDSTMissingHour","dateOffset","dateMinusHour","dateMinusHourOffset","parseDate","DATE_FORMATS","apply","parseDateRule","dateRule","pair","property","tzid","valueIdx","pairs","recur","offsets","splits","part","parts","instance","predicate","day1","day2","trim","toLowerCase","monthDays","yearDays","months","weeks","culture","calendar","firstDay","_hasRuleValue","serializeDateRule","val","serialize","ruleString","RECURRENCE_VIEW_TEMPLATE","DAY_RULE","WEEKDAY_RULE","WEEKEND_RULE","BaseRecurrenceEditor","RecurrenceEditor","RECURRENCE_HEADER_TEMPLATE","RECURRENCE_REPEAT_PATTERN_TEMPLATE","RECURRENCE_END_PATTERN_TEMPLATE","RECURRENCE_GROUP_BUTTON_TEMPLATE","MobileRecurrenceEditor","window","Class","ui","Widget","DropDownList","ButtonGroup","0","1","2","3","4","5","6","SU","MO","TU","WE","TH","FR","SA","RULE_NAMES","RULE_NAMES_LENGTH","limitation","monthRules","changed","setMonth","monthLength","monthDay","yearDay","week","weekDayRule","offsetDate","normalizeDay","weekDayRules","traverseRuleForNextMont","nextMonthFirstDay","ruleDay","forEach","hourRules","startHours","minuteRules","currentMinutes","secondRules","BaseFrequency","extend","options","this","_hour","ruleName","firstRule","modified","current","startTimeHours","normalizedCurrentIndex","normalizedStartIndex","frequency","MS_PER_HOUR","round","MS_PER_DAY","_date","_getNumberOfWeeksBetweenDates","first","second","exactWeeks","HourlyFrequency","fn","DailyFrequency","WeeklyFrequency","eventStartDate","MonthlyFrequency","YearlyFrequency","hourly","daily","weekly","monthly","yearly","CLICK","CHANGE","recurrence","parse","template","init","element","that","call","wrapper","today","_namespace","name","spinners","mobile","messages","repeat","recurrenceEditorTitle","never","repeatEvery","repeatOn","of","label","mobileLabel","after","occurrence","on","offsetPositions","third","fourth","last","weekdays","weekday","weekend","_initInterval","_value","_container","find","kendoNumericTextBox","decimals","format","min","change","_trigger","_weekDayButtons","names","abbreviated","namesAbbr","values","items","text","attributes","data-value","aria-label","_weekDayButtonGroup","selection","select","selectedDays","map","i","getAttribute","_weekDayRule","clear","_weekDay","_weekDayOffset","_weekDayView","weekDayOffset","weekDayValue","method","weekDayOffsetWidget","_initWeekDay","data","weekdayMessage","offsetMessage","weekDayInput","dataTextField","dataValueField","dataSource","dayName","_initWeekDays","ruleDays","ruleDaysLength","selectors","selectedWeekDayButtons","weekDayButtonGroup","_initMonthDay","monthDayInput","_monthDay","NumericTextBox","max","_initCount","input","_count","_initUntil","startInput","closest","validDateValidationMessage","Validator","prototype","dateCompareValidationMessage","dateCompare","initialValue","attr","_until","kendoDatePicker","setOptions","trigger","_initFrequency","_initContainer","destroy","_frequency","off","freqButton","_initView","container","editContainer","parent","insertAfter","append","buttonGroupElement","title","html","_initMonth","_period","_end","monthInputs","monthName","_month1","_month2","endRule","namespace","click","e","_toggleEnd","currentTarget","_buttonNever","_buttonCount","_buttonUntil","toggleRule","_toggleMonthDay","_toggleYear","selector","radioButtons","_buttonMonthDay","eq","_buttonWeekDay","enableCount","enableUntil","prop","enable","monthRule","enableMonthDay","enableWeekDay","yearRule","enableMonth1","enableMonth2","plugin","_optionTemplate","_pane","pane","_initRepeatButton","_initParentRepeatEnd","_defaultValue","animations","left","right","cancel","update","endTitle","repeatTitle","headerTitle","patterns","repeatBy","dayOfMonth","dayOfWeek","every","_destroyView","_endFields","target","_chevronButton","_repeatValue","parents","preventDefault","_createView","navigate","_view","_endLiItem","endLabelField","endEditField","appendTo","_navigateToView","_endParentLabelField","toggle","_endParentEndButton","_endText","_initRepeatEnd","_endLabelField","toggleClass","_endButton","viewName","frequencyMessages","ns","_initRepeatView","_initEndNavigation","endMessages","_initEndView","viewType","returnViewId","view","id","stopPropagation","hasClass","one","remove","content","show","hide","ev","endPattern","weekDaySelect","_options","monthSelect","monthNames","_monthSelect","currentValue","repeatRuleGroupButton","weekDayView","monthDayView","weekDayName","support","optionLabel","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.recurrence.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.recurrence', [\n        'kendo.dropdownlist',\n        'kendo.datepicker',\n        'kendo.numerictextbox',\n        'kendo.buttongroup'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.recurrence',\n        name: 'Recurrence',\n        category: 'web',\n        depends: [\n            'dropdownlist',\n            'datepicker',\n            'numerictextbox',\n            'buttongroup'\n        ],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, timezone = kendo.timezone, Class = kendo.Class, ui = kendo.ui, Widget = ui.Widget, DropDownList = ui.DropDownList, ButtonGroup = ui.ButtonGroup, kendoDate = kendo.date, setTime = kendoDate.setTime, setDayOfWeek = kendoDate.setDayOfWeek, adjustDST = kendoDate.adjustDST, firstDayOfMonth = kendoDate.firstDayOfMonth, getMilliseconds = kendoDate.getMilliseconds, DAYS_IN_LEAPYEAR = [\n                0,\n                31,\n                60,\n                91,\n                121,\n                152,\n                182,\n                213,\n                244,\n                274,\n                305,\n                335,\n                366\n            ], DAYS_IN_YEAR = [\n                0,\n                31,\n                59,\n                90,\n                120,\n                151,\n                181,\n                212,\n                243,\n                273,\n                304,\n                334,\n                365\n            ], MONTHS = [\n                31,\n                28,\n                31,\n                30,\n                31,\n                30,\n                31,\n                31,\n                30,\n                31,\n                30,\n                31\n            ], WEEK_DAYS = {\n                0: 'SU',\n                1: 'MO',\n                2: 'TU',\n                3: 'WE',\n                4: 'TH',\n                5: 'FR',\n                6: 'SA'\n            }, WEEK_DAYS_IDX = {\n                'SU': 0,\n                'MO': 1,\n                'TU': 2,\n                'WE': 3,\n                'TH': 4,\n                'FR': 5,\n                'SA': 6\n            }, DATE_FORMATS = [\n                'yyyy-MM-ddTHH:mm:ss.fffzzz',\n                'yyyy-MM-ddTHH:mm:sszzz',\n                'yyyy-MM-ddTHH:mm:ss',\n                'yyyy-MM-ddTHH:mm',\n                'yyyy-MM-ddTHH',\n                'yyyy-MM-dd',\n                'yyyyMMddTHHmmssfffzzz',\n                'yyyyMMddTHHmmsszzz',\n                'yyyyMMddTHHmmss',\n                'yyyyMMddTHHmm',\n                'yyyyMMddTHH',\n                'yyyyMMdd'\n            ], RULE_NAMES = [\n                'months',\n                'weeks',\n                'yearDays',\n                'monthDays',\n                'weekDays',\n                'hours',\n                'minutes',\n                'seconds'\n            ], RULE_NAMES_LENGTH = RULE_NAMES.length, RECURRENCE_DATE_FORMAT = 'yyyyMMddTHHmmssZ', limitation = {\n                months: function (date, end, rule) {\n                    var monthRules = rule.months, months = ruleValues(monthRules, date.getMonth() + 1), changed = false;\n                    if (months !== null) {\n                        if (months.length) {\n                            date.setMonth(months[0] - 1, 1);\n                        } else {\n                            date.setFullYear(date.getFullYear() + 1, monthRules[0] - 1, 1);\n                        }\n                        changed = true;\n                    }\n                    return changed;\n                },\n                monthDays: function (date, end, rule) {\n                    var monthLength, month, days, changed = false, hours = date.getHours(), normalize = function (monthDay) {\n                            if (monthDay < 0) {\n                                monthDay = monthLength + monthDay + 1;\n                            }\n                            return monthDay;\n                        };\n                    while (date <= end) {\n                        month = date.getMonth();\n                        monthLength = getMonthLength(date);\n                        days = ruleValues(rule.monthDays, date.getDate(), normalize);\n                        if (days === null) {\n                            return changed;\n                        }\n                        changed = true;\n                        if (days.length) {\n                            date.setMonth(month, days.sort(numberSortPredicate)[0]);\n                            adjustDST(date, hours);\n                            if (month === date.getMonth()) {\n                                break;\n                            }\n                        } else {\n                            date.setMonth(month + 1, 1);\n                        }\n                    }\n                    return changed;\n                },\n                yearDays: function (date, end, rule) {\n                    var year, yearDays, changed = false, hours = date.getHours(), normalize = function (yearDay) {\n                            if (yearDay < 0) {\n                                yearDay = year + yearDay;\n                            }\n                            return yearDay;\n                        };\n                    while (date < end) {\n                        year = leapYear(date) ? 366 : 365;\n                        yearDays = ruleValues(rule.yearDays, dayInYear(date), normalize);\n                        if (yearDays === null) {\n                            return changed;\n                        }\n                        changed = true;\n                        year = date.getFullYear();\n                        if (yearDays.length) {\n                            date.setFullYear(year, 0, yearDays.sort(numberSortPredicate)[0]);\n                            adjustDST(date, hours);\n                            break;\n                        } else {\n                            date.setFullYear(year + 1, 0, 1);\n                        }\n                    }\n                    return changed;\n                },\n                weeks: function (date, end, rule) {\n                    var weekStart = rule.weekStart, year, weeks, day, changed = false, hours = date.getHours(), normalize = function (week) {\n                            if (week < 0) {\n                                week = 53 + week;\n                            }\n                            return week;\n                        };\n                    while (date < end) {\n                        weeks = ruleValues(rule.weeks, weekInYear(date, weekStart), normalize);\n                        if (weeks === null) {\n                            return changed;\n                        }\n                        changed = true;\n                        year = date.getFullYear();\n                        if (weeks.length) {\n                            day = weeks.sort(numberSortPredicate)[0] * 7 - 1;\n                            date.setFullYear(year, 0, day);\n                            setDayOfWeek(date, weekStart, -1);\n                            adjustDST(date, hours);\n                            break;\n                        } else {\n                            date.setFullYear(year + 1, 0, 1);\n                        }\n                    }\n                    return changed;\n                },\n                weekDays: function (date, end, rule) {\n                    var offsetDate = new Date(date.getTime() + rule.offsets.start);\n                    var normalizeDay = offsetDate.getDay() - date.getDay();\n                    var weekDays = rule.weekDays;\n                    var weekStart = rule.weekStart;\n                    var weekDayRules = ruleWeekValues(weekDays, offsetDate, weekStart);\n                    var hours = date.getHours();\n                    var traverseRuleForNextMont = function (rule) {\n                        var nextMonthFirstDay = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n                        var ruleDay = normalizeDayIndex(rule.day, weekStart);\n                        if (nextMonthFirstDay.getDay() <= ruleDay) {\n                            if (!weekDayRule || normalizeDayIndex(weekDayRule.day, weekStart) > ruleDay) {\n                                weekDayRule = rule;\n                            }\n                        }\n                    };\n                    var weekDayRule, day;\n                    if (weekDayRules === null) {\n                        return false;\n                    }\n                    weekDayRule = weekDayRules[0];\n                    if (!weekDayRule) {\n                        if (rule.freq === 'monthly' && !rule.positions || rule.position > 0) {\n                            weekDays.forEach(traverseRuleForNextMont);\n                        }\n                        if (!weekDayRule) {\n                            weekDayRule = weekDays[0];\n                        }\n                        setDayOfWeek(date, weekStart);\n                    }\n                    day = weekDayRule.day;\n                    day -= normalizeDay;\n                    if (weekDayRule.offset) {\n                        while (date <= end && !isInWeek(date, weekDayRule, weekStart)) {\n                            if (weekInMonth(date, weekStart) === numberOfWeeks(date, weekStart)) {\n                                date.setMonth(date.getMonth() + 1, 1);\n                                adjustDST(date, hours);\n                            } else {\n                                date.setDate(date.getDate() + 7);\n                                adjustDST(date, hours);\n                                setDayOfWeek(date, weekStart, -1);\n                            }\n                        }\n                    }\n                    if (date.getDay() !== day) {\n                        setDayOfWeek(date, day);\n                    }\n                    return true;\n                },\n                hours: function (date, end, rule) {\n                    var hourRules = rule.hours, startTime = rule._startTime, startHours = startTime.getHours(), hours = ruleValues(hourRules, startHours), changed = false;\n                    if (hours !== null) {\n                        changed = true;\n                        date.setHours(startHours);\n                        adjustDST(date, startHours);\n                        if (hours.length) {\n                            hours = hours[0];\n                            date.setHours(hours);\n                        } else {\n                            hours = date.getHours();\n                            date.setDate(date.getDate() + 1);\n                            adjustDST(date, hours);\n                            hours = hourRules[0];\n                            date.setHours(hours);\n                            adjustDST(date, hours);\n                        }\n                        if (rule.minutes) {\n                            date.setMinutes(0);\n                        }\n                        startTime.setHours(hours, date.getMinutes());\n                    }\n                    return changed;\n                },\n                minutes: function (date, end, rule) {\n                    var minuteRules = rule.minutes, currentMinutes = date.getMinutes(), minutes = ruleValues(minuteRules, currentMinutes), hours = rule._startTime.getHours(), changed = false;\n                    if (minutes !== null) {\n                        changed = true;\n                        if (minutes.length) {\n                            minutes = minutes[0];\n                        } else {\n                            hours += 1;\n                            minutes = minuteRules[0];\n                        }\n                        if (rule.seconds) {\n                            date.setSeconds(0);\n                        }\n                        date.setHours(hours, minutes);\n                        hours = hours % 24;\n                        adjustDST(date, hours);\n                        rule._startTime.setHours(hours, minutes, date.getSeconds());\n                    }\n                    return changed;\n                },\n                seconds: function (date, end, rule) {\n                    var secondRules = rule.seconds, hours = rule._startTime.getHours(), seconds = ruleValues(secondRules, date.getSeconds()), minutes = date.getMinutes(), changed = false;\n                    if (seconds !== null) {\n                        changed = true;\n                        if (seconds.length) {\n                            date.setSeconds(seconds[0]);\n                        } else {\n                            minutes += 1;\n                            date.setMinutes(minutes, secondRules[0]);\n                            if (minutes > 59) {\n                                minutes = minutes % 60;\n                                hours = (hours + 1) % 24;\n                            }\n                        }\n                        rule._startTime.setHours(hours, minutes, date.getSeconds());\n                    }\n                    return changed;\n                }\n            }, BaseFrequency = Class.extend({\n                next: function (date, rule) {\n                    var startTime = rule._startTime, day = startTime.getDate(), minutes, seconds;\n                    if (rule.seconds) {\n                        seconds = date.getSeconds() + 1;\n                        date.setSeconds(seconds);\n                        startTime.setSeconds(seconds);\n                        startTime.setDate(day);\n                    } else if (rule.minutes) {\n                        minutes = date.getMinutes() + 1;\n                        date.setMinutes(minutes);\n                        startTime.setMinutes(minutes);\n                        startTime.setDate(day);\n                    } else {\n                        return false;\n                    }\n                    return true;\n                },\n                normalize: function (options) {\n                    var rule = options.rule;\n                    if (options.idx === 4 && rule.hours) {\n                        rule._startTime.setHours(0);\n                        this._hour(options.date, rule);\n                    }\n                },\n                limit: function (date, end, rule) {\n                    var interval = rule.interval, ruleName, firstRule, modified, idx, day;\n                    while (date <= end) {\n                        modified = firstRule = undefined;\n                        day = date.getDate();\n                        for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n                            ruleName = RULE_NAMES[idx];\n                            if (rule[ruleName]) {\n                                modified = limitation[ruleName](date, end, rule);\n                                if (firstRule !== undefined && modified) {\n                                    break;\n                                } else {\n                                    firstRule = modified;\n                                }\n                            }\n                            if (modified) {\n                                this.normalize({\n                                    date: date,\n                                    rule: rule,\n                                    day: day,\n                                    idx: idx\n                                });\n                            }\n                        }\n                        if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n                            break;\n                        }\n                    }\n                },\n                interval: function (rule, current) {\n                    var start = new Date(rule._startPeriod);\n                    var date = new Date(current);\n                    var hours = current.getHours();\n                    var weekStart = rule.weekStart;\n                    var interval = rule.interval;\n                    var frequency = rule.freq;\n                    var modified = false;\n                    var excess = 0;\n                    var month = 0;\n                    var day = 1;\n                    var diff;\n                    var startTimeHours;\n                    if (frequency === 'hourly') {\n                        diff = date.getTimezoneOffset() - start.getTimezoneOffset();\n                        startTimeHours = rule._startTime.getHours();\n                        date = date.getTime();\n                        if (hours !== startTimeHours) {\n                            date += (startTimeHours - hours) * kendoDate.MS_PER_HOUR;\n                        }\n                        date -= start;\n                        if (diff) {\n                            date -= diff * kendoDate.MS_PER_MINUTE;\n                        }\n                        diff = Math.floor(date / kendoDate.MS_PER_HOUR);\n                        excess = intervalExcess(diff, interval);\n                        if (excess !== 0) {\n                            this._hour(current, rule, excess);\n                            modified = true;\n                        }\n                    } else if (frequency === 'daily') {\n                        kendoDate.setTime(date, -start, true);\n                        diff = Math.round(date / kendoDate.MS_PER_DAY);\n                        excess = intervalExcess(diff, interval);\n                        if (excess !== 0) {\n                            this._date(current, rule, excess);\n                            modified = true;\n                        }\n                    } else if (frequency === 'weekly') {\n                        excess = this._getNumberOfWeeksBetweenDates(start, current);\n                        var normalizedCurrentIndex = normalizeDayIndex(current.getDay(), weekStart);\n                        var normalizedStartIndex = normalizeDayIndex(start.getDay(), weekStart);\n                        if (normalizedCurrentIndex < normalizedStartIndex) {\n                            excess += 1;\n                        }\n                        excess = intervalExcess(excess, interval);\n                        if (excess !== 0) {\n                            kendoDate.setDayOfWeek(current, rule.weekStart, -1);\n                            current.setDate(current.getDate() + excess * 7);\n                            adjustDST(current, hours);\n                            modified = true;\n                        }\n                    } else if (frequency === 'monthly') {\n                        diff = current.getFullYear() - start.getFullYear();\n                        diff = current.getMonth() - start.getMonth() + diff * 12;\n                        excess = intervalExcess(diff, interval);\n                        if (excess !== 0) {\n                            day = rule._hasRuleValue ? 1 : current.getDate();\n                            current.setFullYear(current.getFullYear(), current.getMonth() + excess, day);\n                            adjustDST(current, hours);\n                            modified = true;\n                        }\n                    } else if (frequency === 'yearly') {\n                        diff = current.getFullYear() - start.getFullYear();\n                        excess = intervalExcess(diff, interval);\n                        if (!rule.months) {\n                            month = current.getMonth();\n                        }\n                        if (!rule.yearDays && !rule.monthDays && !rule.weekDays) {\n                            day = current.getDate();\n                        }\n                        if (excess !== 0) {\n                            current.setFullYear(current.getFullYear() + excess, month, day);\n                            adjustDST(current, hours);\n                            modified = true;\n                        }\n                    }\n                    return modified;\n                },\n                _getNumberOfWeeksBetweenDates: function (first, second) {\n                    var weeks = (second - first) / 604800000;\n                    var exactWeeks = Math.floor(weeks);\n                    if (weeks - exactWeeks > 0.99) {\n                        exactWeeks = Math.round(weeks);\n                    }\n                    return exactWeeks;\n                },\n                _hour: function (date, rule, interval) {\n                    var startTime = rule._startTime, hours = startTime.getHours();\n                    if (interval) {\n                        hours += interval;\n                    }\n                    date.setHours(hours);\n                    hours = hours % 24;\n                    startTime.setHours(hours);\n                    adjustDST(date, hours);\n                },\n                _date: function (date, rule, interval) {\n                    var hours = date.getHours();\n                    date.setDate(date.getDate() + interval);\n                    if (!adjustDST(date, hours)) {\n                        this._hour(date, rule);\n                    }\n                }\n            }), HourlyFrequency = BaseFrequency.extend({\n                next: function (date, rule) {\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        this._hour(date, rule, 1);\n                    }\n                },\n                normalize: function (options) {\n                    var rule = options.rule;\n                    if (options.idx === 4) {\n                        rule._startTime.setHours(0);\n                        this._hour(options.date, rule);\n                    }\n                }\n            }), DailyFrequency = BaseFrequency.extend({\n                next: function (date, rule) {\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        this[rule.hours ? '_hour' : '_date'](date, rule, 1);\n                    }\n                }\n            }), WeeklyFrequency = DailyFrequency.extend({\n                setup: function (rule, eventStartDate) {\n                    if (!rule.weekDays) {\n                        rule.weekDays = [{\n                                day: eventStartDate.getDay(),\n                                offset: 0\n                            }];\n                    }\n                }\n            }), MonthlyFrequency = BaseFrequency.extend({\n                next: function (date, rule) {\n                    var day, hours;\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        if (rule.hours) {\n                            this._hour(date, rule, 1);\n                        } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                            this._date(date, rule, 1);\n                        } else {\n                            day = date.getDate();\n                            hours = date.getHours();\n                            date.setMonth(date.getMonth() + 1);\n                            adjustDST(date, hours);\n                            while (date.getDate() !== day) {\n                                date.setDate(day);\n                                adjustDST(date, hours);\n                            }\n                            this._hour(date, rule);\n                        }\n                    }\n                },\n                normalize: function (options) {\n                    var rule = options.rule, date = options.date, hours = date.getHours();\n                    if (options.idx === 0 && !rule.monthDays && !rule.weekDays) {\n                        date.setDate(options.day);\n                        adjustDST(date, hours);\n                    } else {\n                        BaseFrequency.fn.normalize(options);\n                    }\n                },\n                setup: function (rule, eventStartDate, date) {\n                    if (!rule.monthDays && !rule.weekDays) {\n                        date.setDate(eventStartDate.getDate());\n                    }\n                }\n            }), YearlyFrequency = MonthlyFrequency.extend({\n                next: function (date, rule) {\n                    var day, hours = date.getHours();\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        if (rule.hours) {\n                            this._hour(date, rule, 1);\n                        } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                            this._date(date, rule, 1);\n                        } else if (rule.months) {\n                            day = date.getDate();\n                            date.setMonth(date.getMonth() + 1);\n                            adjustDST(date, hours);\n                            while (date.getDate() !== day) {\n                                date.setDate(day);\n                                adjustDST(date, hours);\n                            }\n                            this._hour(date, rule);\n                        } else {\n                            date.setFullYear(date.getFullYear() + 1);\n                            adjustDST(date, hours);\n                            this._hour(date, rule);\n                        }\n                    }\n                },\n                setup: function () {\n                }\n            }), frequencies = {\n                'hourly': new HourlyFrequency(),\n                'daily': new DailyFrequency(),\n                'weekly': new WeeklyFrequency(),\n                'monthly': new MonthlyFrequency(),\n                'yearly': new YearlyFrequency()\n            }, CLICK = 'click', CHANGE = 'change';\n        function intervalExcess(diff, interval) {\n            var excess;\n            if (diff !== 0 && diff < interval) {\n                excess = interval - diff;\n            } else {\n                excess = diff % interval;\n                if (excess) {\n                    excess = interval - excess;\n                }\n            }\n            return excess;\n        }\n        function dayInYear(date) {\n            var month = date.getMonth();\n            var days = leapYear(date) ? DAYS_IN_LEAPYEAR[month] : DAYS_IN_YEAR[month];\n            return days + date.getDate();\n        }\n        function weekInYear(date, weekStart) {\n            var year, days;\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n            adjustDST(date, 0);\n            year = date.getFullYear();\n            if (weekStart !== undefined) {\n                setDayOfWeek(date, weekStart, -1);\n                date.setDate(date.getDate() + 4);\n            } else {\n                date.setDate(date.getDate() + (4 - (date.getDay() || 7)));\n            }\n            adjustDST(date, 0);\n            days = Math.floor((date.getTime() - new Date(year, 0, 1, -6)) / 86400000);\n            return 1 + Math.floor(days / 7);\n        }\n        function weekInMonth(date, weekStart) {\n            var firstWeekDay = firstDayOfMonth(date).getDay();\n            var firstWeekLength = 7 - (firstWeekDay + 7 - (weekStart || 7)) || 7;\n            if (firstWeekLength < 0) {\n                firstWeekLength += 7;\n            }\n            return Math.ceil((date.getDate() - firstWeekLength) / 7) + 1;\n        }\n        function normalizeDayIndex(weekDay, weekStart) {\n            return weekDay + (weekDay < weekStart ? 7 : 0);\n        }\n        function normalizeOffset(date, rule, weekStart) {\n            var offset = rule.offset;\n            if (!offset) {\n                return weekInMonth(date, weekStart);\n            }\n            var lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n            var weeksInMonth = weekInMonth(lastDate, weekStart);\n            var day = normalizeDayIndex(rule.day, weekStart);\n            var skipFirst = day < normalizeDayIndex(new Date(date.getFullYear(), date.getMonth(), 1).getDay(), weekStart);\n            var skipLast = day > normalizeDayIndex(lastDate.getDay(), weekStart);\n            if (offset < 0) {\n                offset = weeksInMonth + (offset + 1 - (skipLast ? 1 : 0));\n            } else if (skipFirst) {\n                offset += 1;\n            }\n            weeksInMonth -= skipLast ? 1 : 0;\n            if (offset < (skipFirst ? 1 : 0) || offset > weeksInMonth) {\n                return null;\n            }\n            return offset;\n        }\n        function numberOfWeeks(date, weekStart) {\n            return weekInMonth(new Date(date.getFullYear(), date.getMonth() + 1, 0), weekStart);\n        }\n        function isInWeek(date, rule, weekStart) {\n            return weekInMonth(date, weekStart) === normalizeOffset(date, rule, weekStart);\n        }\n        function ruleWeekValues(weekDays, date, weekStart) {\n            var currentDay = normalizeDayIndex(date.getDay(), weekStart);\n            var length = weekDays.length;\n            var ruleWeekOffset;\n            var weekDay, day;\n            var weekNumber;\n            var result = [];\n            var idx = 0;\n            for (; idx < length; idx++) {\n                weekDay = weekDays[idx];\n                weekNumber = weekInMonth(date, weekStart);\n                ruleWeekOffset = normalizeOffset(date, weekDay, weekStart);\n                if (ruleWeekOffset === null) {\n                    continue;\n                }\n                if (weekNumber < ruleWeekOffset) {\n                    result.push(weekDay);\n                } else if (weekNumber === ruleWeekOffset) {\n                    day = normalizeDayIndex(weekDay.day, weekStart);\n                    if (currentDay < day) {\n                        result.push(weekDay);\n                    } else if (currentDay === day) {\n                        return null;\n                    }\n                }\n            }\n            return result;\n        }\n        function ruleValues(rules, value, normalize) {\n            var idx = 0, length = rules.length, availableRules = [], ruleValue;\n            for (; idx < length; idx++) {\n                ruleValue = rules[idx];\n                if (normalize) {\n                    ruleValue = normalize(ruleValue);\n                }\n                if (value === ruleValue) {\n                    return null;\n                } else if (value < ruleValue) {\n                    availableRules.push(ruleValue);\n                }\n            }\n            return availableRules;\n        }\n        function parseArray(list, range) {\n            var idx = 0, length = list.length, value;\n            for (; idx < length; idx++) {\n                value = parseInt(list[idx], 10);\n                if (isNaN(value) || value < range.start || value > range.end || value === 0 && range.start < 0) {\n                    return null;\n                }\n                list[idx] = value;\n            }\n            return list.sort(numberSortPredicate);\n        }\n        function parseWeekDayList(list) {\n            var idx = 0, length = list.length, value, valueLength, day;\n            for (; idx < length; idx++) {\n                value = list[idx];\n                valueLength = value.length;\n                day = value.substring(valueLength - 2).toUpperCase();\n                day = WEEK_DAYS_IDX[day];\n                if (day === undefined) {\n                    return null;\n                }\n                list[idx] = {\n                    offset: parseInt(value.substring(0, valueLength - 2), 10) || 0,\n                    day: day\n                };\n            }\n            return list;\n        }\n        function serializeWeekDayList(list) {\n            var idx = 0, length = list.length, value, valueString, result = [];\n            for (; idx < length; idx++) {\n                value = list[idx];\n                if (typeof value === 'string') {\n                    valueString = value;\n                } else {\n                    valueString = '' + WEEK_DAYS[value.day];\n                    if (value.offset) {\n                        valueString = value.offset + valueString;\n                    }\n                }\n                result.push(valueString);\n            }\n            return result.toString();\n        }\n        function getMonthLength(date) {\n            var month = date.getMonth();\n            if (month === 1) {\n                if (new Date(date.getFullYear(), 1, 29).getMonth() === 1) {\n                    return 29;\n                }\n                return 28;\n            }\n            return MONTHS[month];\n        }\n        function leapYear(year) {\n            year = year.getFullYear();\n            return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n        }\n        function numberSortPredicate(a, b) {\n            return a - b;\n        }\n        function parseExceptions(exceptions, zone) {\n            var idx = 0, length, date, dates = [];\n            if (exceptions) {\n                exceptions = exceptions.split(exceptions.indexOf(';') !== -1 ? ';' : ',');\n                length = exceptions.length;\n                for (; idx < length; idx++) {\n                    date = parseUTCDate(exceptions[idx], zone);\n                    if (date) {\n                        dates.push(date);\n                    }\n                }\n            }\n            return dates;\n        }\n        function isException(exceptions, date, zone) {\n            var dates = Array.isArray(exceptions) ? exceptions : parseExceptions(exceptions, zone), dateTime = date.getTime() - date.getMilliseconds(), idx = 0, length = dates.length;\n            for (; idx < length; idx++) {\n                if (dates[idx].getTime() === dateTime) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function toExceptionString(dates, zone) {\n            var idx = 0;\n            var length;\n            var date;\n            var result = [].concat(dates);\n            for (length = result.length; idx < length; idx++) {\n                date = result[idx];\n                date = kendo.timezone.convert(date, zone || date.getTimezoneOffset(), 'Etc/UTC');\n                result[idx] = kendo.toString(date, RECURRENCE_DATE_FORMAT);\n            }\n            return result.join(',');\n        }\n        function startPeriodByFreq(start, rule) {\n            var date = new Date(start);\n            switch (rule.freq) {\n            case 'yearly':\n                date.setFullYear(date.getFullYear(), 0, 1);\n                break;\n            case 'monthly':\n                date.setFullYear(date.getFullYear(), date.getMonth(), 1);\n                break;\n            case 'weekly':\n                setDayOfWeek(date, rule.weekStart, -1);\n                break;\n            default:\n                break;\n            }\n            if (rule.hours) {\n                date.setHours(0);\n            }\n            if (rule.minutes) {\n                date.setMinutes(0);\n            }\n            if (rule.seconds) {\n                date.setSeconds(0);\n            }\n            return date;\n        }\n        function endPeriodByFreq(start, rule) {\n            var date = new Date(start);\n            switch (rule.freq) {\n            case 'yearly':\n                date.setFullYear(date.getFullYear(), 11, 31);\n                break;\n            case 'monthly':\n                date.setFullYear(date.getFullYear(), date.getMonth() + 1, 0);\n                break;\n            case 'weekly':\n                setDayOfWeek(date, rule.weekStart, -1);\n                date.setDate(date.getDate() + 6);\n                break;\n            default:\n                break;\n            }\n            if (rule.hours) {\n                date.setHours(23);\n            }\n            if (rule.minutes) {\n                date.setMinutes(59);\n            }\n            if (rule.seconds) {\n                date.setSeconds(59);\n            }\n            return date;\n        }\n        function eventsByPosition(periodEvents, start, positions, until) {\n            var periodEventsLength = periodEvents.length;\n            var events = [];\n            var position;\n            var event;\n            var inPeriod;\n            for (var idx = 0, length = positions.length; idx < length; idx++) {\n                position = positions[idx];\n                if (position < 0) {\n                    position = periodEventsLength + position;\n                } else {\n                    position -= 1;\n                }\n                event = periodEvents[position];\n                inPeriod = until ? event.start < until : true;\n                if (event && event.start >= start && inPeriod) {\n                    events.push(event);\n                }\n            }\n            return events;\n        }\n        function removeExceptionDates(periodEvents, exceptionDates, zone) {\n            var events = [];\n            var event;\n            for (var idx = 0; idx < periodEvents.length; idx++) {\n                event = periodEvents[idx];\n                if (!isException(exceptionDates, event.start, zone)) {\n                    events.push(event);\n                }\n            }\n            return events;\n        }\n        function expand(event, start, end, zone) {\n            var rule, startTime, endTime, endDate, hours, minutes, seconds, durationMS, startPeriod, inPeriod, ruleStart, ruleEnd, useEventStart, freqName, exceptionDates, eventStartTime, eventStartMS, eventStart, count, freq, positions, currentIdx, periodEvents, events = [], shiftedStart, shiftedEnd, shiftedStartTime, shifterEndTime;\n            rule = parseRule(event.recurrenceRule, zone, {\n                start: (getZoneOffset(event.start, zone) - getZoneOffset(event.start, event.startTimezone)) * kendo.date.MS_PER_MINUTE,\n                end: (getZoneOffset(event.end, zone) - getZoneOffset(event.end, event.endTimezone)) * kendo.date.MS_PER_MINUTE\n            });\n            if (!rule) {\n                return [event];\n            }\n            positions = rule.positions;\n            currentIdx = positions ? 0 : 1;\n            ruleStart = rule.start;\n            ruleEnd = rule.end;\n            if (ruleStart || ruleEnd) {\n                event = event.clone({\n                    start: ruleStart ? new Date(ruleStart.value[0]) : undefined,\n                    end: ruleEnd ? new Date(ruleEnd.value[0]) : undefined\n                });\n            }\n            eventStart = event.start;\n            eventStartMS = eventStart.getTime();\n            eventStartTime = getMilliseconds(eventStart);\n            exceptionDates = parseExceptions(event.recurrenceException, zone);\n            if (!exceptionDates[0] && rule.exdates) {\n                exceptionDates = rule.exdates.value;\n                event.set('recurrenceException', toExceptionString(exceptionDates, zone));\n            }\n            startPeriod = start = new Date(start);\n            end = new Date(end);\n            freqName = rule.freq;\n            freq = frequencies[freqName];\n            count = rule.count;\n            if (rule.until && rule.until < end) {\n                end = new Date(rule.until);\n            }\n            useEventStart = freqName === 'yearly' || freqName === 'monthly' || freqName === 'weekly';\n            if (start < eventStartMS || count || rule.interval > 1 || useEventStart || (freqName === 'daily' || freqName === 'hourly') && !rule.seconds) {\n                start = new Date(eventStartMS);\n            } else {\n                hours = start.getHours();\n                minutes = start.getMinutes();\n                seconds = start.getSeconds();\n                if (!rule.hours) {\n                    hours = eventStart.getHours();\n                }\n                if (!rule.minutes) {\n                    minutes = eventStart.getMinutes();\n                }\n                if (!rule.seconds) {\n                    seconds = eventStart.getSeconds();\n                }\n                start.setHours(hours, minutes, seconds, eventStart.getMilliseconds());\n            }\n            rule._startPeriod = new Date(start);\n            if (positions) {\n                start = startPeriodByFreq(start, rule);\n                end = endPeriodByFreq(end, rule);\n                var diff = getMilliseconds(end) - getMilliseconds(start);\n                if (diff < 0) {\n                    hours = start.getHours();\n                    end.setHours(hours, start.getMinutes(), start.getSeconds(), start.getMilliseconds());\n                    kendoDate.adjustDST(end, hours);\n                }\n                rule._startPeriod = new Date(start);\n                rule._endPeriod = endPeriodByFreq(start, rule);\n            }\n            durationMS = event.duration();\n            var allDayCompensation = event.isAllDay ? 86400000 : 0;\n            rule._startTime = startTime = kendoDate.toInvariantTime(start);\n            if (freq.setup) {\n                freq.setup(rule, eventStart, start);\n            }\n            freq.limit(start, end, rule);\n            while (start <= end) {\n                endDate = new Date(start);\n                setTime(endDate, durationMS);\n                var inPeriodCheckEndDate = new Date(start);\n                setTime(inPeriodCheckEndDate, durationMS + allDayCompensation);\n                inPeriod = start >= startPeriod || inPeriodCheckEndDate > startPeriod;\n                if (inPeriod && !isException(exceptionDates, start, zone) || positions) {\n                    startTime = kendoDate.toUtcTime(kendoDate.getDate(start)) + getMilliseconds(rule._startTime);\n                    endTime = startTime + durationMS;\n                    if (eventStartMS !== start.getTime() || eventStartTime !== getMilliseconds(rule._startTime)) {\n                        var startZone = event.startTimezone || event.endTimezone;\n                        var endZone = event.endTimezone || event.startTimezone;\n                        if (!event.isAllDay) {\n                            if (zone && startZone || !zone && !startZone) {\n                                var startOffsetDiff = getZoneOffset(start, zone) - getZoneOffset(event.start, zone);\n                                var endOffsetDiff = getZoneOffset(endDate, zone) - getZoneOffset(event.end, zone);\n                                var startTZOffsetDiff = getZoneOffset(start, startZone) - getZoneOffset(event.start, startZone);\n                                var endTZOffsetDiff = getZoneOffset(endDate, endZone) - getZoneOffset(event.end, endZone);\n                                if (startOffsetDiff !== startTZOffsetDiff) {\n                                    var offsetTicksStart = (startOffsetDiff - startTZOffsetDiff) * 60000;\n                                    shiftedStart = new Date(start.getTime() - offsetTicksStart);\n                                    shiftedStartTime = startTime - offsetTicksStart;\n                                }\n                                if (endOffsetDiff !== endTZOffsetDiff) {\n                                    var offsetTicksEnd = (endOffsetDiff - endTZOffsetDiff) * 60000;\n                                    shiftedEnd = new Date(endDate.getTime() - offsetTicksEnd);\n                                    shifterEndTime = endTime - offsetTicksEnd;\n                                }\n                            }\n                        }\n                        events.push(event.toOccurrence({\n                            start: shiftedStart || new Date(start),\n                            end: shiftedEnd || endDate,\n                            _startTime: shiftedStartTime || startTime,\n                            _endTime: shifterEndTime || endTime\n                        }));\n                        shiftedStart = shiftedEnd = shiftedStartTime = shifterEndTime = null;\n                    } else {\n                        event._startTime = startTime;\n                        event._endTime = endTime;\n                        events.push(event);\n                    }\n                }\n                if (positions) {\n                    freq.next(start, rule);\n                    freq.limit(start, end, rule);\n                    if (start > rule._endPeriod) {\n                        periodEvents = eventsByPosition(events.slice(currentIdx), eventStart, positions, rule.until);\n                        periodEvents = removeExceptionDates(periodEvents, exceptionDates, zone);\n                        events = events.slice(0, currentIdx).concat(periodEvents);\n                        rule._endPeriod = endPeriodByFreq(start, rule);\n                        currentIdx = events.length;\n                    }\n                    if (count && count === currentIdx) {\n                        break;\n                    }\n                } else {\n                    if (count && count === currentIdx) {\n                        break;\n                    }\n                    currentIdx += 1;\n                    var isMissingDSTHour = isDSTMissingHour(start);\n                    freq.next(start, rule);\n                    if (isMissingDSTHour && rule.freq !== 'hourly' && kendoDate.toInvariantTime(event.start).getTime() !== kendoDate.toInvariantTime(start).getTime()) {\n                        rule._startTime = startTime = new Date(start.getTime() - 3600000);\n                    }\n                    freq.limit(start, end, rule);\n                }\n            }\n            return events;\n        }\n        function isDSTMissingHour(date) {\n            var dateOffset = date.getTimezoneOffset();\n            var dateMinusHour = new Date(date.getTime() - 3600000);\n            var dateMinusHourOffset = dateMinusHour.getTimezoneOffset();\n            return dateOffset < dateMinusHourOffset;\n        }\n        function getZoneOffset(date, zone) {\n            return zone ? kendo.timezone.offset(date, zone) : date.getTimezoneOffset();\n        }\n        function parseUTCDate(value, zone) {\n            value = kendo.parseDate(value, DATE_FORMATS);\n            if (value && zone) {\n                value = timezone.apply(value, zone);\n            }\n            return value;\n        }\n        function parseDateRule(dateRule, zone) {\n            var pairs = dateRule.split(';');\n            var pair;\n            var property;\n            var value;\n            var tzid;\n            var valueIdx, valueLength;\n            for (var idx = 0, length = pairs.length; idx < length; idx++) {\n                pair = pairs[idx].split(':');\n                property = pair[0];\n                value = pair[1];\n                if (property.indexOf('TZID') !== -1) {\n                    tzid = property.substring(property.indexOf('TZID')).split('=')[1];\n                }\n                if (value) {\n                    value = value.split(',');\n                    for (valueIdx = 0, valueLength = value.length; valueIdx < valueLength; valueIdx++) {\n                        value[valueIdx] = parseUTCDate(value[valueIdx], tzid || zone);\n                    }\n                }\n            }\n            if (value) {\n                return {\n                    value: value,\n                    tzid: tzid\n                };\n            }\n        }\n        function parseRule(recur, zone, offsets) {\n            var instance = {};\n            var splits, value;\n            var idx = 0, length;\n            var ruleValue = false;\n            var rule, part, parts;\n            var property, weekStart, weekDays;\n            var predicate = function (a, b) {\n                var day1 = a.day, day2 = b.day;\n                if (day1 < weekStart) {\n                    day1 += 7;\n                }\n                if (day2 < weekStart) {\n                    day2 += 7;\n                }\n                return day1 - day2;\n            };\n            if (!recur) {\n                return null;\n            }\n            parts = recur.split('\\n');\n            if (!parts[1] && (recur.indexOf('DTSTART') !== -1 || recur.indexOf('DTEND') !== -1 || recur.indexOf('EXDATE') !== -1)) {\n                parts = recur.split(' ');\n            }\n            for (idx = 0, length = parts.length; idx < length; idx++) {\n                part = kendo.trim(parts[idx]);\n                if (part.indexOf('DTSTART') !== -1) {\n                    instance.start = parseDateRule(part, zone);\n                } else if (part.indexOf('DTEND') !== -1) {\n                    instance.end = parseDateRule(part, zone);\n                } else if (part.indexOf('EXDATE') !== -1) {\n                    instance.exdates = parseDateRule(part, zone);\n                } else if (part.indexOf('RRULE') !== -1) {\n                    rule = part.substring(6);\n                } else if (kendo.trim(part)) {\n                    rule = part;\n                }\n            }\n            rule = rule.split(';');\n            for (idx = 0, length = rule.length; idx < length; idx++) {\n                property = rule[idx];\n                splits = property.split('=');\n                value = kendo.trim(splits[1]).split(',');\n                switch (kendo.trim(splits[0]).toUpperCase()) {\n                case 'FREQ':\n                    instance.freq = value[0].toLowerCase();\n                    break;\n                case 'UNTIL':\n                    instance.until = parseUTCDate(value[0], zone);\n                    break;\n                case 'COUNT':\n                    instance.count = parseInt(value[0], 10);\n                    break;\n                case 'INTERVAL':\n                    instance.interval = parseInt(value[0], 10);\n                    break;\n                case 'BYSECOND':\n                    instance.seconds = parseArray(value, {\n                        start: 0,\n                        end: 60\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYMINUTE':\n                    instance.minutes = parseArray(value, {\n                        start: 0,\n                        end: 59\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYHOUR':\n                    instance.hours = parseArray(value, {\n                        start: 0,\n                        end: 23\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYMONTHDAY':\n                    instance.monthDays = parseArray(value, {\n                        start: -31,\n                        end: 31\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYYEARDAY':\n                    instance.yearDays = parseArray(value, {\n                        start: -366,\n                        end: 366\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYMONTH':\n                    instance.months = parseArray(value, {\n                        start: 1,\n                        end: 12\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYDAY':\n                    instance.weekDays = weekDays = parseWeekDayList(value);\n                    ruleValue = true;\n                    break;\n                case 'BYWEEKNO':\n                    instance.weeks = parseArray(value, {\n                        start: -53,\n                        end: 53\n                    });\n                    ruleValue = true;\n                    break;\n                case 'BYSETPOS':\n                    instance.positions = parseArray(value, {\n                        start: -366,\n                        end: 366\n                    });\n                    break;\n                case 'WKST':\n                    instance.weekStart = weekStart = WEEK_DAYS_IDX[value[0]];\n                    break;\n                }\n            }\n            if (instance.freq === undefined || instance.count !== undefined && instance.until) {\n                return null;\n            }\n            if (!instance.interval) {\n                instance.interval = 1;\n            }\n            if (weekStart === undefined) {\n                instance.weekStart = weekStart = kendo.culture().calendar.firstDay;\n            }\n            if (weekDays) {\n                instance.weekDays = weekDays.sort(predicate);\n            }\n            if (instance.positions && !ruleValue) {\n                instance.positions = null;\n            }\n            instance._hasRuleValue = ruleValue;\n            instance.offsets = offsets;\n            return instance;\n        }\n        function serializeDateRule(dateRule, zone) {\n            var value = dateRule.value;\n            var tzid = dateRule.tzid || '';\n            var length = value.length;\n            var idx = 0;\n            var val;\n            for (; idx < length; idx++) {\n                val = value[idx];\n                val = timezone.convert(val, tzid || zone || val.getTimezoneOffset(), 'Etc/UTC');\n                value[idx] = kendo.toString(val, 'yyyyMMddTHHmmssZ');\n            }\n            if (tzid) {\n                tzid = ';TZID=' + tzid;\n            }\n            return tzid + ':' + value.join(',') + ' ';\n        }\n        function serialize(rule, zone) {\n            var weekStart = rule.weekStart;\n            var ruleString = 'FREQ=' + rule.freq.toUpperCase();\n            var exdates = rule.exdates || '';\n            var start = rule.start || '';\n            var end = rule.end || '';\n            var until = rule.until;\n            if (weekStart === undefined) {\n                weekStart = kendo.culture().calendar.firstDay;\n            }\n            if (rule.interval > 1) {\n                ruleString += ';INTERVAL=' + rule.interval;\n            }\n            if (rule.count) {\n                ruleString += ';COUNT=' + rule.count;\n            }\n            if (until) {\n                until = timezone.convert(until, zone || until.getTimezoneOffset(), 'Etc/UTC');\n                ruleString += ';UNTIL=' + kendo.toString(until, 'yyyyMMddTHHmmssZ');\n            }\n            if (rule.months) {\n                ruleString += ';BYMONTH=' + rule.months;\n            }\n            if (rule.weeks) {\n                ruleString += ';BYWEEKNO=' + rule.weeks;\n            }\n            if (rule.yearDays) {\n                ruleString += ';BYYEARDAY=' + rule.yearDays;\n            }\n            if (rule.monthDays) {\n                ruleString += ';BYMONTHDAY=' + rule.monthDays;\n            }\n            if (rule.weekDays) {\n                ruleString += ';BYDAY=' + serializeWeekDayList(rule.weekDays);\n            }\n            if (rule.hours) {\n                ruleString += ';BYHOUR=' + rule.hours;\n            }\n            if (rule.minutes) {\n                ruleString += ';BYMINUTE=' + rule.minutes;\n            }\n            if (rule.seconds) {\n                ruleString += ';BYSECOND=' + rule.seconds;\n            }\n            if (rule.positions) {\n                ruleString += ';BYSETPOS=' + rule.positions;\n            }\n            if (weekStart !== undefined) {\n                ruleString += ';WKST=' + WEEK_DAYS[weekStart];\n            }\n            if (start) {\n                start = 'DTSTART' + serializeDateRule(start, zone);\n            }\n            if (end) {\n                end = 'DTEND' + serializeDateRule(end, zone);\n            }\n            if (exdates) {\n                exdates = 'EXDATE' + serializeDateRule(exdates, zone);\n            }\n            if (start || end || exdates) {\n                ruleString = start + end + exdates + 'RRULE:' + ruleString;\n            }\n            return ruleString;\n        }\n        kendo.recurrence = {\n            rule: {\n                parse: parseRule,\n                serialize: serialize\n            },\n            expand: expand,\n            dayInYear: dayInYear,\n            weekInYear: weekInYear,\n            weekInMonth: weekInMonth,\n            numberOfWeeks: numberOfWeeks,\n            isException: isException,\n            toExceptionString: toExceptionString\n        };\n        var RECURRENCE_VIEW_TEMPLATE = kendo.template('# if (frequency !== \"never\") { #' + '<div class=\"k-edit-label\"><label>#:messages.repeatEvery#</label></div>' + '<div class=\"k-edit-field\"><input class=\"k-recur-interval\" title=\"#:messages.repeatEvery# #:messages.interval#\"/>#:messages.interval#</div>' + '# } #' + '# if (frequency === \"weekly\") { #' + '<div class=\"k-edit-label\"><label>#:messages.repeatOn#</label></div>' + '<div class=\"k-edit-field\"><div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"#:messages.repeatOn#\"></div></div>' + '# } else if (frequency === \"monthly\") { #' + '<div class=\"k-edit-label\"><label>#:messages.repeatOn#</label></div>' + '<div class=\"k-edit-field\">' + '<ul class=\"k-reset\">' + '<li>' + '<label class=\"k-radio-label\"><input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"monthday\" title=\"#:messages.repeatOn#\" />#:messages.date#:</label>' + '<input class=\"k-recur-monthday\" title=\"#:messages.date#\" />' + '</li>' + '<li>' + '<input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"weekday\" title=\"#:messages.repeatOn# #:messages.day#\" />' + '<input class=\"k-recur-weekday-offset\" title=\"#:messages.repeatOn#\" /><input class=\"k-recur-weekday\" title=\"#:messages.day#\" />' + '</li>' + '</ul>' + '</div>' + '# } else if (frequency === \"yearly\") { #' + '<div class=\"k-edit-label\"><label>#:messages.repeatOn#</label></div>' + '<div class=\"k-edit-field\">' + '<ul class=\"k-reset\">' + '<li>' + '<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"monthday\" title=\"#:messages.repeatOn# #:messages.month#\" />' + '<input class=\"k-recur-month\" title=\"#:messages.month#\" /><input class=\"k-recur-monthday\" title=\"#:messages.date#\" />' + '</li>' + '<li>' + '<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"weekday\" title=\"#:messages.repeatOn# #:messages.day#\" />' + '<input class=\"k-recur-weekday-offset\" title=\"#:messages.repeatOn#\" /><input class=\"k-recur-weekday\" title=\"#:messages.day#\"  />#:messages.of#<input class=\"k-recur-month\" title=\"#:messages.of + messages.month#\"/>' + '</li>' + '</ul>' + '</div>' + '# } #' + '# if (frequency !== \"never\") { #' + '<div class=\"k-edit-label\"><label>#:end.label#</label></div>' + '<div class=\"k-edit-field\">' + '<ul class=\"k-reset\">' + '<li>' + '<label class=\"k-radio-label\"><input class=\"k-recur-end-never k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"never\" title=\"#:end.label#\" />#:end.never#</label>' + '</li>' + '<li>' + '<label class=\"k-radio-label\"><input class=\"k-recur-end-count k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"count\" title=\"#:end.label#\" />#:end.after#</label>' + '<input class=\"k-recur-count\" title=\"#:end.occurrence#\" />#:end.occurrence#' + '</li>' + '<li>' + '<label class=\"k-radio-label\"><input class=\"k-recur-end-until k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"until\" title=\"#:end.label#\" />#:end.on#</label>' + '<input class=\"k-recur-until\" title=\"#:end.on#\" name=\"recur-until\" />' + '</li>' + '</ul>' + '</div>' + '# } #');\n        var DAY_RULE = [\n            {\n                day: 0,\n                offset: 0\n            },\n            {\n                day: 1,\n                offset: 0\n            },\n            {\n                day: 2,\n                offset: 0\n            },\n            {\n                day: 3,\n                offset: 0\n            },\n            {\n                day: 4,\n                offset: 0\n            },\n            {\n                day: 5,\n                offset: 0\n            },\n            {\n                day: 6,\n                offset: 0\n            }\n        ];\n        var WEEKDAY_RULE = [\n            {\n                day: 1,\n                offset: 0\n            },\n            {\n                day: 2,\n                offset: 0\n            },\n            {\n                day: 3,\n                offset: 0\n            },\n            {\n                day: 4,\n                offset: 0\n            },\n            {\n                day: 5,\n                offset: 0\n            }\n        ];\n        var WEEKEND_RULE = [\n            {\n                day: 0,\n                offset: 0\n            },\n            {\n                day: 6,\n                offset: 0\n            }\n        ];\n        var BaseRecurrenceEditor = Widget.extend({\n            init: function (element, options) {\n                var start;\n                var that = this;\n                var frequencies = options && options.frequencies;\n                Widget.fn.init.call(that, element, options);\n                that.wrapper = that.element;\n                options = that.options;\n                options.start = start = options.start || kendoDate.today();\n                if (frequencies) {\n                    options.frequencies = frequencies;\n                }\n                if (typeof start === 'string') {\n                    options.start = kendo.parseDate(start, 'yyyyMMddTHHmmss');\n                }\n                if (options.firstWeekDay === null) {\n                    options.firstWeekDay = kendo.culture().calendar.firstDay;\n                }\n                that._namespace = '.' + options.name;\n            },\n            options: {\n                value: '',\n                start: '',\n                timezone: '',\n                spinners: true,\n                firstWeekDay: null,\n                frequencies: [\n                    'never',\n                    'daily',\n                    'weekly',\n                    'monthly',\n                    'yearly'\n                ],\n                mobile: false,\n                messages: {\n                    repeat: 'Repeat',\n                    recurrenceEditorTitle: 'Recurrence editor',\n                    frequencies: {\n                        never: 'Never',\n                        hourly: 'Hourly',\n                        daily: 'Daily',\n                        weekly: 'Weekly',\n                        monthly: 'Monthly',\n                        yearly: 'Yearly'\n                    },\n                    hourly: {\n                        repeatEvery: 'Repeat every: ',\n                        interval: ' hour(s)'\n                    },\n                    daily: {\n                        repeatEvery: 'Repeat every: ',\n                        interval: ' day(s)'\n                    },\n                    weekly: {\n                        interval: ' week(s)',\n                        repeatEvery: 'Repeat every: ',\n                        repeatOn: 'Repeat on: '\n                    },\n                    monthly: {\n                        repeatEvery: 'Repeat every: ',\n                        repeatOn: 'Repeat on: ',\n                        interval: ' month(s)',\n                        day: 'Day ',\n                        date: 'Date'\n                    },\n                    yearly: {\n                        repeatEvery: 'Repeat every: ',\n                        repeatOn: 'Repeat on: ',\n                        interval: ' year(s)',\n                        of: ' of ',\n                        month: 'month',\n                        day: 'day',\n                        date: 'Date'\n                    },\n                    end: {\n                        label: 'End:',\n                        mobileLabel: 'Ends',\n                        never: 'Never',\n                        after: 'After ',\n                        occurrence: ' occurrence(s)',\n                        on: 'On '\n                    },\n                    offsetPositions: {\n                        first: 'first',\n                        second: 'second',\n                        third: 'third',\n                        fourth: 'fourth',\n                        last: 'last'\n                    },\n                    weekdays: {\n                        day: 'day',\n                        weekday: 'weekday',\n                        weekend: 'weekend day'\n                    }\n                }\n            },\n            events: ['change'],\n            _initInterval: function () {\n                var that = this;\n                var rule = that._value;\n                that._container.find('.k-recur-interval').kendoNumericTextBox({\n                    spinners: that.options.spinners,\n                    value: rule.interval || 1,\n                    decimals: 0,\n                    format: '#',\n                    min: 1,\n                    change: function () {\n                        rule.interval = this.value();\n                        that._trigger();\n                    }\n                });\n            },\n            _weekDayButtons: function (firstDay) {\n                var that = this, names = kendo.culture().calendar.days.names, abbreviated = kendo.culture().calendar.days.namesAbbr, repeatOn = that.options.messages.weekly.repeatOn, length = names.length, idx = 0, values = [], items = [];\n                for (; idx < length; idx++) {\n                    values.push(idx);\n                }\n                names = names.slice(firstDay).concat(names.slice(0, firstDay));\n                abbreviated = abbreviated.slice(firstDay).concat(abbreviated.slice(0, firstDay));\n                values = values.slice(firstDay).concat(values.slice(0, firstDay));\n                for (idx = 0; idx < length; idx++) {\n                    items.push({\n                        text: abbreviated[idx],\n                        attributes: {\n                            'data-value': values[idx],\n                            'aria-label': repeatOn + ' ' + names[idx]\n                        }\n                    });\n                }\n                that._weekDayButtonGroup = new ButtonGroup(that._container.find('.k-recur-weekday-buttons'), {\n                    items: items,\n                    selection: 'multiple',\n                    select: function () {\n                        var rule = that._value, selectedDays = that._weekDayButtonGroup.current();\n                        rule.weekDays = selectedDays.map(function (i, day) {\n                            return {\n                                day: Number(day.getAttribute('data-value')),\n                                offset: 0\n                            };\n                        });\n                        if (!that.options.mobile) {\n                            that._trigger();\n                        }\n                    }\n                });\n            },\n            _weekDayRule: function (clear) {\n                var that = this;\n                var weekday = (that._weekDay.element || that._weekDay).val();\n                var offset = Number((that._weekDayOffset.element || that._weekDayOffset).val());\n                var weekDays = null;\n                var positions = null;\n                if (!clear) {\n                    if (weekday === 'day') {\n                        weekDays = DAY_RULE;\n                        positions = offset;\n                    } else if (weekday === 'weekday') {\n                        weekDays = WEEKDAY_RULE;\n                        positions = offset;\n                    } else if (weekday === 'weekend') {\n                        weekDays = WEEKEND_RULE;\n                        positions = offset;\n                    } else {\n                        weekDays = [{\n                                offset: offset,\n                                day: Number(weekday)\n                            }];\n                    }\n                }\n                that._value.weekDays = weekDays;\n                that._value.positions = positions;\n            },\n            _weekDayView: function () {\n                var that = this;\n                var weekDays = that._value.weekDays;\n                var positions = that._value.positions;\n                var weekDayOffsetWidget = that._weekDayOffset;\n                var weekDayOffset;\n                var weekDayValue;\n                var length;\n                var method;\n                if (weekDays) {\n                    length = weekDays.length;\n                    if (positions) {\n                        if (length === 7) {\n                            weekDayValue = 'day';\n                            weekDayOffset = positions;\n                        } else if (length === 5) {\n                            weekDayValue = 'weekday';\n                            weekDayOffset = positions;\n                        } else if (length === 2) {\n                            weekDayValue = 'weekend';\n                            weekDayOffset = positions;\n                        }\n                    }\n                    if (!weekDayValue) {\n                        weekDays = weekDays[0];\n                        weekDayValue = weekDays.day;\n                        weekDayOffset = weekDays.offset || '';\n                    }\n                    method = weekDayOffsetWidget.value ? 'value' : 'val';\n                    weekDayOffsetWidget[method](weekDayOffset);\n                    that._weekDay[method](weekDayValue);\n                }\n            },\n            _initWeekDay: function () {\n                var that = this, data;\n                var weekdayMessage = that.options.messages.weekdays;\n                var offsetMessage = that.options.messages.offsetPositions;\n                var weekDayInput = that._container.find('.k-recur-weekday');\n                var change = function () {\n                    that._weekDayRule();\n                    that._trigger();\n                };\n                if (weekDayInput[0]) {\n                    that._weekDayOffset = new DropDownList(that._container.find('.k-recur-weekday-offset'), {\n                        change: change,\n                        dataTextField: 'text',\n                        dataValueField: 'value',\n                        dataSource: [\n                            {\n                                text: offsetMessage.first,\n                                value: '1'\n                            },\n                            {\n                                text: offsetMessage.second,\n                                value: '2'\n                            },\n                            {\n                                text: offsetMessage.third,\n                                value: '3'\n                            },\n                            {\n                                text: offsetMessage.fourth,\n                                value: '4'\n                            },\n                            {\n                                text: offsetMessage.last,\n                                value: '-1'\n                            }\n                        ]\n                    });\n                    data = [\n                        {\n                            text: weekdayMessage.day,\n                            value: 'day'\n                        },\n                        {\n                            text: weekdayMessage.weekday,\n                            value: 'weekday'\n                        },\n                        {\n                            text: weekdayMessage.weekend,\n                            value: 'weekend'\n                        }\n                    ];\n                    that._weekDay = new DropDownList(weekDayInput, {\n                        value: that.options.start.getDay(),\n                        change: change,\n                        dataTextField: 'text',\n                        dataValueField: 'value',\n                        dataSource: data.concat($.map(kendo.culture().calendar.days.names, function (dayName, idx) {\n                            return {\n                                text: dayName,\n                                value: idx\n                            };\n                        }))\n                    });\n                    that._weekDayView();\n                }\n            },\n            _initWeekDays: function () {\n                var that = this;\n                var rule = that._value;\n                var weekDayButtonGroup = that._weekDayButtonGroup;\n                if (weekDayButtonGroup && rule.weekDays && rule.weekDays.length) {\n                    var ruleDays = rule.weekDays, ruleDaysLength = ruleDays.length, selectors = [], i = 0, selectedWeekDayButtons;\n                    for (; i < ruleDaysLength; i++) {\n                        selectors.push('[data-value=\\'' + ruleDays[i].day + '\\']');\n                    }\n                    selectedWeekDayButtons = weekDayButtonGroup.element.find(selectors.join(','));\n                    weekDayButtonGroup.select(selectedWeekDayButtons);\n                }\n            },\n            _initMonthDay: function () {\n                var that = this;\n                var rule = that._value;\n                var monthDayInput = that._container.find('.k-recur-monthday');\n                if (monthDayInput[0]) {\n                    that._monthDay = new kendo.ui.NumericTextBox(monthDayInput, {\n                        spinners: that.options.spinners,\n                        min: 1,\n                        max: 31,\n                        decimals: 0,\n                        format: '#',\n                        value: rule.monthDays ? rule.monthDays[0] : that.options.start.getDate(),\n                        change: function () {\n                            var value = this.value();\n                            rule.monthDays = value ? [value] : value;\n                            that._trigger();\n                        }\n                    });\n                }\n            },\n            _initCount: function () {\n                var that = this, input = that._container.find('.k-recur-count'), rule = that._value;\n                that._count = input.kendoNumericTextBox({\n                    spinners: that.options.spinners,\n                    value: rule.count || 1,\n                    decimals: 0,\n                    format: '#',\n                    min: 1,\n                    change: function () {\n                        rule.count = this.value();\n                        that._trigger();\n                    }\n                }).data('kendoNumericTextBox');\n            },\n            _initUntil: function () {\n                var that = this, input = that._container.find('.k-recur-until'), start = that.options.start, rule = that._value, until = rule.until, min = until && until < start ? until : start, startInput = that.wrapper.closest('.k-scheduler-edit-form').find('[name=start]:visible'), validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on), dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare, initialValue = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 23, 59, 59);\n                input.attr('data-validDate-msg', validDateValidationMessage);\n                input.attr('data-untilDateCompare-msg', dateCompareValidationMessage);\n                if (startInput.length === 0) {\n                    startInput = that.wrapper.closest('.k-scheduler-edit-form').find('[name=start]');\n                }\n                if (startInput.length > 0 && startInput.val()) {\n                    min = kendo.parseDate(startInput.val());\n                    if (initialValue < min) {\n                        initialValue = min;\n                    }\n                }\n                that._until = input.kendoDatePicker({\n                    min: min,\n                    value: until || initialValue,\n                    change: function () {\n                        var date = this.value();\n                        if (date) {\n                            rule.until = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);\n                        }\n                        that._trigger();\n                    }\n                }).data('kendoDatePicker');\n                if (startInput) {\n                    startInput.on('change', function () {\n                        that._until.setOptions({ min: startInput.val() });\n                    });\n                }\n            },\n            _trigger: function () {\n                if (!this.options.mobile) {\n                    this.trigger('change');\n                }\n            }\n        });\n        var RecurrenceEditor = BaseRecurrenceEditor.extend({\n            init: function (element, options) {\n                var that = this;\n                BaseRecurrenceEditor.fn.init.call(that, element, options);\n                that._initFrequency();\n                that._initContainer();\n                that.value(that.options.value);\n            },\n            options: { name: 'RecurrenceEditor' },\n            events: ['change'],\n            destroy: function () {\n                var that = this;\n                that._frequency.destroy();\n                if (this._weekDayButtonGroup) {\n                    this._weekDayButtonGroup.destroy();\n                }\n                that._container.find('input[type=radio],input[type=checkbox]').off(CLICK + that._namespace);\n                kendo.destroy(that._container);\n                BaseRecurrenceEditor.fn.destroy.call(that);\n            },\n            value: function (value) {\n                var that = this;\n                var timezone = that.options.timezone;\n                var freq, freqButton;\n                if (value === undefined) {\n                    if (!that._value.freq) {\n                        return '';\n                    }\n                    return serialize(that._value, timezone);\n                }\n                that._value = parseRule(value, timezone) || {};\n                freq = that._value.freq;\n                if (freq) {\n                    freqButton = that._frequency.element.find('[data-value=\\'' + freq + '\\']');\n                    that._frequency.select(freqButton);\n                } else {\n                    that._frequency.select(0);\n                }\n                that._initView(that._frequency.current().data('value'));\n            },\n            _initContainer: function () {\n                var element = this.element, container = $('<div class=\"k-recur-view\" />'), editContainer = element.parent('.k-edit-field');\n                if (editContainer[0]) {\n                    container.insertAfter(editContainer);\n                } else {\n                    element.append(container);\n                }\n                this._container = container;\n            },\n            _initFrequency: function () {\n                var that = this, options = that.options, frequencies = options.frequencies, messages = options.messages.frequencies, buttonGroupElement = $('<div class=\"k-button-group-stretched k-flex-1\"/>').attr({ title: options.messages.recurrenceEditorTitle }), frequency;\n                frequencies = $.map(frequencies, function (frequency) {\n                    return {\n                        text: messages[frequency],\n                        attributes: {\n                            'data-value': frequency,\n                            'aria-label': options.messages.repeat + messages[frequency]\n                        }\n                    };\n                });\n                frequency = frequencies[0];\n                if (frequency && frequency.attributes && frequency.attributes['data-value'] === 'never') {\n                    frequency.attributes['data-value'] = '';\n                }\n                that.element.append(buttonGroupElement);\n                that._frequency = new ButtonGroup(buttonGroupElement, {\n                    items: frequencies,\n                    select: function () {\n                        that._value = {};\n                        that._initView(that._frequency.current().data('value'));\n                        that.trigger('change');\n                    }\n                });\n            },\n            _initView: function (frequency) {\n                var that = this;\n                var rule = that._value;\n                var options = that.options;\n                var data = {\n                    frequency: frequency || 'never',\n                    firstWeekDay: options.firstWeekDay,\n                    messages: options.messages[frequency],\n                    end: options.messages.end\n                };\n                kendo.destroy(that._container);\n                that._container.html(RECURRENCE_VIEW_TEMPLATE(data));\n                if (!frequency) {\n                    that._value = {};\n                    return;\n                }\n                rule.freq = frequency;\n                if (frequency === 'weekly' && !rule.weekDays) {\n                    rule.weekDays = [{\n                            day: options.start.getDay(),\n                            offset: 0\n                        }];\n                }\n                that._weekDayButtons(options.firstWeekDay);\n                that._initInterval();\n                that._initWeekDays();\n                that._initMonthDay();\n                that._initWeekDay();\n                that._initMonth();\n                that._initCount();\n                that._initUntil();\n                that._period();\n                that._end();\n            },\n            _initMonth: function () {\n                var that = this;\n                var rule = that._value;\n                var month = rule.months || [that.options.start.getMonth() + 1];\n                var monthInputs = that._container.find('.k-recur-month');\n                var options;\n                if (monthInputs[0]) {\n                    options = {\n                        change: function () {\n                            rule.months = [Number(this.value())];\n                            that.trigger('change');\n                        },\n                        dataTextField: 'text',\n                        dataValueField: 'value',\n                        dataSource: $.map(kendo.culture().calendar.months.names, function (monthName, idx) {\n                            return {\n                                text: monthName,\n                                value: idx + 1\n                            };\n                        })\n                    };\n                    that._month1 = new DropDownList(monthInputs[0], options);\n                    that._month2 = new DropDownList(monthInputs[1], options);\n                    if (month) {\n                        month = month[0];\n                        that._month1.value(month);\n                        that._month2.value(month);\n                    }\n                }\n            },\n            _end: function () {\n                var that = this;\n                var rule = that._value;\n                var container = that._container;\n                var namespace = that._namespace;\n                var click = function (e) {\n                    that._toggleEnd(e.currentTarget.value);\n                    that.trigger('change');\n                };\n                var endRule;\n                that._buttonNever = container.find('.k-recur-end-never').on(CLICK + namespace, click);\n                that._buttonCount = container.find('.k-recur-end-count').on(CLICK + namespace, click);\n                that._buttonUntil = container.find('.k-recur-end-until').on(CLICK + namespace, click);\n                if (rule.count) {\n                    endRule = 'count';\n                } else if (rule.until) {\n                    endRule = 'until';\n                }\n                that._toggleEnd(endRule);\n            },\n            _period: function () {\n                var that = this;\n                var rule = that._value;\n                var monthly = rule.freq === 'monthly';\n                var toggleRule = monthly ? that._toggleMonthDay : that._toggleYear;\n                var selector = '.k-recur-' + (monthly ? 'month' : 'year') + '-radio';\n                var radioButtons = that._container.find(selector);\n                if (!monthly && rule.freq !== 'yearly') {\n                    return;\n                }\n                radioButtons.on(CLICK + that._namespace, function (e) {\n                    toggleRule.call(that, e.currentTarget.value);\n                    that.trigger('change');\n                });\n                that._buttonMonthDay = radioButtons.eq(0);\n                that._buttonWeekDay = radioButtons.eq(1);\n                toggleRule.call(that, rule.weekDays ? 'weekday' : 'monthday');\n            },\n            _toggleEnd: function (endRule) {\n                var that = this;\n                var count, until;\n                var enableCount, enableUntil;\n                if (endRule === 'count') {\n                    that._buttonCount.prop('checked', true);\n                    enableCount = true;\n                    enableUntil = false;\n                    count = that._count.value();\n                    until = null;\n                } else if (endRule === 'until') {\n                    that._buttonUntil.prop('checked', true);\n                    enableCount = false;\n                    enableUntil = true;\n                    count = null;\n                    until = that._until.value();\n                } else {\n                    that._buttonNever.prop('checked', true);\n                    enableCount = enableUntil = false;\n                    count = until = null;\n                }\n                if (that._count) {\n                    that._count.enable(enableCount);\n                }\n                if (that._until) {\n                    that._until.enable(enableUntil);\n                }\n                that._value.count = count;\n                that._value.until = until;\n            },\n            _toggleMonthDay: function (monthRule) {\n                var that = this;\n                var enableMonthDay = false;\n                var enableWeekDay = true;\n                var clear = false;\n                var monthDays;\n                if (monthRule === 'monthday') {\n                    that._buttonMonthDay.prop('checked', true);\n                    monthDays = [that._monthDay.value()];\n                    enableMonthDay = true;\n                    enableWeekDay = false;\n                    clear = true;\n                } else {\n                    that._buttonWeekDay.prop('checked', true);\n                    monthDays = null;\n                }\n                that._weekDay.enable(enableWeekDay);\n                that._weekDayOffset.enable(enableWeekDay);\n                that._monthDay.enable(enableMonthDay);\n                that._value.monthDays = monthDays;\n                that._weekDayRule(clear);\n            },\n            _toggleYear: function (yearRule) {\n                var that = this;\n                var enableMonth1 = false;\n                var enableMonth2 = true;\n                var month;\n                if (yearRule === 'monthday') {\n                    enableMonth1 = true;\n                    enableMonth2 = false;\n                    month = that._month1.value();\n                } else {\n                    month = that._month2.value();\n                }\n                that._month1.enable(enableMonth1);\n                that._month2.enable(enableMonth2);\n                that._value.months = [month];\n                that._toggleMonthDay(yearRule);\n            }\n        });\n        ui.plugin(RecurrenceEditor);\n        var RECURRENCE_HEADER_TEMPLATE = kendo.template('<div data-role=\"content\">' + '<ul class=\"k-listgroup k-listgroup-flush\">' + '<li class=\"k-item k-listgroup-item\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:headerTitle#</span>' + '<div class=\"k-recur-pattern k-listgroup-form-field-wrapper\"></div>' + '</label>' + '</li>' + '<li class=\"k-item k-listgroup-item k-recur-view\"></li>' + '</ul>' + '</div>');\n        var RECURRENCE_REPEAT_PATTERN_TEMPLATE = kendo.template('# if (frequency !== \"never\") { #' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatEvery#</span>' + '<div class=\"k-recur-editor-wrap k-listgroup-form-field-wrapper\">' + '<input class=\"k-recur-interval\" type=\"number\" pattern=\"\\\\\\\\d*\"/>' + '# if (messages.interval.length) { #' + '<span class=\"k-recur-editor-text\">#:messages.interval#</span>' + '# } #' + '</div>' + '</label>' + '# } #' + '# if (frequency === \"weekly\") { #' + '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' + '<li class=\"k-item k-listgroup-item k-no-click\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatOn#</span>' + '</label>' + '</li>' + '<div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"#:messages.repeatOn#\">' + '</ul>' + '# } else if (frequency === \"monthly\") { #' + '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' + '<li class=\"k-item k-listgroup-item\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatBy#</span>' + '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' + '</label>' + '</li>' + '<li class=\"k-monthday-view k-item k-listgroup-item\" style=\"display:none\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" title=\"#:messages.day#\" pattern=\"\\\\\\\\d*\"/></div>' + '</label>' + '</li>' + '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.every#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"#:messages.every#\"></select></div>' + '</label>' + '</li>' + '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"#:messages.day#\"></select></div>' + '</label>' + '</li>' + '</ul>' + '# } else if (frequency === \"yearly\") { #' + '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' + '<li class=\"k-item k-listgroup-item\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatBy#</span>' + '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' + '</label>' + '</li>' + '<li class=\"k-monthday-view k-item k-listgroup-item\" style=\"display:none\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" title=\"#:messages.day#\" pattern=\"\\\\\\\\d*\"/></div>' + '</label>' + '</li>' + '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.every#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"#:messages.every#\"></select></div>' + '</label>' + '</li>' + '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"#:messages.day#\"></select></div>' + '</label>' + '</li>' + '<li class=\"k-item k-item k-listgroup-item\">' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.month#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-month\" title=\"#:messages.month#\"></select></div>' + '</label>' + '</li>' + '</ul>' + '# } #');\n        var RECURRENCE_END_PATTERN_TEMPLATE = kendo.template('# if (endPattern === \"count\") { #' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.after#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-count\" type=\"number\" pattern=\"\\\\\\\\d*\" /></div>' + '</label>' + '# } else if (endPattern === \"until\") { #' + '<label class=\"k-label k-listgroup-form-row\">' + '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.on#</span>' + '<div class=\"k-listgroup-form-field-wrapper\"><input type=\"date\" class=\"k-recur-until\" name=\"recur-until\"/></div>' + '</label>' + '# } #');\n        var RECURRENCE_GROUP_BUTTON_TEMPLATE = kendo.template('<select class=\"k-scheduler-select\">' + '#for (var i = 0, length = dataSource.length; i < length; i++) {#' + '<option value=\"#=dataSource[i].value#\" #= value === dataSource[i].value  ? \"selected\" : \"\" #>#:dataSource[i].text#</option>' + '#}#' + '</select>');\n        var MobileRecurrenceEditor = BaseRecurrenceEditor.extend({\n            init: function (element, options) {\n                var that = this;\n                BaseRecurrenceEditor.fn.init.call(that, element, options);\n                options = that.options;\n                that._optionTemplate = kendo.template('<option value=\"#:value#\">#:text#</option>');\n                that.value(options.value);\n                that._pane = options.pane || that.wrapper.closest('[data-role=pane]').data('kendoPane');\n                that._initRepeatButton();\n                that._initParentRepeatEnd();\n                that._defaultValue = that._value;\n            },\n            options: {\n                name: 'MobileRecurrenceEditor',\n                animations: {\n                    left: 'slide',\n                    right: 'slide:right'\n                },\n                mobile: true,\n                messages: {\n                    cancel: 'Cancel',\n                    update: 'Save',\n                    endTitle: 'Repeat ends',\n                    repeatTitle: 'Repeat pattern',\n                    headerTitle: 'Repeat event',\n                    end: {\n                        patterns: {\n                            never: 'Never',\n                            after: 'After...',\n                            on: 'On...'\n                        },\n                        never: 'Never',\n                        after: 'End repeat after',\n                        on: 'End repeat on'\n                    },\n                    daily: { interval: '' },\n                    hourly: { interval: '' },\n                    weekly: { interval: '' },\n                    monthly: {\n                        interval: '',\n                        repeatBy: 'Repeat by: ',\n                        dayOfMonth: 'Day of the month',\n                        dayOfWeek: 'Day of the week',\n                        repeatEvery: 'Repeat every',\n                        every: 'Every',\n                        day: 'Day '\n                    },\n                    yearly: {\n                        interval: '',\n                        repeatBy: 'Repeat by: ',\n                        dayOfMonth: 'Day of the month',\n                        dayOfWeek: 'Day of the week',\n                        repeatEvery: 'Repeat every: ',\n                        every: 'Every',\n                        month: 'Month',\n                        day: 'Day'\n                    }\n                }\n            },\n            events: ['change'],\n            value: function (value) {\n                var that = this;\n                var timezone = that.options.timezone;\n                if (value === undefined) {\n                    if (!that._value.freq) {\n                        return '';\n                    }\n                    return serialize(that._value, timezone);\n                }\n                that._value = parseRule(value, timezone) || {};\n            },\n            destroy: function () {\n                this._destroyView();\n                kendo.destroy(this._endFields);\n                if (this._weekDayButtonGroup) {\n                    this._weekDayButtonGroup.destroy();\n                }\n                this.element.off(CLICK + this._namespace);\n                BaseRecurrenceEditor.fn.destroy.call(this);\n            },\n            _initInterval: function () {\n                var that = this;\n                var rule = that._value;\n                that._container.find('.k-recur-interval').val(that._value.interval || 1).on(CHANGE + that._namespace, function (e) {\n                    rule.interval = e.target.value;\n                    that._trigger();\n                });\n            },\n            _initRepeatButton: function () {\n                var that = this;\n                var freq = that.options.messages.frequencies[this._value.freq || 'never'];\n                that._chevronButton = $('<span class=\"k-icon k-i-arrow-chevron-right\"></span>');\n                that._repeatValue = $('<span class=\"\">' + freq + '</span>');\n                that.element.append(that._repeatValue).append(that._chevronButton);\n                that.element.parents('li.k-item').on(CLICK + that._namespace, function (e) {\n                    e.preventDefault();\n                    that._createView('repeat');\n                    that._pane.navigate(that._view, that.options.animations.left);\n                });\n            },\n            _endLiItem: function () {\n                var that = this;\n                return '<li class=\"k-item k-listgroup-item\"><label class=\"k-label k-listgroup-form-row\"><span class=\"k-item-title k-listgroup-form-field-label\">' + that.options.messages.end.mobileLabel + '</span></label></li>';\n            },\n            _initParentRepeatEnd: function () {\n                var that = this;\n                var endLabelField = $(that._endLiItem()).insertAfter(that.element.parents('li.k-item'));\n                var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span></div>').appendTo(endLabelField.find('.k-label'));\n                endLabelField.on(CLICK + that._namespace, function (e) {\n                    e.preventDefault();\n                    that._navigateToView('repeat');\n                });\n                that._endParentLabelField = endLabelField.toggle(!!that._value.freq);\n                that._endParentEndButton = endEditField.find('.k-scheduler-recur-end').text(that._endText());\n            },\n            _initRepeatEnd: function () {\n                var that = this;\n                var endLabelField = $(that._endLiItem()).insertAfter(that._container);\n                var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span><span class=\"k-icon k-i-arrow-chevron-right\"></span></div>').appendTo(endLabelField.find('.k-label'));\n                endLabelField.on(CLICK + that._namespace, function (e) {\n                    e.preventDefault();\n                    that._navigateToView('end');\n                });\n                that._endLabelField = endLabelField.toggleClass('k-state-disabled', !that._value.freq);\n                that._endButton = endEditField.find('.k-scheduler-recur-end').text(that._endText());\n            },\n            _navigateToView: function (viewName) {\n                var that = this;\n                that._createView(viewName);\n                that._pane.navigate(that._view, that.options.animations.left);\n            },\n            _endText: function () {\n                var rule = this._value;\n                var messages = this.options.messages.end;\n                var text = messages.never;\n                if (rule.count) {\n                    text = kendo.format('{0} {1}', messages.after, rule.count);\n                } else if (rule.until) {\n                    text = kendo.format('{0} {1:d}', messages.on, rule.until);\n                }\n                return text;\n            },\n            _initFrequency: function () {\n                var that = this;\n                var frequencyMessages = that.options.messages.frequencies;\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    dataSource: $.map(this.options.frequencies, function (frequency) {\n                        return {\n                            text: frequencyMessages[frequency],\n                            value: frequency !== 'never' ? frequency : ''\n                        };\n                    }),\n                    value: that._value.freq || '',\n                    ns: kendo.ns\n                });\n                that._view.element.find('.k-recur-pattern').append(html);\n                that._view.element.find('.k-scheduler-select').on(CHANGE + that._namespace, function (e) {\n                    var value = e.target.value;\n                    that._value = { freq: value };\n                    that._defaultValue = $.extend({}, that._value);\n                    that._initRepeatView();\n                    that._endButton.text(that._endText());\n                    that._endParentEndButton.text(that._endText());\n                });\n            },\n            _initEndNavigation: function () {\n                var that = this;\n                var endMessages = that.options.messages.end.patterns;\n                var rule = that._value;\n                var value = '';\n                if (rule.count) {\n                    value = 'count';\n                } else if (rule.until) {\n                    value = 'until';\n                }\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    dataSource: [\n                        {\n                            text: endMessages.never,\n                            value: ''\n                        },\n                        {\n                            text: endMessages.after,\n                            value: 'count'\n                        },\n                        {\n                            text: endMessages.on,\n                            value: 'until'\n                        }\n                    ],\n                    value: value,\n                    ns: kendo.ns\n                });\n                that._view.element.find('.k-recur-pattern').append(html);\n                that._view.element.find('.k-scheduler-select').on(CHANGE + that._namespace, function (e) {\n                    var value = e.target.value;\n                    var count = null;\n                    var until = null;\n                    that._initEndView(value);\n                    if (that._count.length) {\n                        count = that._count.val();\n                        until = null;\n                    } else if (that._until.length) {\n                        count = null;\n                        until = that._until.val ? kendo.parseDate(that._until.val(), 'yyyy-MM-dd') : that._until.value();\n                    }\n                    rule.count = count;\n                    rule.until = until;\n                });\n            },\n            _createView: function (viewType) {\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var headerTitle = messages[viewType === 'repeat' ? 'repeatTitle' : 'endTitle'];\n                var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\" id=\"recurrence\">' + '<div data-role=\"header\" class=\"k-header\">' + '<a href=\"#\" class=\"k-header-cancel k-scheduler-cancel k-link\" title=\"' + messages.cancel + '\"' + 'aria-label=\"' + messages.cancel + '\"><span class=\"k-icon k-i-arrow-chevron-left\"></span></a>' + messages.headerTitle + '<a href=\"#\" class=\"k-header-done k-scheduler-update k-link\" title=\"' + messages.update + '\" ' + 'aria-label=\"' + messages.update + '\"><span class=\"k-icon k-i-check\"></span></a>' + '</div>';\n                var returnViewId = that._pane.view().id;\n                that._view = that._pane.append(html + RECURRENCE_HEADER_TEMPLATE({ headerTitle: headerTitle }));\n                that._view.element.on(CLICK + that._namespace, 'a.k-scheduler-cancel, a.k-scheduler-update', function (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if ($(this).hasClass('k-scheduler-update')) {\n                        that.trigger('change');\n                        that._defaultValue = $.extend({}, that._value);\n                    } else {\n                        that._value = that._defaultValue;\n                    }\n                    var frequency = that._value.freq;\n                    that._endParentEndButton.text(that._endText());\n                    that._endParentLabelField.toggle(!!frequency && frequency !== 'never');\n                    that._endButton.text(that._endText());\n                    that._repeatValue.text(messages.frequencies[frequency || 'never']);\n                    that._pane.one('viewShow', function () {\n                        that._destroyView();\n                    });\n                    that._pane.navigate(returnViewId, that.options.animations.right);\n                });\n                that._container = that._view.element.find('.k-recur-view');\n                if (viewType === 'repeat') {\n                    that._initFrequency();\n                    that._initRepeatView();\n                    that._initRepeatEnd();\n                } else {\n                    that._initEndNavigation();\n                    that._initEndView();\n                }\n            },\n            _destroyView: function () {\n                if (this._view) {\n                    this._view.destroy();\n                    this._view.element.remove();\n                    this._container = null;\n                }\n                this._view = null;\n            },\n            _initRepeatView: function () {\n                var that = this;\n                var frequency = that._value.freq || 'never';\n                var data = {\n                    frequency: frequency,\n                    firstWeekDay: that.options.firstWeekDay,\n                    messages: that.options.messages[frequency]\n                };\n                var html = RECURRENCE_REPEAT_PATTERN_TEMPLATE(data);\n                var container = that._container = that._container || this._pane.view().content.find('li.k-recur-view');\n                var rule = that._value;\n                if (that._endLabelField) {\n                    that._endLabelField.toggleClass('k-state-disabled', frequency === 'never');\n                }\n                kendo.destroy(container);\n                container.html(html);\n                if (!html) {\n                    that._value = {};\n                    container.hide();\n                    return;\n                } else {\n                    container.show();\n                }\n                if (frequency === 'weekly' && !rule.weekDays) {\n                    rule.weekDays = [{\n                            day: that.options.start.getDay(),\n                            offset: 0\n                        }];\n                }\n                that._weekDayButtons(that.options.firstWeekDay);\n                that._initInterval();\n                that._initMonthDay();\n                that._initWeekDays();\n                that._initWeekDay();\n                that._initMonth();\n                that._period();\n            },\n            _initMonthDay: function () {\n                var that = this;\n                var rule = that._value;\n                var monthDayInput = that._monthDay = that._container.find('.k-recur-monthday');\n                monthDayInput.attr({\n                    min: 1,\n                    max: 31\n                }).val(rule.monthDays ? rule.monthDays[0] : that.options.start.getDate()).on(CHANGE + that._namespace, function (e) {\n                    rule.count = e.target.value;\n                    that._trigger();\n                });\n            },\n            _initCount: function () {\n                var that = this, input = that._count = that._container.find('.k-recur-count'), rule = that._value;\n                input.val(rule.count || 1).on(CHANGE + that._namespace, function (ev) {\n                    rule.count = ev.target.value;\n                    that._trigger();\n                });\n            },\n            _initEndView: function (endPattern) {\n                var that = this;\n                var rule = that._value;\n                if (endPattern === undefined) {\n                    if (rule.count) {\n                        endPattern = 'count';\n                    } else if (rule.until) {\n                        endPattern = 'until';\n                    }\n                }\n                var data = {\n                    endPattern: endPattern,\n                    messages: that.options.messages.end\n                };\n                kendo.destroy(that._container);\n                that._container.html(RECURRENCE_END_PATTERN_TEMPLATE(data));\n                that._initCount();\n                that._initUntil();\n            },\n            _initWeekDay: function () {\n                var that = this, data;\n                var weekdayMessage = that.options.messages.weekdays;\n                var offsetMessage = that.options.messages.offsetPositions;\n                var weekDaySelect = that._container.find('.k-recur-weekday');\n                var change = function () {\n                    that._weekDayRule();\n                    that.trigger('change');\n                };\n                if (weekDaySelect[0]) {\n                    that._weekDayOffset = that._container.find('.k-recur-weekday-offset').html(that._options([\n                        {\n                            text: offsetMessage.first,\n                            value: '1'\n                        },\n                        {\n                            text: offsetMessage.second,\n                            value: '2'\n                        },\n                        {\n                            text: offsetMessage.third,\n                            value: '3'\n                        },\n                        {\n                            text: offsetMessage.fourth,\n                            value: '4'\n                        },\n                        {\n                            text: offsetMessage.last,\n                            value: '-1'\n                        }\n                    ])).on('change', change);\n                    data = [\n                        {\n                            text: weekdayMessage.day,\n                            value: 'day'\n                        },\n                        {\n                            text: weekdayMessage.weekday,\n                            value: 'weekday'\n                        },\n                        {\n                            text: weekdayMessage.weekend,\n                            value: 'weekend'\n                        }\n                    ];\n                    data = data.concat($.map(kendo.culture().calendar.days.names, function (dayName, idx) {\n                        return {\n                            text: dayName,\n                            value: idx\n                        };\n                    }));\n                    that._weekDay = weekDaySelect.html(that._options(data)).on('change', change).val(that.options.start.getDay());\n                    that._weekDayView();\n                }\n            },\n            _initMonth: function () {\n                var that = this;\n                var rule = that._value;\n                var start = that.options.start;\n                var month = rule.months || [start.getMonth() + 1];\n                var monthSelect = that._container.find('.k-recur-month');\n                var monthNames = kendo.culture().calendar.months.names;\n                if (monthSelect[0]) {\n                    var data = $.map(monthNames, function (monthName, idx) {\n                        return {\n                            text: monthName,\n                            value: idx + 1\n                        };\n                    });\n                    monthSelect.html(that._options(data)).on('change', function () {\n                        rule.months = [Number(this.value)];\n                    });\n                    that._monthSelect = monthSelect;\n                    if (month) {\n                        monthSelect.val(month[0]);\n                    }\n                }\n            },\n            _period: function () {\n                var that = this;\n                var rule = that._value;\n                var container = that._container;\n                var messages = that.options.messages[rule.freq];\n                var repeatRuleGroupButton = container.find('.k-repeat-rule');\n                var weekDayView = container.find('.k-weekday-view');\n                var monthDayView = container.find('.k-monthday-view');\n                if (repeatRuleGroupButton[0]) {\n                    var currentValue = rule.weekDays ? 'weekday' : 'monthday';\n                    var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                        value: currentValue,\n                        dataSource: [\n                            {\n                                text: messages.dayOfMonth,\n                                value: 'monthday'\n                            },\n                            {\n                                text: messages.dayOfWeek,\n                                value: 'weekday'\n                            }\n                        ],\n                        ns: kendo.ns\n                    });\n                    var init = function (val) {\n                        var weekDayName = that._weekDay.val();\n                        var weekDayOffset = that._weekDayOffset.val();\n                        var monthDay = that._monthDay.val();\n                        var month = that._monthSelect ? that._monthSelect.val() : null;\n                        if (val === 'monthday') {\n                            rule.weekDays = null;\n                            rule.monthDays = monthDay ? [monthDay] : monthDay;\n                            rule.months = month ? [Number(month)] : month;\n                            weekDayView.hide();\n                            monthDayView.show();\n                        } else {\n                            rule.monthDays = null;\n                            rule.months = month ? [Number(month)] : month;\n                            rule.weekDays = [{\n                                    offset: Number(weekDayOffset),\n                                    day: Number(weekDayName)\n                                }];\n                            weekDayView.show();\n                            monthDayView.hide();\n                        }\n                    };\n                    repeatRuleGroupButton.append(html);\n                    repeatRuleGroupButton.find('.k-scheduler-select').on(CHANGE + that._namespace, function (e) {\n                        init(e.target.value);\n                    });\n                    init(currentValue);\n                }\n            },\n            _initUntil: function () {\n                var that = this;\n                var input = that._container.find('.k-recur-until');\n                var start = that.options.start;\n                var rule = that._value;\n                var until = rule.until;\n                var min = until && until < start ? until : start;\n                var validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on);\n                var dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare;\n                input.attr('data-validDate-msg', validDateValidationMessage);\n                input.attr('data-untilDateCompare-msg', dateCompareValidationMessage);\n                if (kendo.support.input.date) {\n                    that._until = input.attr('min', kendo.toString(min, 'yyyy-MM-dd')).val(kendo.toString(until || start, 'yyyy-MM-dd')).on('change', function () {\n                        var date = kendo.parseDate(this.value, 'yyyy-MM-dd');\n                        if (date) {\n                            rule.until = date;\n                        }\n                        that._trigger();\n                    });\n                } else {\n                    that._until = input.kendoDatePicker({\n                        min: min,\n                        value: until || start,\n                        change: function () {\n                            var date = this.value();\n                            if (date) {\n                                rule.until = date;\n                            }\n                            that._trigger();\n                        }\n                    }).data('kendoDatePicker');\n                }\n            },\n            _options: function (data, optionLabel) {\n                var idx = 0;\n                var html = '';\n                var length = data.length;\n                var template = this._optionTemplate;\n                if (optionLabel) {\n                    html += template({\n                        value: '',\n                        text: optionLabel\n                    });\n                }\n                for (; idx < length; idx++) {\n                    html += template(data[idx]);\n                }\n                return html;\n            }\n        });\n        ui.plugin(MobileRecurrenceEditor);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}