{"version":3,"sources":["kendo.upload.js"],"names":["f","define","$","undefined","getFileName","input","map","inputFiles","file","name","join","$input","files","getAllFileInfo","stripPath","value","extension","getFileExtension","size","rawFiles","getFileInfo","rawFile","fileName","kendo","htmlEncode","fileSize","matches","match","rFileExtension","slashIndex","lastIndexOf","substr","assignGuidToFiles","unique","uid","guid","validateFiles","validationInfo","i","allowedExtensions","parseAllowedExtensions","maxFileSize","minFileSize","length","validateFileExtension","validateFileSize","extensions","ext","parsedExt","substring","toLowerCase","indexOf","validationErrors","inArray","INVALIDFILEEXTENSION","push","INVALIDMINFILESIZE","INVALIDMAXFILESIZE","getTotalFilesSizeMessage","totalSize","toFixed","shouldRemoveFileEntry","upload","multiple","wrapper","removeUploadedFile","fileEntry","eventArgs","shouldSendRemoveRequest","fileNames","_supportsRemove","data","_removeFileEntry","_submitRemove","textStatus","xhr","prevented","trigger","SUCCESS","operation","response","XMLHttpRequest","ERROR","logToConsole","responseText","tryParseJSON","onSuccess","onError","success","json","JSON","parse","normalizeJSON","e","stopEvent","originalEvent","dataTransfer","dropEffect","stopPropagation","preventDefault","bindDragEventWrappers","element","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","on","Date","setInterval","sinceLastDrag","clearInterval","isFileUploadStarted","is","getFileEntry","target","closest","iframeUploadModule","formDataUploadModule","window","Widget","ui","antiForgeryTokens","NS","SELECT","UPLOAD","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","VALIDATIONERRORS","PROGRESSHIDEDELAY","PROGRESSHIDEDURATION","FOCUS_STATE","TABINDEX","headerStatusIcon","loading","warning","Upload","extend","init","options","activeInput","ns","that","this","fn","call","directory","localization","_wrapInput","_activeInput","toggle","enabled","_ns","proxy","_onParentFormSubmit","_onParentFormReset","_initUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","events","showFileList","template","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","dropZone","initialFiles","saveUrl","_module","_supportsFormData","_async","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","destroy","customDropZone","document","add","onPause","pauseIcon","find","removeClass","addClass","parent","onResume","playIcon","onSaveSelected","getFiles","filesData","j","allFiles","listItems","clearAllFiles","each","index","_removeFileByDomElement","removeAllFiles","removeFileByUid","_removeFileByUid","clearFileByUid","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","clone","insertAfter","prefix","hide","removeAttr","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","_inputFiles","_isAsyncNonBatch","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","entry","dt","droppedFiles","directoryDrop","webkitGetAsEntry","splice","hasErrors","batch","currentFile","idx","_enqueueFile","_fileAction","_prepareTemplateData","templateData","_prepareDefaultSingleFileEntryTemplate","fileGroup","getFileGroup","errors","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","fileUid","fileList","appendTo","angular","elements","width","allCompletedFiles","allInvalidFiles","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","classDictionary","iconsClassDictionary","hasOwnProperty","_clearFileAction","append","_renderAction","_fileState","stateKey","states","uploading","text","uploaded","failed","currentState","actionClass","actionText","iconClass","empty","button","icon","clearEventArgs","_onFileProgress","percentComplete","progressPct","prepend","_onUploadSuccess","fileInfo","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","chunkIndex","delay","fadeOut","css","_showActionButtons","actionsWrapper","uploadButton","clearButton","_showHeaderUploadStatus","isUploading","headerUploadStatus","failedUploads","headerUploadStatusIcon","currentlyUploading","not","currentlyInvalid","currentlyFailed","currentlyPaused","html","onAbort","FormData","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","isChrome","test","isSafari","isWindowsSafari","navigator","_setupDropZone","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","removeField","params","jQuery","ajax","type","dataType","dataFilter","url","traditional","error","xhrFields","hasLabel","wrap","prototype","filesContainErrors","relatedInput","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","dataInput","fileValidation","cleanupFrame","unregisterFrame","body","prependTo","one","onIframeLoad","submit","started","contents","ex","processResponse","fakeXHR","jsonResult","statusText","status","stopFrameSubmit","id","action","stop","execCommand","grep","position","cancelled","paused","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","chunk","serializedMetaData","stringify","raiseError","parseSuccess","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin","amd","a1","a2","a3"],"mappings":"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","file":"kendo.upload.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.upload', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'upload',\n        name: 'Upload',\n        category: 'web',\n        description: 'The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, antiForgeryTokens = kendo.antiForgeryTokens, logToConsole = kendo.logToConsole, rFileExtension = /\\.([^\\.]+)$/, NS = '.kendoUpload', SELECT = 'select', UPLOAD = 'upload', SUCCESS = 'success', ERROR = 'error', COMPLETE = 'complete', CANCEL = 'cancel', CLEAR = 'clear', PAUSE = 'pause', RESUME = 'resume', PROGRESS = 'progress', REMOVE = 'remove', VALIDATIONERRORS = 'validationErrors', INVALIDMAXFILESIZE = 'invalidMaxFileSize', INVALIDMINFILESIZE = 'invalidMinFileSize', INVALIDFILEEXTENSION = 'invalidFileExtension', PROGRESSHIDEDELAY = 1000, PROGRESSHIDEDURATION = 2000, FOCUS_STATE = 'k-state-focused', TABINDEX = 'tabindex';\n        var headerStatusIcon = {\n            loading: 'k-i-upload',\n            warning: 'k-i-warning',\n            success: 'k-i-check'\n        };\n        var Upload = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                that.localization = that.options.localization;\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest('.k-upload');\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n                var ns = that._ns = NS + '-' + kendo.guid();\n                activeInput.closest('form').on('submit' + ns, $.proxy(that._onParentFormSubmit, that)).on('reset' + ns, $.proxy(that._onParentFormReset, that));\n                that._initUploadModule();\n                that._toggleDropZone();\n                that.wrapper.on('click', '.k-upload-action', $.proxy(that._onFileAction, that)).on('click', '.k-clear-selected', $.proxy(that._onClearSelected, that)).on('click', '.k-upload-selected', $.proxy(that._onUploadSelected, that)).on('keydown', $.proxy(that._onKeyDown, that)).on('focusout', $.proxy(that._focusout, that));\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                CLEAR,\n                PROGRESS,\n                REMOVE,\n                PAUSE,\n                RESUME\n            ],\n            options: {\n                name: 'Upload',\n                enabled: true,\n                multiple: true,\n                directory: false,\n                showFileList: true,\n                template: '',\n                files: [],\n                async: {\n                    autoRetryAfter: 0,\n                    bufferChunkSize: 10000000,\n                    maxAutoRetries: 1,\n                    removeVerb: 'POST',\n                    autoUpload: true,\n                    withCredentials: true,\n                    accept: '*/*; q=0.5, application/json',\n                    useArrayBuffer: false\n                },\n                localization: {\n                    'select': 'Select files...',\n                    'cancel': 'Cancel',\n                    'retry': 'Retry',\n                    'remove': 'Remove',\n                    'pause': 'Pause',\n                    'resume': 'Resume',\n                    'clearSelectedFiles': 'Clear',\n                    'uploadSelectedFiles': 'Upload',\n                    'dropFilesHere': 'Drop files here to upload',\n                    'invalidFiles': 'Invalid file(s). Please check file upload requirements.',\n                    'statusUploading': 'uploading',\n                    'statusUploaded': 'uploaded',\n                    'statusWarning': 'warning',\n                    'statusFailed': 'failed',\n                    'headerStatusUploading': 'Uploading...',\n                    'headerStatusPaused': 'Paused',\n                    'headerStatusUploaded': 'Done',\n                    'uploadSuccess': 'File(s) uploaded successfully.',\n                    'uploadFail': 'File(s) failed to upload.',\n                    'invalidMaxFileSize': 'File size too large.',\n                    'invalidMinFileSize': 'File size too small.',\n                    'invalidFileExtension': 'File type not allowed.'\n                },\n                validation: {\n                    allowedExtensions: [],\n                    maxFileSize: 0,\n                    minFileSize: 0\n                },\n                dropZone: ''\n            },\n            _initUploadModule: function () {\n                var that = this, options = that.options;\n                if (options.async.saveUrl) {\n                    that._module = that._supportsFormData() ? new formDataUploadModule(that) : new iframeUploadModule(that);\n                    that._async = true;\n                    var initialFiles = options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n            },\n            setOptions: function (options) {\n                var that = this, activeInput = that.element;\n                $(that.options.dropZone).off(that._ns);\n                Widget.fn.setOptions.call(that, options);\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                activeInput.attr('multiple', that._supportsMultiple() ? that.multiple : false);\n                if (that.directory) {\n                    activeInput.attr('webkitdirectory', that.directory);\n                    activeInput.attr('directory', that.directory);\n                }\n                that.toggle(that.options.enabled);\n                that._initUploadModule();\n                that._toggleDropZone();\n            },\n            enable: function (enable) {\n                enable = typeof enable === 'undefined' ? true : enable;\n                this.toggle(enable);\n            },\n            disable: function () {\n                this.toggle(false);\n            },\n            toggle: function (enable) {\n                enable = typeof enable === 'undefined' ? enable : !enable;\n                this.wrapper.toggleClass('k-state-disabled', enable);\n                this.element.prop('disabled', enable);\n            },\n            focus: function () {\n                this.element.trigger('focus');\n            },\n            destroy: function () {\n                var that = this;\n                var customDropZone = $(that.options.dropZone);\n                $(document).add($('.k-dropzone', that.wrapper)).add(that.wrapper.closest('form')).off(that._ns);\n                if (customDropZone.length > 0) {\n                    customDropZone.off(that._ns);\n                }\n                $(that.element).off(NS);\n                Widget.fn.destroy.call(that);\n            },\n            pause: function (fileEntry) {\n                this._module.onPause({ target: $(fileEntry, this.wrapper) });\n                var pauseIcon = fileEntry.find('.k-i-pause-sm');\n                pauseIcon.removeClass('k-i-pause-sm').addClass('k-i-play-sm').attr('title', this.localization.resume);\n                $(pauseIcon).parent().attr('aria-label', this.localization.resume);\n            },\n            resume: function (fileEntry) {\n                this._module.onResume({ target: $(fileEntry, this.wrapper) });\n                var playIcon = fileEntry.find('.k-i-play-sm');\n                playIcon.removeClass('k-i-play-sm').addClass('k-i-pause-sm').attr('title', this.localization.pause);\n                $(playIcon).parent().attr('aria-label', this.localization.pause);\n            },\n            upload: function () {\n                var that = this;\n                that._module.onSaveSelected();\n            },\n            getFiles: function () {\n                var that = this;\n                var filesData;\n                var allFiles = [];\n                var listItems = that.wrapper.find('.k-file');\n                for (var i = 0; i < listItems.length; i++) {\n                    filesData = $(listItems[i]).data('fileNames');\n                    if (filesData) {\n                        for (var j = 0; j < filesData.length; j++) {\n                            allFiles.push(filesData[j]);\n                        }\n                    }\n                }\n                return allFiles;\n            },\n            clearAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, false);\n                });\n            },\n            removeAllFiles: function () {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                files.each(function (index, file) {\n                    that._removeFileByDomElement(file, true);\n                });\n            },\n            removeFileByUid: function (uid) {\n                this._removeFileByUid(uid, true);\n            },\n            clearFileByUid: function (uid) {\n                this._removeFileByUid(uid, false);\n            },\n            _removeFileByUid: function (uid, shouldSendRemoveRequest) {\n                var that = this;\n                var fileEntry;\n                if (typeof uid !== 'string') {\n                    return;\n                }\n                fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n                if (fileEntry.length > 0) {\n                    that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n                }\n            },\n            clearFile: function (callback) {\n                this._removeFile(callback, false);\n            },\n            removeFile: function (callback) {\n                this._removeFile(callback, true);\n            },\n            _removeFile: function (callback, shouldSendRemoveRequest) {\n                var that = this;\n                var files = that.wrapper.find('.k-file');\n                var fileData;\n                if (typeof callback === 'function') {\n                    files.each(function (index, file) {\n                        fileData = $(file).data('fileNames');\n                        if (callback(fileData)) {\n                            that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                        }\n                    });\n                }\n            },\n            _removeFileByDomElement: function (fileEntry, shouldSendRemoveRequest) {\n                var that = this;\n                var fileData = { target: $(fileEntry, that.wrapper) };\n                var allFiles;\n                if (that.options.async.saveUrl) {\n                    if ($(fileEntry).hasClass('k-file-progress')) {\n                        that._module.onCancel(fileData);\n                    } else {\n                        that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                    }\n                    allFiles = $('.k-file', that.wrapper);\n                    if (allFiles.length === 0) {\n                        that._hideHeaderUploadstatus();\n                    } else {\n                        that._updateHeaderUploadStatus();\n                    }\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n            },\n            _addInput: function (sourceInput) {\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n                var that = this, input = sourceInput.clone().val('');\n                input.insertAfter(that.element).data('kendo' + that.options.prefix + that.options.name, that);\n                $(that.element).hide().attr(TABINDEX, '-1').removeAttr('id').off(NS);\n                that._activeInput(input);\n                that.element.trigger('focus');\n            },\n            _activeInput: function (input) {\n                var that = this, wrapper = that.wrapper;\n                that.element = input;\n                if (that.directory) {\n                    input.attr('webkitdirectory', that.directory);\n                    input.attr('directory', that.directory);\n                }\n                input.attr('multiple', that._supportsMultiple() ? that.multiple : false).attr('autocomplete', 'off').on('click' + NS, function (e) {\n                    if (wrapper.hasClass('k-state-disabled')) {\n                        e.preventDefault();\n                    }\n                }).on('focus' + NS, function () {\n                    $(this).parent().addClass(FOCUS_STATE);\n                }).on('blur' + NS, function () {\n                    $(this).parent().removeClass(FOCUS_STATE);\n                }).on('change' + NS, $.proxy(that._onInputChange, that));\n            },\n            _adjustFocusState: function (focusedItem, toFocus) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n                toFocus.addClass(FOCUS_STATE);\n                toFocus.attr(TABINDEX, 0);\n            },\n            _arrowKeyNavigation: function (e, key, focusedItem) {\n                var that = this, kendoKeys = kendo.keys, toFocus;\n                if (key === kendoKeys.DOWN) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    toFocus = that.wrapper.find('.k-upload-files .k-file').first();\n                    if (focusedItem.length > 0) {\n                        if (focusedItem.hasClass('k-upload-action')) {\n                            focusedItem.removeClass(FOCUS_STATE);\n                            focusedItem = focusedItem.closest('.k-file');\n                        }\n                        toFocus = focusedItem.next();\n                    }\n                    that._adjustFocusState(focusedItem, toFocus);\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = that.wrapper.find('.k-clear-selected');\n                    }\n                } else if (key === kendoKeys.UP) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    toFocus = that.wrapper.find('.k-upload-files .k-file:last');\n                    if (focusedItem.length > 0) {\n                        if (focusedItem.hasClass('k-upload-action')) {\n                            focusedItem.removeClass(FOCUS_STATE);\n                            focusedItem = focusedItem.closest('.k-file');\n                        }\n                        toFocus = focusedItem.prev();\n                    }\n                    that._adjustFocusState(focusedItem, toFocus);\n                } else if (key === kendoKeys.RIGHT) {\n                    if (focusedItem.hasClass('k-upload-action')) {\n                        toFocus = focusedItem.next('.k-upload-action');\n                        if (!toFocus || toFocus.length === 0) {\n                            toFocus = focusedItem.parent().find('.k-upload-action:first');\n                        }\n                    } else if (focusedItem.length > 0) {\n                        toFocus = focusedItem.find('.k-upload-action:first');\n                    }\n                    if (toFocus && toFocus.length > 0) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        toFocus.addClass(FOCUS_STATE);\n                    }\n                } else if (key === kendoKeys.LEFT) {\n                    if (focusedItem.hasClass('k-upload-action')) {\n                        toFocus = focusedItem.prev('.k-upload-action');\n                        if (!toFocus || toFocus.length === 0) {\n                            toFocus = focusedItem.parent().find('.k-upload-action:last');\n                        }\n                    } else if (focusedItem.length > 0) {\n                        toFocus = focusedItem.find('.k-upload-action:last');\n                    }\n                    if (toFocus && toFocus.length > 0) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        toFocus.addClass(FOCUS_STATE);\n                    }\n                }\n                if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                    toFocus = that.element;\n                }\n                if (toFocus && toFocus.length > 0) {\n                    that._preventFocusRemove = true;\n                    toFocus.trigger('focus');\n                }\n            },\n            _asyncCommandKeyNavigation: function (key, focusedItem, eventArgs) {\n                var that = this, kendoKeys = kendo.keys, fileEntry = $(focusedItem, that.wrapper);\n                that._retryClicked = false;\n                if (key === kendoKeys.ESC && focusedItem.find('.k-i-cancel').length > 0) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: fileEntry });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that._preventFocusRemove = true;\n                    that.element.trigger('focus');\n                } else if (key === kendoKeys.SPACEBAR) {\n                    if (focusedItem.find('.k-i-pause-sm').length > 0) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(focusedItem);\n                        that._updateHeaderUploadStatus();\n                    } else if (focusedItem.find('.k-i-play-sm').length > 0) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(focusedItem);\n                    }\n                } else if (key === kendoKeys.ENTER && !focusedItem.is('.k-file-progress, .k-file-success, .k-file-invalid')) {\n                    if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                        return;\n                    }\n                    $('.k-i-warning', focusedItem).remove();\n                    $('.k-progressbar', focusedItem).finish().show();\n                    if (!that._module.metaData[fileEntry.data('uid')]) {\n                        that._module.prepareChunk(fileEntry);\n                    }\n                    that._module.onRetry({ target: fileEntry });\n                    that._retryClicked = true;\n                }\n            },\n            _commandKeyNavigation: function (key, focusedItem) {\n                var that = this, kendoKeys = kendo.keys, files = focusedItem.data('fileNames'), hasValidationErrors = that._filesContainValidationErrors(files), eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n                if (key === kendoKeys.DELETE) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that._preventFocusRemove = true;\n                        that.element.trigger('focus');\n                    }\n                } else if (key === kendoKeys.TAB) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    focusedItem.attr(TABINDEX, -1);\n                } else if (!!that.options.async.saveUrl) {\n                    that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n                }\n            },\n            _focusout: function () {\n                var focusedItem = this.wrapper.find('.k-upload-files .k-file.' + FOCUS_STATE);\n                if (!this._preventFocusRemove) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    focusedItem.attr(TABINDEX, -1);\n                } else {\n                    this._preventFocusRemove = false;\n                }\n            },\n            _onKeyDown: function (e) {\n                var that = this, focusedItem = that.wrapper.find('.k-upload-files .k-file.' + FOCUS_STATE + ',' + '.k-upload-action.' + FOCUS_STATE), kendoKeys = kendo.keys, commandKeys = [\n                        kendoKeys.DELETE,\n                        kendoKeys.ESC,\n                        kendoKeys.ENTER,\n                        kendoKeys.SPACEBAR,\n                        kendoKeys.TAB\n                    ], key = e.keyCode;\n                if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                    that._arrowKeyNavigation(e, key, focusedItem);\n                } else if (focusedItem.length > 0 && focusedItem.hasClass('k-file') && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass('k-state-disabled')) {\n                    if (key === kendoKeys.SPACEBAR) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                    that._commandKeyNavigation(key, focusedItem);\n                }\n            },\n            _onInputChange: function (e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n                validateFiles(files, that.options.validation);\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n            _readDirectory: function (item) {\n                var deferred = new $.Deferred();\n                var dirReader = item.createReader();\n                var allFolderFiles = [];\n                var readEntries = function () {\n                    dirReader.readEntries(function (entries) {\n                        if (!entries.length) {\n                            deferred.resolve(allFolderFiles);\n                        } else {\n                            allFolderFiles = allFolderFiles.concat(entries);\n                            readEntries();\n                        }\n                    }, deferred.reject);\n                };\n                readEntries();\n                return deferred.promise();\n            },\n            _readFile: function (item) {\n                var that = this;\n                var fullpath = item.fullPath;\n                item.file(function (file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter--;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function () {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        }, 0);\n                    }\n                }, function () {\n                    logToConsole('File error.');\n                });\n            },\n            _traverseFileTree: function (item, skipCounter) {\n                var that = this;\n                if (!skipCounter) {\n                    that.droppedFolderCounter--;\n                }\n                this._readDirectory(item).then(function (items) {\n                    that.droppedFolderCounter += items.length;\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].isFile) {\n                            that._readFile(items[i]);\n                        } else if (items[i].isDirectory) {\n                            that._traverseFileTree(items[i]);\n                        }\n                    }\n                });\n            },\n            _onDrop: function (e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var length;\n                stopEvent(e);\n                if (that.options.directoryDrop && dt.items) {\n                    length = dt.items.length;\n                    that.droppedFolderCounter = 0;\n                    that.droppedFolderFiles = [];\n                    for (var i = 0; i < length; i++) {\n                        if (dt.items[i].webkitGetAsEntry) {\n                            var entry = dt.items[i].webkitGetAsEntry();\n                            if (entry.isDirectory) {\n                                that._traverseFileTree(entry, true);\n                            } else if (entry.isFile) {\n                                that.droppedFolderFiles.push(dt.files[i]);\n                            }\n                        } else {\n                            that._proceedDroppedItems(droppedFiles);\n                        }\n                    }\n                } else {\n                    that._proceedDroppedItems(droppedFiles);\n                }\n            },\n            _proceedDroppedItems: function (droppedFiles) {\n                var that = this;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n                if (droppedFiles.length > 0 && !that.wrapper.hasClass('k-state-disabled')) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n                    validateFiles(files, that.options.validation);\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $('.k-dropzone', that.wrapper) }, files);\n                    }\n                }\n            },\n            _filesContainValidationErrors: function (files) {\n                var hasErrors = false;\n                $(files).each(function (index, file) {\n                    if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                        hasErrors = true;\n                        return false;\n                    }\n                });\n                return hasErrors;\n            },\n            _isAsyncNonBatch: function () {\n                return this._async && !this.options.async.batch || false;\n            },\n            _renderInitialFiles: function (files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass('k-file-success').data('files', [files[idx]]);\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n            _prepareTemplateData: function (name, data) {\n                var filesData = data.fileNames, templateData = {}, totalSize = 0, idx = 0;\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n                return templateData;\n            },\n            _prepareDefaultSingleFileEntryTemplate: function (data) {\n                var that = this;\n                var file = data.fileNames[0];\n                var fileSize = getTotalFilesSizeMessage(data.fileNames);\n                var fileGroup = kendo.getFileGroup(file.extension, true);\n                var errors = file[VALIDATIONERRORS];\n                var template = '';\n                if (errors && errors.length > 0) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-file-invalid-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-' + fileGroup + '\\'></span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'>' + '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-validation-message k-text-error\\'>' + that.localization[errors[0]] + '</span>' + '</span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-file-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-' + fileGroup + '\\'></span>' + '<span class=\\'k-file-state\\'></span>' + '</span>' + '<span class=\\'k-file-name-size-wrapper\\'><span class=\\'k-file-name\\' title=\\'' + file.name + '\\'>' + file.name + '</span>' + '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                template += '<strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _prepareDefaultMultipleFileEntriesTemplate: function (data) {\n                var that = this;\n                var files = data.fileNames;\n                var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n                var totalFileSize = getTotalFilesSizeMessage(files);\n                var template = '';\n                var i, currentFile;\n                if (filesHaveValidationErrors) {\n                    template += '<li class=\\'k-file k-file-invalid\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-multiple-files-invalid-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-files\\'></span>';\n                } else {\n                    template += '<li class=\\'k-file\\'><div class=\\'k-progressbar k-hidden\\'><span class=\\'k-progress\\'></span></div>' + '<span class=\\'k-multiple-files-group-wrapper\\'>' + '<span class=\\'k-file-group k-icon k-i-files\\'></span>';\n                }\n                template += '<span class=\\'k-file-state\\'></span></span>';\n                files.sort(function (a, b) {\n                    if (a[VALIDATIONERRORS]) {\n                        return -1;\n                    }\n                    if (b[VALIDATIONERRORS]) {\n                        return 1;\n                    }\n                    return 0;\n                });\n                template += '<span class=\\'k-multiple-files-wrapper\\'>';\n                for (i = 0; i < files.length; i++) {\n                    currentFile = files[i];\n                    var fileSize = getTotalFilesSizeMessage([currentFile]);\n                    template += '<span class=\\'k-file-name-size-wrapper\\'>';\n                    if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                        template += '<span class=\\'k-file-name k-file-name-invalid\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    } else {\n                        template += '<span class=\\'k-file-name\\' title=\\'' + currentFile.name + '\\'>' + currentFile.name + '</span>';\n                    }\n                    template += '<span class=\\'k-file-size\\'>' + fileSize + '</span></span>';\n                }\n                if (filesHaveValidationErrors) {\n                    template += '<span class=\\'k-file-validation-message k-text-error\\'>' + that.localization.invalidFiles + '</span>';\n                } else {\n                    template += '<span class=\\'k-file-information\\'>Total: ' + files.length + ' files, ' + totalFileSize + '</span>';\n                }\n                template += '</span><strong class=\\'k-upload-status\\'></strong>';\n                return $(template);\n            },\n            _enqueueFile: function (name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $('.k-upload-files', that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                if (fileList.length === 0) {\n                    fileList = $('<ul class=\\'k-upload-files k-reset\\'></ul>').appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n                    that.wrapper.removeClass('k-upload-empty');\n                }\n                existingFileEntries = $('.k-file', fileList);\n                if (!template) {\n                    if (data.fileNames.length === 1) {\n                        fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                    } else {\n                        fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                    }\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n                    fileEntry = $('<li class=\\'k-file\\'>' + template(templateData) + '</li>');\n                    fileEntry.find('.k-upload-action').addClass('k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base');\n                    that.angular('compile', function () {\n                        return {\n                            elements: fileEntry,\n                            data: [templateData]\n                        };\n                    });\n                }\n                fileEntry.attr(kendo.attr('uid'), fileUid).appendTo(fileList).data(data);\n                if (!that._async) {\n                    $('.k-progress', fileEntry).width('100%');\n                }\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = {\n                        files: existingFileEntries.data('fileNames'),\n                        headers: {}\n                    };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                    }\n                }\n                return fileEntry;\n            },\n            _removeFileEntry: function (fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest('.k-upload-files');\n                var allFiles, allCompletedFiles, allInvalidFiles;\n                fileEntry.remove();\n                allFiles = $('.k-file', fileList);\n                allCompletedFiles = $('.k-file-success, .k-file-error', fileList);\n                allInvalidFiles = $('.k-file-invalid', fileList);\n                if (allCompletedFiles.length === allFiles.length || allInvalidFiles.length === allFiles.length) {\n                    this._hideActionButtons();\n                }\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass('k-upload-empty');\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            },\n            _fileAction: function (fileElement, actionKey, skipClear) {\n                var classDictionary = {\n                    remove: 'k-i-x',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-retry',\n                    pause: 'k-i-pause-sm'\n                };\n                var iconsClassDictionary = {\n                    remove: 'k-i-close',\n                    cancel: 'k-i-cancel',\n                    retry: 'k-i-reload-sm',\n                    pause: 'k-i-pause-sm'\n                };\n                var firstActionButton;\n                if (!classDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                if (!skipClear) {\n                    this._clearFileAction(fileElement);\n                }\n                if (!this.options.template) {\n                    if (!skipClear) {\n                        fileElement.find('.k-upload-status .k-upload-action').remove();\n                    }\n                    fileElement.find('.k-upload-status').append(this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey]));\n                } else {\n                    firstActionButton = fileElement.find('.k-upload-action').first();\n                    if (!firstActionButton.find('.k-icon').length) {\n                        firstActionButton.addClass('k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button').append('<span class=\\'k-button-icon k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                    } else if (firstActionButton.next('.k-upload-action').length) {\n                        firstActionButton.next('.k-upload-action').addClass('k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button').append('<span class=\\'k-button-icon k-icon ' + iconsClassDictionary[actionKey] + ' ' + classDictionary[actionKey] + '\\' title=\\'' + this.localization[actionKey] + '\\'' + 'aria-label=\\'' + this.localization[actionKey] + '\\'></span>').show();\n                    }\n                }\n            },\n            _fileState: function (fileEntry, stateKey) {\n                var localization = this.localization, states = {\n                        uploading: { text: localization.statusUploading },\n                        uploaded: { text: localization.statusUploaded },\n                        failed: { text: localization.statusFailed }\n                    }, currentState = states[stateKey];\n                if (currentState) {\n                    $('span.k-file-state', fileEntry).text(currentState.text);\n                }\n            },\n            _renderAction: function (actionClass, actionText, iconClass) {\n                if (actionClass !== '') {\n                    return $('<button type=\\'button\\' class=\\'k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action\\' aria-label=\\'' + actionText + '\\' tabindex=\\'-1\\'>' + '<span class=\\'k-button-icon k-icon ' + iconClass + ' ' + actionClass + '\\' title=\\'' + actionText + '\\'></span>' + '</button>').on('focus', function () {\n                        $(this).addClass(FOCUS_STATE);\n                    }).on('blur', function () {\n                        $(this).removeClass(FOCUS_STATE);\n                    });\n                } else {\n                    return $('<button type=\\'button\\' class=\\'k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\\'>' + '<span class=\"k-button-text\">' + actionText + '</span>' + '</button>');\n                }\n            },\n            _clearFileAction: function (fileElement) {\n                $('.k-upload-action', fileElement).empty().hide();\n            },\n            _onFileAction: function (e) {\n                var that = this;\n                if (!that.wrapper.hasClass('k-state-disabled')) {\n                    var button = $(e.target).closest('.k-upload-action');\n                    var icon = button.find('.k-icon');\n                    var fileEntry = button.closest('.k-file');\n                    var files = fileEntry.data('fileNames');\n                    var hasValidationErrors = that._filesContainValidationErrors(files);\n                    var eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n                    that._retryClicked = false;\n                    if (icon.hasClass('k-i-x')) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                            that.element.trigger('focus');\n                        }\n                    } else if (icon.hasClass('k-i-cancel')) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        that._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                        that.element.trigger('focus');\n                    } else if (icon.hasClass('k-i-pause-sm')) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(fileEntry);\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.hasClass('k-i-play-sm')) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(fileEntry);\n                    } else if (icon.hasClass('k-i-retry')) {\n                        $('.k-i-warning', fileEntry).remove();\n                        $('.k-progressbar', fileEntry).finish().show();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                        that._retryClicked = true;\n                    }\n                    fileEntry.addClass(FOCUS_STATE);\n                }\n                return false;\n            },\n            _onUploadSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                if (!wrapper.hasClass('k-state-disabled')) {\n                    this._module.onSaveSelected();\n                }\n                return false;\n            },\n            _onClearSelected: function () {\n                var that = this;\n                var wrapper = that.wrapper;\n                var clearEventArgs = {};\n                if (!wrapper.hasClass('k-state-disabled') && !that.trigger(CLEAR, clearEventArgs)) {\n                    that.clearAllFiles();\n                }\n                return false;\n            },\n            _onFileProgress: function (e, percentComplete) {\n                var progressPct;\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n                $('.k-progressbar', e.target).removeClass('k-hidden');\n                if (!this.options.template) {\n                    progressPct = $('.k-upload-pct', e.target);\n                    if (progressPct.length === 0) {\n                        $('.k-upload-status', e.target).prepend('<span class=\\'k-upload-pct\\'></span>');\n                    }\n                    if (percentComplete !== 100) {\n                        $('.k-upload-pct', e.target).text(percentComplete + '%');\n                    } else {\n                        $('.k-upload-pct', e.target).remove();\n                    }\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                } else {\n                    $('.k-progress', e.target).width(percentComplete + '%');\n                }\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data('fileNames'),\n                    percentComplete: percentComplete\n                });\n            },\n            _onUploadSuccess: function (e, response, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                var files = fileEntry.data('fileNames');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                var prevented = that.trigger(SUCCESS, {\n                    files: fileEntry.data('fileNames'),\n                    response: response,\n                    operation: 'upload',\n                    XMLHttpRequest: xhr\n                });\n                if (prevented) {\n                    that._setUploadErrorState(fileEntry);\n                } else {\n                    that._fileState(fileEntry, 'uploaded');\n                    fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n                    if (fileInfo.length > 0) {\n                        fileInfo.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-success\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                    } else if (fileSize.length > 0) {\n                        fileSize.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-success\">' + that.localization.uploadSuccess + '</span>');\n                    }\n                    that._updateHeaderUploadStatus();\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    } else {\n                        that._clearFileAction(fileEntry);\n                    }\n                }\n                that._hideUploadProgress(fileEntry);\n                that._checkAllComplete();\n            },\n            _onUploadError: function (e, xhr) {\n                var that = this;\n                var module = that._module;\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                that._setUploadErrorState(fileEntry);\n                that.trigger(ERROR, {\n                    operation: 'upload',\n                    files: fileEntry.data('fileNames'),\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n                if (!that.options.async.chunkSize) {\n                    that._hideUploadProgress(fileEntry);\n                } else {\n                    if (module._decreasePosition) {\n                        module._decreasePosition(fileUid);\n                    }\n                }\n                that._checkAllComplete();\n                if (this.options.async.autoRetryAfter) {\n                    this._autoRetryAfter(fileEntry);\n                }\n            },\n            _autoRetryAfter: function (fileEntry) {\n                var that = this;\n                var retries = this._module.retries;\n                if (!retries) {\n                    return;\n                }\n                if (!retries[fileEntry.data('uid')]) {\n                    retries[fileEntry.data('uid')] = 1;\n                }\n                if (retries[fileEntry.data('uid')] <= this.options.async.maxAutoRetries) {\n                    retries[fileEntry.data('uid')]++;\n                    setTimeout(function () {\n                        that._module.performUpload(fileEntry);\n                    }, this.options.async.autoRetryAfter);\n                }\n            },\n            _setUploadErrorState: function (fileEntry) {\n                var that = this, uploadPercentage, files = fileEntry.data('fileNames'), fileInfo = fileEntry.find('.k-file-information'), fileSize = fileEntry.find('.k-file-size');\n                that._fileState(fileEntry, 'failed');\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-error\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden').after('<span class=\"k-file-validation-message k-text-error\">' + that.localization.uploadFail + '</span>');\n                }\n                that._updateUploadProgress(fileEntry);\n                uploadPercentage = $('.k-upload-pct', fileEntry);\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.remove();\n                }\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, 'retry');\n                this._fileAction(fileEntry, REMOVE, true);\n                if (that._retryClicked) {\n                    fileEntry.trigger('focus');\n                }\n            },\n            _updateUploadProgress: function (fileEntry) {\n                var that = this;\n                if (!that.options.async.chunkSize) {\n                    $('.k-progress', fileEntry).width('100%');\n                } else {\n                    var fileUid = fileEntry.data('uid');\n                    if (that._module.metaData) {\n                        var fileMetaData = that._module.metaData[fileUid];\n                        if (fileMetaData) {\n                            var percentComplete = fileMetaData.totalChunks ? Math.round(fileMetaData.chunkIndex / fileMetaData.totalChunks * 100) : 100;\n                            that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                        }\n                    }\n                }\n            },\n            _hideUploadProgress: function (fileEntry) {\n                $('.k-progressbar', fileEntry).delay(PROGRESSHIDEDELAY).fadeOut(PROGRESSHIDEDURATION, function () {\n                    $(this).find('.k-progress').css('width', '0%');\n                });\n            },\n            _showActionButtons: function () {\n                var that = this;\n                var actionsWrapper = $('.k-action-buttons', that.wrapper);\n                var uploadButton = $('.k-upload-selected', that.wrapper);\n                var clearButton = $('.k-clear-selected', that.wrapper);\n                if (uploadButton.length === 0) {\n                    uploadButton = that._renderAction('', this.localization.uploadSelectedFiles).addClass('k-upload-selected').addClass('k-button-solid-primary').removeClass('k-button-solid-base');\n                    clearButton = that._renderAction('', this.localization.clearSelectedFiles).addClass('k-clear-selected');\n                }\n                if (!actionsWrapper.length) {\n                    actionsWrapper = $('<div />').addClass('k-action-buttons').append(clearButton, uploadButton);\n                }\n                this.wrapper.append(actionsWrapper);\n            },\n            _hideActionButtons: function () {\n                $('.k-action-buttons', this.wrapper).remove();\n            },\n            _showHeaderUploadStatus: function (isUploading) {\n                var that = this;\n                var localization = that.localization;\n                var dropZone = $('.k-dropzone', that.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></strong>';\n                if (isUploading) {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.loading);\n                } else {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                    headerUploadStatus.find('.k-icon').addClass(headerStatusIcon.warning);\n                }\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n                }\n            },\n            _updateHeaderUploadStatus: function () {\n                var that = this;\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error, .k-file-invalid');\n                var currentlyInvalid = $('.k-file-invalid', that.wrapper);\n                var currentlyFailed = $('.k-file-error', that.wrapper);\n                var currentlyPaused = $('.k-file', that.wrapper).find('.k-i-play-sm');\n                var failedUploads, headerUploadStatusIcon;\n                if (currentlyPaused.length && (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass('k-i-pause-sm');\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusPaused);\n                } else if (currentlyUploading.length === 0 || currentlyInvalid.length > 0 || currentlyFailed.length > 0) {\n                    failedUploads = $('.k-file.k-file-error, .k-file.k-file-invalid', that.wrapper);\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass('k-icon').addClass(failedUploads.length !== 0 ? headerStatusIcon.warning : headerStatusIcon.success);\n                    headerUploadStatus.html(headerUploadStatusIcon).append(that.localization.headerStatusUploaded);\n                }\n            },\n            _hideHeaderUploadstatus: function () {\n                var that = this, dropZone = that.options.dropZone;\n                $('.k-upload-status-total', this.wrapper).remove();\n                if (dropZone === '') {\n                    $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n                }\n            },\n            _onParentFormSubmit: function () {\n                var upload = this, element = upload.element;\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n                if (!element.value) {\n                    var input = $(element);\n                    input.attr('disabled', 'disabled');\n                    window.setTimeout(function () {\n                        input.prop('disabled', false);\n                    }, 0);\n                }\n            },\n            _onParentFormReset: function () {\n                $('.k-upload-files', this.wrapper).remove();\n            },\n            _supportsFormData: function () {\n                return typeof FormData != 'undefined';\n            },\n            _supportsMultiple: function () {\n                var windows = this._userAgent().indexOf('Windows') > -1;\n                return !kendo.support.browser.opera && !(kendo.support.browser.safari && windows);\n            },\n            _supportsDrop: function () {\n                var userAgent = this._userAgent().toLowerCase();\n                var isChrome = /chrome/.test(userAgent);\n                var isSafari = !isChrome && /safari/.test(userAgent);\n                var isWindowsSafari = isSafari && /windows/.test(userAgent);\n                return !isWindowsSafari && this._supportsFormData() && this.options.async.saveUrl;\n            },\n            _userAgent: function () {\n                return navigator.userAgent;\n            },\n            _setupDropZone: function () {\n                var that = this;\n                var ns = that._ns;\n                var dropZone = $('.k-dropzone', that.wrapper).on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = 'copy';\n                    }\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                if (!dropZone.find('.k-dropzone-hint').length) {\n                    dropZone.append($('<em class=\\'k-dropzone-hint\\'>' + that.localization.dropFilesHere + '</em>'));\n                }\n                bindDragEventWrappers(dropZone, ns, function () {\n                    if (!dropZone.closest('.k-upload').hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _setupCustomDropZone: function () {\n                var that = this;\n                var dropZone = $(that.options.dropZone);\n                if (!that.wrapper.find('.k-dropzone-hint').length) {\n                    $('.k-dropzone', that.wrapper).append($('<em class=\\'k-dropzone-hint k-hidden\\'>' + that.localization.dropFilesHere + '</em>'));\n                } else {\n                    $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                }\n                var ns = that._ns;\n                dropZone.on('dragenter' + ns, stopEvent).on('dragover' + ns, function (e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = 'copy';\n                    }\n                    e.preventDefault();\n                }).on('drop' + ns, $.proxy(that._onDrop, that));\n                bindDragEventWrappers(dropZone, ns, function (e) {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.removeClass('k-dropzone-hovered');\n                        dropZone.addClass('k-dropzone-hovered');\n                        $(e.target).addClass('k-dropzone-hovered');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-hovered');\n                    dropZone.find('.k-dropzone-hovered').removeClass('k-dropzone-hovered');\n                });\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n            _bindDocumentDragEventWrappers: function (dropZone) {\n                var that = this;\n                var ns = that._ns;\n                bindDragEventWrappers($(document), ns, function () {\n                    if (!that.wrapper.hasClass('k-state-disabled')) {\n                        dropZone.addClass('k-dropzone-active');\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                }, function () {\n                    dropZone.removeClass('k-dropzone-active');\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                });\n            },\n            _toggleDropZone: function () {\n                var that = this, dropZone = that.options.dropZone;\n                if (!that._supportsDrop()) {\n                    return;\n                }\n                $(dropZone).off(that._ns);\n                $('.k-dropzone', that.wrapper).off(that._ns);\n                if (dropZone !== '') {\n                    that._setupCustomDropZone();\n                } else {\n                    that._setupDropZone();\n                }\n            },\n            _supportsRemove: function () {\n                return !!this.options.async.removeUrl;\n            },\n            _submitRemove: function (fileNames, eventArgs, onSuccess, onError) {\n                var upload = this, removeField = upload.options.async.removeField || 'fileNames', params = $.extend(eventArgs.data, antiForgeryTokens());\n                params[removeField] = fileNames;\n                jQuery.ajax({\n                    type: this.options.async.removeVerb,\n                    dataType: 'json',\n                    dataFilter: normalizeJSON,\n                    url: this.options.async.removeUrl,\n                    traditional: true,\n                    data: params,\n                    headers: eventArgs.headers,\n                    success: onSuccess,\n                    error: onError,\n                    xhrFields: { withCredentials: this.options.async.withCredentials }\n                });\n            },\n            _wrapInput: function (input) {\n                var that = this;\n                var options = that.options;\n                var hasLabel = !!input.attr('id') && $('[for=\\'' + input.attr('id') + '\\']').length > 0;\n                input.wrap('<div class=\\'k-widget k-upload\\'><div class=\\'k-dropzone\\'><div class=\\'k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button\\'></div></div></div>');\n                if (!options.async.saveUrl) {\n                    input.closest('.k-upload').addClass('k-upload-sync');\n                } else {\n                    input.closest('.k-upload').addClass('k-upload-async');\n                }\n                input.closest('.k-upload').addClass('k-upload-empty');\n                input.closest('.k-button').append('<span>' + that.localization.select + '</span>');\n                if (!hasLabel && !input.attr('aria-label')) {\n                    input.attr('aria-label', that.localization.select);\n                }\n                return input.closest('.k-upload');\n            },\n            _checkAllComplete: function () {\n                if ($('.k-file.k-file-progress', this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n            _inputFiles: function (sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n        var syncUploadModule = function (upload) {\n            this.name = 'syncUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element.closest('form').attr('enctype', 'multipart/form-data').attr('encoding', 'multipart/form-data');\n        };\n        syncUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var filesContainErrors = upload._filesContainValidationErrors(files);\n                upload._addInput(sourceInput);\n                var fileData = { 'fileNames': files };\n                if (filesContainErrors) {\n                    sourceInput.remove();\n                } else {\n                    fileData.relatedInput = sourceInput;\n                }\n                var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (filesContainErrors) {\n                    upload._hideUploadProgress(file);\n                }\n                upload._fileAction(file, REMOVE);\n            },\n            onRemove: function (e) {\n                var fileEntry = getFileEntry(e);\n                var relatedInput = fileEntry.data('relatedInput');\n                if (relatedInput) {\n                    relatedInput.remove();\n                }\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n        var iframeUploadModule = function (upload) {\n            this.name = 'iframeUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n        Upload._frameId = 0;\n        iframeUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var hasValidationErrors = upload._filesContainValidationErrors(files);\n                var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        this.performUpload(fileEntry);\n                    } else {\n                        upload._fileAction(fileEntry, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(fileEntry);\n                }\n            },\n            prepareUpload: function (sourceInput, files, hasValidationErrors) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr('name');\n                var fileEntry, fileData, iframe, form;\n                upload._addInput(sourceInput);\n                sourceInput.attr('name', name);\n                if (!hasValidationErrors) {\n                    iframe = this.createFrame(upload.name + '_' + Upload._frameId++);\n                    this.registerFrame(iframe);\n                    form = this.createForm(upload.options.async.saveUrl, iframe.attr('name')).append(activeInput);\n                    fileData = {\n                        'frame': iframe,\n                        'relatedInput': activeInput,\n                        'fileNames': files\n                    };\n                } else {\n                    sourceInput.remove();\n                    fileData = { 'fileNames': files };\n                }\n                fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n                if (iframe) {\n                    iframe.data({\n                        'form': form,\n                        'file': fileEntry\n                    });\n                }\n                return fileEntry;\n            },\n            performUpload: function (fileEntry) {\n                var e = { files: fileEntry.data('fileNames') };\n                var iframe = fileEntry.data('frame');\n                var upload = this.upload;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideActionButtons();\n                    upload._showHeaderUploadStatus(true);\n                    iframe.appendTo(document.body);\n                    var form = iframe.data('form').attr('action', upload.options.async.saveUrl).appendTo(document.body);\n                    e.data = $.extend({}, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find('input[name=\\'' + key + '\\']');\n                        if (dataInput.length === 0) {\n                            dataInput = $('<input>', {\n                                type: 'hidden',\n                                name: key\n                            }).prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n                    iframe.one('load', $.proxy(this.onIframeLoad, this));\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data('file'));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-file', this.element).each(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onIframeLoad: function (e) {\n                var iframe = $(e.target), responseText;\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = 'Error trying to get server response: ' + ex;\n                }\n                this.processResponse(iframe, responseText);\n            },\n            processResponse: function (iframe, responseText) {\n                var fileEntry = iframe.data('file'), module = this, fakeXHR = { responseText: responseText };\n                tryParseJSON(responseText, function (jsonResult) {\n                    $.extend(fakeXHR, {\n                        statusText: 'OK',\n                        status: '200'\n                    });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                }, function () {\n                    $.extend(fakeXHR, {\n                        statusText: 'error',\n                        status: '500'\n                    });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                });\n            },\n            onCancel: function (e) {\n                var iframe = $(e.target).data('frame');\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data('file'));\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data('frame');\n                if (iframe) {\n                    module.unregisterFrame(iframe);\n                    upload._removeFileEntry(fileEntry);\n                    module.cleanupFrame(iframe);\n                } else {\n                    if (fileEntry.hasClass('k-file-success')) {\n                        removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                    } else {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                }\n            },\n            onAbort: function () {\n                var element = this.element, module = this;\n                $.each(this.iframes, function () {\n                    $('input', this.data('form')).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data('form').remove();\n                    this.remove();\n                });\n                this.iframes = [];\n            },\n            createFrame: function (id) {\n                return $('<iframe' + ' name=\\'' + id + '\\'' + ' id=\\'' + id + '\\'' + ' style=\\'display:none;\\' />');\n            },\n            createForm: function (action, target) {\n                return $('<form enctype=\\'multipart/form-data\\' method=\\'POST\\'' + ' action=\\'' + action + '\\'' + ' target=\\'' + target + '\\'' + '/>');\n            },\n            stopFrameSubmit: function (frame) {\n                if (typeof frame.stop != 'undefined') {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand('Stop');\n                }\n            },\n            registerFrame: function (frame) {\n                this.iframes.push(frame);\n            },\n            unregisterFrame: function (frame) {\n                this.iframes = $.grep(this.iframes, function (value) {\n                    return value.attr('name') != frame.attr('name');\n                });\n            },\n            cleanupFrame: function (frame) {\n                var form = frame.data('form');\n                frame.data('file').data('frame', null);\n                setTimeout(function () {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n        var formDataUploadModule = function (upload) {\n            this.name = 'formDataUploadModule';\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.position = {};\n            this.metaData = {};\n            this.cancelled = {};\n            this.resume = {};\n            this.paused = {};\n            this.retries = {};\n        };\n        formDataUploadModule.prototype = {\n            onSelect: function (e, files) {\n                var upload = this.upload;\n                var module = this;\n                var sourceElement = $(e.target);\n                var fileEntries = this.prepareUpload(sourceElement, files);\n                var hasValidationErrors;\n                var prev;\n                $.each(fileEntries, function (index) {\n                    hasValidationErrors = upload._filesContainValidationErrors($(this.data('fileNames')));\n                    if (upload.options.async.autoUpload) {\n                        if (!hasValidationErrors) {\n                            if (upload.options.async.chunkSize) {\n                                module.prepareChunk(this);\n                                prev = this.prev();\n                                if (upload.options.async.concurrent || index === 0 && !prev.length || index === 0 && prev.hasClass('k-file-success')) {\n                                    module.performUpload(this);\n                                }\n                            } else {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            upload._fileAction(this, REMOVE);\n                            upload._showHeaderUploadStatus(false);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        if (!hasValidationErrors) {\n                            upload._showActionButtons();\n                            this.addClass('k-toupload');\n                        } else {\n                            upload._updateHeaderUploadStatus();\n                        }\n                    }\n                    if (hasValidationErrors) {\n                        upload._hideUploadProgress(this);\n                    }\n                });\n            },\n            prepareUpload: function (sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n                if (sourceElement.is('input')) {\n                    $.each(fileEntries, function () {\n                        $(this).data('relatedInput', sourceElement);\n                    });\n                    sourceElement.data('relatedFileEntries', fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n                return fileEntries;\n            },\n            enqueueFiles: function (files) {\n                var upload = this.upload;\n                var name;\n                var i;\n                var filesLength = files.length;\n                var currentFile;\n                var fileEntry;\n                var fileEntries = [];\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function (file) {\n                        return file.name;\n                    }).join(', ');\n                    if (upload.directory || upload.options.directoryDrop) {\n                        $(files).each(function () {\n                            if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                                this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                            }\n                        });\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data('files', files);\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        if (upload.directory || upload.options.directoryDrop) {\n                            if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                                currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                            }\n                        }\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data('files', [currentFile]);\n                        fileEntries.push(fileEntry);\n                    }\n                }\n                return fileEntries;\n            },\n            performUpload: function (fileEntry) {\n                var upload = this.upload, formData = this.createFormData(), xhr = this.createXHR(), e = {\n                        files: fileEntry.data('fileNames'),\n                        XMLHttpRequest: xhr\n                    }, files;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-information');\n                var fileSize = fileEntry.find('.k-file-size');\n                if (!upload.trigger(UPLOAD, e)) {\n                    if (fileEntry.find('.k-i-cancel').length === 0) {\n                        if (upload.options.async.chunkSize) {\n                            upload._fileAction(fileEntry, PAUSE);\n                        }\n                        upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                    }\n                    if (!upload.wrapper.find('.k-toupload').length) {\n                        upload._hideActionButtons();\n                    }\n                    upload._showHeaderUploadStatus(true);\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({}, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n                        files = fileEntry.data('files');\n                        if (files) {\n                            this.populateFormData(formData, files);\n                        }\n                    }\n                    upload._fileState(fileEntry, 'uploading');\n                    $(fileEntry).removeClass('k-file-error').addClass('k-file-progress');\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n                    if (upload.options.async.useArrayBuffer && window.FileReader) {\n                        this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    } else {\n                        this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    }\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n            _readFile: function (saveUrl, formData, fileEntry, xhr) {\n                var that = this;\n                var upload = that.upload;\n                var file = fileEntry.data('files')[0];\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    try {\n                        if (!that.fileArrayBuffer) {\n                            that.fileArrayBuffer = e.target.result;\n                        } else {\n                            that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                        }\n                    } catch (err) {\n                        upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                        return;\n                    }\n                    if (that.position[file.uid] > file.size) {\n                        that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                        that.fileArrayBuffer = null;\n                    } else {\n                        that._readFile(saveUrl, formData, fileEntry, xhr);\n                    }\n                };\n                reader.onerror = function () {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                };\n                reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n            },\n            _appendBuffer: function (buffer1, buffer2) {\n                var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n                tmp.set(new Uint8Array(buffer1), 0);\n                tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n                return tmp.buffer;\n            },\n            onSaveSelected: function () {\n                var module = this;\n                var upload = module.upload;\n                $('.k-toupload', this.element).filter(function () {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data('fileNames'));\n                    return !started && !hasValidationErrors;\n                }).each(function (index) {\n                    var fileEntry = $(this);\n                    var prevEntry = fileEntry.prev();\n                    fileEntry.removeClass('k-toupload');\n                    if (upload.options.async.chunkSize) {\n                        module.prepareChunk(fileEntry);\n                        if (upload.options.async.concurrent || index === 0 && !prevEntry.length || (index === 0 && prevEntry.hasClass('k-file-success') || prevEntry.hasClass('k-file-error'))) {\n                            module.performUpload(fileEntry);\n                        }\n                    } else {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n            onCancel: function (e) {\n                var fileEntry = getFileEntry(e);\n                if (this.upload.options.async.chunkSize) {\n                    this.cancelled[fileEntry.data('uid')] = true;\n                }\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n            onPause: function (e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileUid] = async.maxAutoRetries + 1;\n                    this.paused[fileUid] = true;\n                    this.resume[fileUid] = false;\n                }\n            },\n            onResume: function (e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data('uid');\n                if (this.upload.options.async.chunkSize) {\n                    delete this.paused[fileUid];\n                    this.resume[fileUid] = true;\n                    this.retries[fileEntry.data('uid')] = 1;\n                    this._increaseChunkIndex(fileUid);\n                    this.performUpload(fileEntry);\n                }\n            },\n            onRetry: function (e) {\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data('uid')] = async.maxAutoRetries + 1;\n                    delete this.paused[fileEntry.data('uid')];\n                }\n                this.performUpload(fileEntry);\n            },\n            onRemove: function (e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data('uid')] = async.maxAutoRetries + 1;\n                }\n                if (fileEntry.hasClass('k-file-success')) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    module.removeFileEntry(fileEntry);\n                }\n            },\n            createXHR: function () {\n                return new XMLHttpRequest();\n            },\n            postFormData: function (url, data, fileEntry, xhr) {\n                var module = this;\n                fileEntry.data('request', xhr);\n                xhr.addEventListener('load', function (e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n                xhr.addEventListener(ERROR, function (e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n                xhr.upload.addEventListener('progress', function (e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n                xhr.open('POST', url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n                var accept = this.upload.options.async.accept;\n                if (accept) {\n                    xhr.setRequestHeader('Accept', accept);\n                }\n                xhr.send(data);\n            },\n            createFormData: function () {\n                return new FormData();\n            },\n            populateFormData: function (data, files) {\n                var chunk;\n                var i;\n                var length = files.length;\n                var uid;\n                var upload = this.upload;\n                if (upload.options.async.chunkSize) {\n                    uid = files[0].uid;\n                    chunk = this._getCurrentChunk(files[0].rawFile, uid);\n                    data.append(upload.options.async.saveField || upload.name, chunk);\n                    var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                    data.append('metadata', serializedMetaData);\n                } else {\n                    for (i = 0; i < length; i++) {\n                        data.append(upload.options.async.saveField || upload.name, files[i].rawFile);\n                    }\n                }\n                return data;\n            },\n            onRequestSuccess: function (e, fileEntry) {\n                var xhr = e.target, module = this;\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n                function parseSuccess(jsonResult) {\n                    var batch = module.upload.options.async.batch;\n                    var chunkSize = module.upload.options.async.chunkSize;\n                    var concurrent = module.upload.options.async.concurrent;\n                    var fileUid = jsonResult.fileUid;\n                    if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                        return;\n                    }\n                    delete module.retries[fileUid];\n                    if (chunkSize && !batch && !jsonResult.uploaded) {\n                        module._increaseChunkIndex(fileUid);\n                        module.performUpload(fileEntry);\n                    } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass('k-toupload')) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.performUpload(fileEntry.next());\n                    } else {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }\n                }\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText, parseSuccess, raiseError);\n                } else {\n                    raiseError();\n                }\n            },\n            onRequestError: function (e, fileEntry) {\n                var xhr = e.target;\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n            cleanupFileEntry: function (fileEntry) {\n                var relatedInput = fileEntry.data('relatedInput'), uploadComplete = true;\n                if (relatedInput) {\n                    $.each(relatedInput.data('relatedFileEntries') || [], function () {\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass('k-file-success');\n                        }\n                    });\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n            removeFileEntry: function (fileEntry) {\n                var chunkSize = this.upload.options.async.chunkSize;\n                var concurrent = this.upload.options.async.concurrent;\n                var isUploadButtonVisible = this.upload.wrapper.find('.k-upload-selected').length > 0;\n                this.cleanupFileEntry(fileEntry);\n                if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                    if (fileEntry.next().length) {\n                        this.performUpload(fileEntry.next());\n                    }\n                }\n                this.upload._removeFileEntry(fileEntry);\n            },\n            onRequestProgress: function (e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                var fileUid = fileEntry.data('uid');\n                var fileMetaData;\n                if (this.upload.options.async.chunkSize) {\n                    fileMetaData = this.metaData[fileUid];\n                    percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(fileMetaData.chunkIndex / fileMetaData.totalChunks * 100) : 100;\n                }\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n            stopUploadRequest: function (fileEntry) {\n                if (fileEntry.data('request')) {\n                    fileEntry.data('request').abort();\n                }\n            },\n            prepareChunk: function (fileEntry) {\n                var file = fileEntry.data('files')[0];\n                var rawFile = file.rawFile;\n                var uid = file.uid;\n                var chunkSize = this.upload.options.async.chunkSize;\n                this.position[uid] = 0;\n                this.metaData[uid] = {\n                    chunkIndex: 0,\n                    contentType: rawFile.type,\n                    fileName: rawFile.name,\n                    relativePath: file.name,\n                    totalFileSize: rawFile.size,\n                    totalChunks: Math.ceil(rawFile.size / chunkSize),\n                    uploadUid: uid\n                };\n            },\n            _decreaseChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex--;\n            },\n            _increaseChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex++;\n            },\n            _resetChunkIndex: function (uid) {\n                this.metaData[uid].chunkIndex = 0;\n            },\n            _decreasePosition: function (uid) {\n                this.position[uid] -= this.upload.options.async.chunkSize;\n            },\n            _getCurrentChunk: function (file, uid) {\n                var oldPosition = this.position[uid];\n                var methodToInvoke;\n                var async = this.upload.options.async;\n                var chunkSize = async.chunkSize || async.bufferChunkSize;\n                if (!this.position[uid]) {\n                    this.position[uid] = 0;\n                }\n                this.position[uid] += chunkSize;\n                if (!!(methodToInvoke = this._getChunker(file))) {\n                    return file[methodToInvoke](oldPosition, this.position[uid]);\n                } else {\n                    return file;\n                }\n            },\n            _getChunker: function (file) {\n                if (file.slice) {\n                    return 'slice';\n                } else if (file.mozSlice) {\n                    return 'mozSlice';\n                } else if (file.webkitSlice) {\n                    return 'webkitSlice';\n                } else {\n                    return null;\n                }\n            }\n        };\n        function getFileName(input) {\n            return $.map(inputFiles(input), function (file) {\n                return file.name;\n            }).join(', ');\n        }\n        function inputFiles($input) {\n            var input = $input[0];\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                        name: stripPath(input.value),\n                        extension: getFileExtension(input.value),\n                        size: null\n                    }];\n            }\n        }\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function (file) {\n                return getFileInfo(file);\n            });\n        }\n        function getFileInfo(rawFile) {\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: typeof rawFile.size == 'number' ? rawFile.size : rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : '';\n        }\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf('\\\\');\n            return slashIndex != -1 ? name.substr(slashIndex + 1) : name;\n        }\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n            return $.map(files, function (file) {\n                file.uid = unique ? kendo.guid() : uid;\n                return file;\n            });\n        }\n        function validateFiles(files, validationInfo) {\n            var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n            var maxFileSize = validationInfo.maxFileSize;\n            var minFileSize = validationInfo.minFileSize;\n            for (var i = 0; i < files.length; i++) {\n                validateFileExtension(files[i], allowedExtensions);\n                validateFileSize(files[i], minFileSize, maxFileSize);\n            }\n        }\n        function parseAllowedExtensions(extensions) {\n            var allowedExtensions = $.map(extensions, function (ext) {\n                var parsedExt = ext.substring(0, 1) === '.' ? ext : '.' + ext;\n                return parsedExt.toLowerCase();\n            });\n            return allowedExtensions;\n        }\n        function validateFileExtension(file, allowedExtensions) {\n            if (allowedExtensions.length > 0) {\n                if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                    file.validationErrors = file.validationErrors || [];\n                    if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                        file.validationErrors.push(INVALIDFILEEXTENSION);\n                    }\n                }\n            }\n        }\n        function validateFileSize(file, minFileSize, maxFileSize) {\n            if (minFileSize !== 0 && file.size < minFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMINFILESIZE);\n                }\n            }\n            if (maxFileSize !== 0 && file.size > maxFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMAXFILESIZE);\n                }\n            }\n        }\n        function getTotalFilesSizeMessage(files) {\n            var totalSize = 0;\n            if (typeof files[0].size == 'number') {\n                for (var i = 0; i < files.length; i++) {\n                    if (files[i].size) {\n                        totalSize += files[i].size;\n                    }\n                }\n            } else {\n                return '';\n            }\n            totalSize /= 1024;\n            if (totalSize < 1024) {\n                return totalSize.toFixed(2) + ' KB';\n            } else {\n                return (totalSize / 1024).toFixed(2) + ' MB';\n            }\n        }\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $('.k-file', upload.wrapper).length > 1;\n        }\n        function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                return;\n            }\n            var files = fileEntry.data('fileNames');\n            var fileNames = $.map(files, function (file) {\n                return file.name;\n            });\n            if (shouldSendRemoveRequest === false) {\n                upload._removeFileEntry(fileEntry);\n                return;\n            }\n            upload._submitRemove(fileNames, eventArgs, function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: 'remove',\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }, function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n                upload.trigger(ERROR, {\n                    operation: 'remove',\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n                logToConsole('Server response: ' + xhr.responseText);\n            });\n        }\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false, json = '';\n            try {\n                json = JSON.parse(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n            if (success) {\n                onSuccess(json);\n            }\n        }\n        function normalizeJSON(input) {\n            if (typeof input === 'undefined' || input === '') {\n                input = '{}';\n            }\n            return input;\n        }\n        function stopEvent(e) {\n            if (e.originalEvent) {\n                e.originalEvent.dataTransfer.dropEffect = 'copy';\n            }\n            e.stopPropagation();\n            e.preventDefault();\n        }\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n            element.on('dragenter' + namespace, function (e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n                if (!hideInterval) {\n                    hideInterval = setInterval(function () {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            }).on('dragover' + namespace, function () {\n                lastDrag = new Date();\n            });\n        }\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is('.k-file-progress, .k-file-success, .k-file-error');\n        }\n        function getFileEntry(e) {\n            return $(e.target).closest('.k-file');\n        }\n        kendo.ui.plugin(Upload);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}