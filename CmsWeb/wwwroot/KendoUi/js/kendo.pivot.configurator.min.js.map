{"version":3,"sources":["kendo.pivot.configurator.js"],"names":["f","define","$","undefined","addKPI","data","found","idx","length","type","splice","caption","defaultHierarchy","name","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","target","closest","kpiMeasure","measure","hierarchyUniqueName","kpi","buildKPImeasures","value","goal","status","trend","PivotConfigurator","kendo","window","ui","Widget","common","pivotgrid","fetchDiscover","configuratorReducer","PIVOT_CONFIGURATOR_ACTION","ns","HOVER_EVENTS","SETTINGS_TEMPLATE","template","CONTENT_TEMPLATE","TARGET_ITEM_TEMPLATE","ACTIONS_TEMPLATE","SETTING_CONTAINER_TEMPLATE","PivotConfiguratorV2","extend","init","element","options","fn","call","this","addClass","_dataSource","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","_refreshHandler","unbind","_errorHandler","_progressHandler","proxy","_error","_requestStart","PivotDataSourceV2","create","bind","horizontal","panel","append","appendTo","formClass","find","each","index","elm","html","renderChipList","_fields","cancelText","applyText","_targets","on","_actions","e","preventDefault","currentTarget","_applyState","read","_cancelChanges","treeView","first","last","targetItemTemplate","renderChip","fillMode","themeColor","rounded","removable","removeIcon","_createTarget","connectWith","empty","setting","PivotSettingTargetV2","hint","clone","remove","item","wrapper","id","attr","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","result","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","hasChildren","transport","fetchOpts","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","connection","restrictions","catalogName","cubeName","command","then","newFields","success","get","_getKPIOptions","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","_progress","toggle","progress","destroy","fetch","plugin","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","promise","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","aggregator","drag","dropTarget","validate","setStatusClass","drop","push","add","icons","PivotSettingTarget","emptyTemplate","columnsContainer","icon","rowsContainer","measuresContainer","fieldMenu","_toggleHover","toggleClass","_resize","_cube","_catalog","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,4BACH,YACA,YACA,iBACDD,IACL,WAgqBE,MAppBC,UAAUE,EAAGC,GAEV,QAASC,GAAOC,GAIZ,IAJJ,GACQC,GACAC,EAAM,EACNC,EAASH,EAAKG,OACXD,EAAMC,EAAQD,IACjB,GAAsB,GAAlBF,EAAKE,GAAKE,KAAW,CACrBH,GAAQ,CACR,OAGJA,GACAD,EAAKK,OAAOH,EAAM,EAAG,GACjBI,QAAS,OACTC,iBAAkB,SAClBC,KAAM,OACNC,WAAY,WAIxB,QAASC,GAAQC,GACb,OACIH,KAAMG,EAAKF,WACXL,KAAMO,EAAKP,MAGnB,QAASQ,GAAcZ,GACnB,IAAK,GAAIE,GAAM,EAAGC,EAASH,EAAKG,OAAQD,EAAMC,EAAQD,IAClDF,EAAKE,GAAKO,WAAaT,EAAKE,GAAKM,KACjCR,EAAKE,GAAKE,KAAO,KAErB,OAAOJ,GAEX,QAASa,GAAsBF,GAC3B,GAAIG,GAASjB,EAAEc,GAAMI,QAAQ,mBAC7B,OAAID,GAAOX,OACAW,EAAOd,KAAK,2BAEhB,KA+kBX,QAASgB,GAAWR,EAAMS,EAASb,GAC/B,OACIc,oBAAqBV,EACrBC,WAAYQ,EACZX,QAASW,EACTA,QAASA,EACTT,KAAMS,EACNb,KAAMA,EACNe,KAAK,GAGb,QAASC,GAAiBT,GACtB,GAAIH,GAAOG,EAAKH,IAChB,QACIQ,EAAWR,EAAMG,EAAKU,MAAO,SAC7BL,EAAWR,EAAMG,EAAKW,KAAM,QAC5BN,EAAWR,EAAMG,EAAKY,OAAQ,UAC9BP,EAAWR,EAAMG,EAAKa,MAAO,UAvoBxC,GAiXOC,GAhXAC,EAAQC,OAAOD,MAAOE,EAAKF,EAAME,GAAIC,EAASD,EAAGC,OAAQC,EAASH,OAAOD,MAAMK,UAAUD,OAAQE,EAAgBF,EAAOE,cAAeC,EAAsBH,EAAOG,oBAAqBC,EAA4BJ,EAAOI,0BAA2BC,EAAK,0BAA2BC,EAAe,aAAeD,EAAK,cAAgBA,EAAIE,EAAoBX,EAAMY,SAAS,uHAAkIC,EAAmBb,EAAMY,SAAS,wxBAAs5BE,EAAuB,gIAAgJC,EAAmBf,EAAMY,SAAS,+XAAmaI,EAA6BhB,EAAMY,SAAS,wIAwCnkEK,EAAsBd,EAAOe,QAC7BC,KAAM,SAAUC,EAASC,GACrBlB,EAAOmB,GAAGH,KAAKI,KAAKC,KAAMJ,EAASC,GACnCG,KAAKJ,QAAQK,SAAS,oDACtBD,KAAKE,cACLF,KAAKG,UACLH,KAAKI,UACDP,EAAQQ,QACRL,KAAKJ,QAAQS,OAAOR,EAAQQ,QAEhC7B,EAAM8B,OAAON,OAEjBO,UACAV,SACIvC,KAAM,sBACNkD,YAAa,WACbC,YAAY,EACZC,UAAU,EACVC,UACIC,MAAO,WACPC,iBAAkB,SAClBC,gBAAiB,QACjBC,SAAU,oCACVC,QAAS,oCACTC,KAAM,sCAGdC,cAAe,SAAUC,GACrBnB,KAAKH,QAAQsB,WAAaA,EAC1BnB,KAAKE,cACDF,KAAKe,UACLf,KAAKe,SAASG,cAAcC,GAE5BnB,KAAKiB,MACLjB,KAAKiB,KAAKC,cAAcC,GAExBnB,KAAKgB,SACLhB,KAAKgB,QAAQE,cAAcC,GAE/BnB,KAAKI,WAETF,YAAa,WACT,GAAIkB,GAAOpB,IACPoB,GAAKD,YAAcC,EAAKC,gBACxBD,EAAKD,WAAWG,OAAO,SAAUF,EAAKC,iBAAiBC,OAAO,QAASF,EAAKG,eAAeD,OAAO,WAAYF,EAAKI,mBAEnHJ,EAAKG,cAAgB5E,EAAE8E,MAAML,EAAKM,OAAQN,GAC1CA,EAAKC,gBAAkB1E,EAAE8E,MAAML,EAAKhB,QAASgB,GAC7CA,EAAKI,iBAAmB7E,EAAE8E,MAAML,EAAKO,cAAeP,IAExDA,EAAKD,WAAa3C,EAAM1B,KAAK8E,kBAAkBC,OAAOT,EAAKvB,QAAQsB,YACnEC,EAAKD,WAAWW,KAAK,SAAUV,EAAKC,iBAAiBS,KAAK,QAASV,EAAKG,eAAeO,KAAK,WAAYV,EAAKI,mBAEjHrB,QAAS,WAAA,GACDiB,GAAOpB,KACPH,EAAUuB,EAAKvB,QACfc,EAAWd,EAAQc,SACnBoB,EAAoC,cAAvBlC,EAAQW,YACrBwB,EAAQrF,EAAE,mFACdqF,GAAM/B,SAAS8B,EAAa,sCAAwC,qCACpEX,EAAKxB,QAAQqC,OAAOD,GACpBZ,EAAKY,MAAQA,EACbrF,EAAEwC,GAAoByB,MAAOZ,KAAKH,QAAQc,SAASC,SAAUsB,SAASd,EAAKY,OAC3ErF,EAAE0C,GACE8C,UAAWJ,EAAa,2BAA6B,SACrDtB,WAAYZ,EAAQY,WACpBsB,WAAYA,KACZG,SAASd,EAAKY,OAAOI,KAAK,gBAAgBC,KAAK,SAAUC,EAAOC,GAChE/D,EAAMgE,KAAKC,eAAeF,EAAK5F,EAAE+C,UAAWG,MAEhDuB,EAAKsB,UACL/F,EAAE4C,GACEoD,WAAYhC,EAASE,iBACrB+B,UAAWjC,EAASG,mBACpBoB,SAASd,EAAKY,OAClBZ,EAAKyB,WACLzB,EAAKxB,QAAQkD,GAAG,QAAU7D,EAAI,6CAA8CtC,EAAE8E,MAAML,EAAK2B,SAAU3B,KAEvG2B,SAAU,SAAUC,GAChBA,EAAEC,gBACF,IAAIrF,GAASjB,EAAEqG,EAAEE,cACbtF,GAAO0E,SACPtC,KAAKgB,QAAQmC,cACbnD,KAAKiB,KAAKkC,cACVnD,KAAKe,SAASoC,cACdnD,KAAKmB,WAAWiC,SAEhBpD,KAAKgB,QAAQqC,iBACbrD,KAAKiB,KAAKoC,iBACVrD,KAAKe,SAASsC,iBACdrD,KAAKsD,SAASnC,WAAWiC,SAGjCP,SAAU,WAAA,GACFzB,GAAOpB,KACPgB,EAAUI,EAAKY,MAAMI,KAAK,oBAAoBmB,QAC9CtC,EAAOG,EAAKY,MAAMI,KAAK,iBACvBrB,EAAWK,EAAKY,MAAMI,KAAK,gBAAgBoB,OAC3C3D,EAAUG,KAAKH,QACf4D,EAAqBjF,EAAMgE,KAAKkB,WAAWpE,EAAsB3C,EAAE+C,UAAWG,GAC9E8D,SAAU,QACVC,WAAY,OACZC,QAAS,OACTC,WAAW,EACXC,WAAY,iBAEhB/D,MAAKgB,QAAUhB,KAAKgE,cAAchD,GAC9BP,WAAYZ,EAAQY,WACpBC,SAAUb,EAAQa,SAClBtB,SAAUqE,EACVQ,YAAahD,EACbN,UAAYuD,MAAOrE,EAAQc,SAASK,WAExChB,KAAKiB,KAAOjB,KAAKgE,cAAc/C,GAC3BR,WAAYZ,EAAQY,WACpBC,SAAUb,EAAQa,SAClBtB,SAAUqE,EACVU,QAAS,OACTF,YAAajD,EACbL,UAAYuD,MAAOlE,KAAKH,QAAQc,SAASM,QAE7CjB,KAAKe,SAAWf,KAAKgE,cAAcjD,GAC/BoD,QAAS,WACT/E,SAAUqE,EACV9C,UAAYuD,MAAOrE,EAAQc,SAASI,aAG5CiD,cAAe,SAAUpE,EAASC,GAC9B,GAAIuB,GAAOpB,IACX,OAAO,IAAIxB,GAAME,GAAG0F,qBAAqBxE,EAASjD,EAAE+C,QAChDyB,WAAYnB,KAAKmB,WACjBkD,KAAM,SAAUzE,GACZ,MAAOA,GAAQ0E,SAEnBC,OAAQ,SAAUvB,GAAV,GACAwB,GAAOpD,EAAKkC,SAASmB,QAAQrC,KAAK,eAAkBY,EAAE1F,KAAO,MAAOO,QAAQ,MAC5E6G,EAAKF,EAAKG,KAAKnG,EAAMmG,KAAK,QAC1BC,EAAWxD,EAAKkC,SAASnC,WAAW0D,SAASH,EAC7CE,KACAA,EAASE,SAAU,EACnBN,EAAKpC,KAAK,SAASuC,KAAK,WAAW,KAG3CvF,SAAUS,EAAQT,UACnBS,KAEP6C,QAAS,WAAA,GACDtB,GAAOpB,KACP+E,EAAY3D,EAAKxB,QAAQwC,KAAK,yBAClCpC,MAAKsD,SAAW3G,EAAE,UAAUuF,SAAS6C,GAAWC,eAC5CC,YACIC,eAAe,EACf9F,SAAU,iSAEd+F,cAAe,UACfC,UAAU,EACVC,MAAO,SAAUrC,GAAV,GACC4B,GAAW5B,EAAEsC,OAAOV,SAAS5B,EAAEvF,MAC/B8H,GACArI,KAAM8B,EAA0BwG,gBAChCC,QAASb,GAETc,GACAC,WAAYvE,EAAKJ,QAAQ4E,SACzBC,QAASzE,EAAKH,KAAK2E,SACnBE,YAAa1E,EAAKL,SAAS6E,UAE3BG,EAAShH,EAAoB2G,EAAOH,EACpCX,GAASvH,kBAAoBuH,EAASoB,MAAM/I,SAC5CmE,EAAK6E,gBAAiB3I,KAAMsH,EAASvH,mBAAqBuH,EAASoB,OACnEpB,EAASoB,MAAME,QAAQ,WAEvBH,EAAOJ,aACPvE,EAAKJ,QAAQ4E,OAAOG,EAAOJ,YAC3BvE,EAAKJ,QAAQmF,WAEbJ,EAAOF,UACPzE,EAAKH,KAAK2E,OAAOG,EAAOF,SACxBzE,EAAKH,KAAKkF,WAEVJ,EAAOD,cACP1E,EAAKL,SAAS6E,OAAOG,EAAOD,aAC5B1E,EAAKL,SAASoF,YAGtBhF,WAAYnB,KAAKoG,wBAClBtJ,KAAK,iBACRkD,KAAKsD,SAASmB,QAAQ4B,IAAI,QAASrG,KAAKsD,SAASgD,gBAErDF,oBAAqB,WACjB,GAAIhF,GAAOpB,IACX,OAAOxB,GAAM1B,KAAKyJ,uBAAuB1E,QACrC2E,QACIC,OACI/B,GAAI,aACJgC,YAAa,SAAUlC,GACnB,QAAS,uBAAyBA,IAAW,cAAgBA,OAIzEmC,WACIvD,KAAM,SAAUvD,GAAV,GACEpC,GAUImJ,EATJD,EAAYvF,EAAKD,WAAWwF,UAC5BE,EAAUF,EAAUE,UACpBC,EAAOH,EAAUG,OACjBC,GAAiBC,IAAKL,EAAU9G,QAAQuD,MACxCpC,EAAUI,EAAKJ,QAAQ4E,SACvB3E,EAAOG,EAAKH,KAAK2E,SACjB7E,EAAWK,EAAKL,SAAS6E,SACzBqB,EAAUjG,EAAQkG,OAAOjG,GAAMiG,OAAOnG,EACtCpE,GAAEwK,cAActH,EAAQ/C,OACpB8J,GACAQ,YACIP,QAASA,EACTC,KAAMA,GAEVO,cACIC,YAAaT,EACbU,SAAUT,GAEdU,QAAS,oBAEb1I,EAAciI,EAAcH,GAAWa,KAAK,SAAUC,GAClDtG,EAAK6E,cAAcgB,EAASS,GAC5B7K,EAAO6K,GACP7H,EAAQ8H,QAAQD,OAGpBjK,EAAO2D,EAAKkC,SAASnC,WAAWyG,IAAI/H,EAAQ/C,KAAKS,YACzB,WAApBE,EAAKF,WACLuB,EAAciI,EAAc3F,EAAKyG,eAAehB,EAASC,IAAOW,KAAK,SAAUC,GAC3E7H,EAAQ8H,QAAQjK,EAAcgK,MAEd,OAAbjK,EAAKP,KACZ2C,EAAQ8H,QAAQzJ,EAAiBT,IAEjCqB,EAAciI,EAAc3F,EAAK0G,mBAAmBrK,EAAMoJ,EAASC,IAAOW,KAAK,SAAUC,GACrFtG,EAAK6E,cAAcgB,EAASS,GAC5B7H,EAAQ8H,QAAQD,WAQ5CzB,cAAe,SAAUgB,EAASc,GAAnB,GACPC,MACA1F,EAAQ,CACZ,KAAKA,EAAQ,EAAGA,EAAQ2E,EAAQhK,OAAQqF,IACpC0F,EAAKf,EAAQ3E,GAAOhF,OAAQ,CAEhC,KAAKgF,EAAQ,EAAGA,EAAQyF,EAAQ9K,OAAQqF,IAChC0F,EAAKD,EAAQzF,GAAO/E,cACpBwK,EAAQzF,GAAOwC,SAAU,IAIrC+C,eAAgB,SAAUhB,EAASC,GAC/B,OACIM,YACIP,QAASA,EACTC,KAAMA,GAEVO,cACIC,YAAaT,EACbU,SAAUT,GAEdU,QAAS,eAGjBM,mBAAoB,SAAUG,EAAOpB,EAASC,GAA1B,GACZU,GACAU,EACAlK,EAUA6B,CAaJ,OAtBmB,KAAfoI,EAAM/K,KACNsK,EAAU,iBACHS,EAAMC,qBACbV,EAAU,eACVxJ,EAAsBiK,EAAM1K,aAE5BiK,EAAU,oBACVU,EAAsBD,EAAM1K,YAE5BsC,GACAuH,YACIP,QAASA,EACTC,KAAMA,GAEVO,cACIC,YAAaT,EACbU,SAAUT,EACV9I,oBAAqBA,EACrBkK,oBAAqBA,GAEzBV,QAASA,IAIjBW,UAAW,SAAUC,GACjB5J,EAAME,GAAG2J,SAASrI,KAAKJ,QAASwI,IAEpC1G,OAAQ,WACJ1B,KAAKmI,WAAU,IAEnBxG,cAAe,WACX3B,KAAKmI,WAAU,IAEnBG,QAAS,WACL3J,EAAOmB,GAAGwI,QAAQvI,KAAKC,MACvBA,KAAKmB,WAAWG,OAAO,SAAUtB,KAAKqB,iBACtCrB,KAAKJ,QAAQyG,IAAIpH,GACjBe,KAAKiB,KAAKqH,UACVtI,KAAKgB,QAAQsH,UACbtI,KAAKe,SAASuH,UACdtI,KAAKsD,SAASgF,UACdtI,KAAKJ,QAAU,KACfI,KAAKqB,gBAAkB,MAE3BjB,QAAS,WACDJ,KAAKsD,UACLtD,KAAKsD,SAASnC,WAAWoH,QAE7BvI,KAAKmI,WAAU,KAGvBzJ,GAAG8J,OAAO/I,GACNlB,EAAoBI,EAAOe,QAC3BC,KAAM,SAAUC,EAASC,GACrBlB,EAAOmB,GAAGH,KAAKI,KAAKC,KAAMJ,EAASC,GACnCG,KAAKJ,QAAQK,SAAS,+CAClBD,KAAKH,QAAQQ,QACbL,KAAKJ,QAAQ6I,YAAYzI,KAAKH,QAAQQ,QAE1CL,KAAKE,cACLF,KAAKG,UACLH,KAAKI,UACL5B,EAAM8B,OAAON,OAEjBO,UACAV,SACIvC,KAAM,oBACNmD,YAAY,EACZC,UAAU,EACVC,UACII,SAAU,wBACVC,QAAS,0BACTC,KAAM,wBACNyH,cAAe,WACfC,aAAc,UACdC,UAAW,OACXC,YAAa,WAGrB3I,YAAa,WACT,GAAIkB,GAAOpB,IACPoB,GAAKD,YAAcC,EAAKC,gBACxBD,EAAKD,WAAWG,OAAO,SAAUF,EAAKC,iBAAiBC,OAAO,QAASF,EAAKG,eAAeD,OAAO,WAAYF,EAAKI,mBAEnHJ,EAAKG,cAAgB5E,EAAE8E,MAAML,EAAKM,OAAQN,GAC1CA,EAAKC,gBAAkB1E,EAAE8E,MAAML,EAAKhB,QAASgB,GAC7CA,EAAKI,iBAAmB7E,EAAE8E,MAAML,EAAKO,cAAeP,IAExDA,EAAKD,WAAa3C,EAAM1B,KAAKgM,gBAAgBjH,OAAOT,EAAKvB,QAAQsB,YACjEC,EAAKD,WAAWW,KAAK,SAAUV,EAAKC,iBAAiBS,KAAK,QAASV,EAAKG,eAAeO,KAAK,WAAYV,EAAKI,mBAEjHN,cAAe,SAAUC,GACrBnB,KAAKH,QAAQsB,WAAaA,EAC1BnB,KAAKE,cACDF,KAAKe,UACLf,KAAKe,SAASG,cAAcC,GAE5BnB,KAAKiB,MACLjB,KAAKiB,KAAKC,cAAcC,GAExBnB,KAAKgB,SACLhB,KAAKgB,QAAQE,cAAcC,GAE/BnB,KAAKI,WAETgG,oBAAqB,WACjB,GAAIhF,GAAOpB,IACX,OAAOxB,GAAM1B,KAAKyJ,uBAAuB1E,QACrC2E,QACIC,OACI/B,GAAI,aACJgC,YAAa,SAAUlC,GACnB,QAAS,uBAAyBA,IAAW,cAAgBA,OAIzEmC,WACIvD,KAAM,SAAUvD,GAAV,GACEkJ,GACAtL,EACAQ,CACAtB,GAAEwK,cAActH,EAAQ/C,OACxBiM,EAAU3H,EAAKD,WAAW6H,mBAC1BD,EAAQE,KAAK,SAAUnM,GACdsE,EAAKD,WAAW+H,aACjBrM,EAAOC,GAEX+C,EAAQ8H,QAAQ7K,KACjBqM,KAAKtJ,EAAQuJ,SAEhB3L,EAAO2D,EAAKkC,SAASnC,WAAWyG,IAAI/H,EAAQ/C,KAAKS,YACzB,WAApBE,EAAKF,YACLU,GAAM,EACN8K,EAAU3H,EAAKD,WAAWkI,aAC1BN,EAAQE,KAAK,SAAUnM,GACnB+C,EAAQ8H,QAAQjK,EAAcZ,MAC/BqM,KAAKtJ,EAAQuJ,QACI,OAAb3L,EAAKP,OACZe,GAAM,EACN4B,EAAQ8H,QAAQzJ,EAAiBT,KAEhCQ,IAEG8K,EADa,GAAbtL,EAAKP,KACKkE,EAAKD,WAAWmI,iBACnB7L,EAAKyK,oBACF9G,EAAKD,WAAWoI,aAAa1J,EAAQ/C,KAAKS,YAE1C6D,EAAKD,WAAWqI,kBAAkB3J,EAAQ/C,KAAKS,YAE7DwL,EAAQE,KAAKpJ,EAAQ8H,SAASwB,KAAKtJ,EAAQuJ,cAOnEjB,UAAW,SAAUC,GACjB5J,EAAME,GAAG2J,SAASrI,KAAKJ,QAASwI,IAEpC1G,OAAQ,WACJ1B,KAAKmI,WAAU,IAEnBxG,cAAe,WACX3B,KAAKmI,WAAU,IAEnBhI,QAAS,WACLxD,EAAE,oGAAoGuF,SAASlC,KAAKJ,SACpHI,KAAKyJ,KAAOzJ,KAAKJ,QAAQwC,KAAK,qCAC9BpC,KAAK0C,UACL1C,KAAK6C,YAETH,QAAS,WAAA,GACDqC,GAAYpI,EAAE,4EAA8EqD,KAAKH,QAAQc,SAASkI,YAAc,4DAA4D3G,SAASlC,KAAKyJ,MAC1MrK,EAAW,uQACfY,MAAKsD,SAAW3G,EAAE,UAAUuF,SAAS6C,EAAU3C,KAAK,2BAA2B4C,eAC3E5F,SAAUA,EACV+F,cAAe,UACfuE,aAAa,EACbtE,UAAU,EACVjE,WAAYnB,KAAKoG,sBACjBuD,UAAW,SAAU3G,GACjB,GAAI4B,GAAW5E,KAAK4E,SAAS5B,EAAE4G,aAC1BhF,EAAS8B,aAAgB9B,EAASiF,YAAejF,EAAS7G,UAA4B,GAAjB6G,EAAS1H,MAAqC,WAAxB0H,EAASrH,YACrGyF,EAAEC,kBAGV6G,KAAM,SAAU9G,GAAV,GACE3E,GAAS,aACT8F,EAAUxG,EAAsBqF,EAAE+G,WAClC5F,IAAWA,EAAQ6F,SAAShK,KAAK4E,SAAS5B,EAAE4G,eAC5CvL,EAAS,YAEb2E,EAAEiH,eAAe5L,IAErB6L,KAAM,SAAUlH,GAAV,GAEEmB,GACA1G,EACAT,EAAKC,EAAQ8D,EACbzD,CACJ,IALA0F,EAAEC,iBACEkB,EAAUxG,EAAsBqF,EAAE+G,YAClCtM,EAAOuC,KAAK4E,SAAS5B,EAAE4G,YAGvBzF,GAAWA,EAAQ6F,SAASvM,GAAO,CAEnC,GADAH,EAAOG,EAAKJ,kBAAoBI,EAAKF,WACnB,QAAdE,EAAKP,KAIL,IAHA6D,EAAW7C,EAAiBT,GAC5BR,EAAS8D,EAAS9D,OAClBK,KACKN,EAAM,EAAGA,EAAMC,EAAQD,IACxBM,EAAK6M,KAAK3M,EAAQuD,EAAS/D,SAExBS,GAAKQ,MACZX,GAAQE,EAAQC,IAEpB0G,GAAQiG,IAAI9M,OAGrBR,KAAK,kBAEZkH,cAAe,SAAUpE,EAASC,GAAnB,GACPT,GAAW,GACXsB,EAAWb,EAAQa,SACnB2J,EAAQ,EAWZ,OAVI3J,KACA2J,GAAS,yBACTA,GAAS,sFACTA,GAAS,QAETxK,EAAQY,YAAcC,KACtB2J,GAAS,yGAEbA,GAAS,6FACTjL,EAAW,qFAA4FZ,EAAMS,GAAK,qJAA2KoL,EAAQ,iBAC9R,GAAI7L,GAAME,GAAG4L,mBAAmB1K,EAASjD,EAAE+C,QAC9CyB,WAAYnB,KAAKmB,WACjB/B,SAAUA,EACVmL,cAAe,wCAChB1K,KAEPgD,SAAU,WAAA,GACFkC,GAAYpI,EAAE,sCAAsCuF,SAASlC,KAAKyJ,MAClEe,EAAmB7N,EAAE6C,GACrBlC,KAAM0C,KAAKH,QAAQc,SAASgI,aAC5B8B,KAAM,iBACNvI,SAAS6C,GACT/D,EAAUrE,EAAE,+CAA+CuF,SAASsI,EAAiBpI,KAAK,6BAC1FsI,EAAgB/N,EAAE6C,GAClBlC,KAAM0C,KAAKH,QAAQc,SAASiI,UAC5B6B,KAAM,cACNvI,SAAS6C,GACT9D,EAAOtE,EAAE,+CAA+CuF,SAASwI,EAActI,KAAK,6BACpFuI,EAAoBhO,EAAE6C,GACtBlC,KAAM0C,KAAKH,QAAQc,SAAS+H,cAC5B+B,KAAM,aACNvI,SAAS6C,GACThE,EAAWpE,EAAE,+CAA+CuF,SAASyI,EAAkBvI,KAAK,6BAC5FvC,EAAUG,KAAKH,OACnBG,MAAKgB,QAAUhB,KAAKgE,cAAchD,GAC9BP,WAAYZ,EAAQY,WACpBC,SAAUb,EAAQa,SAClBuD,YAAahD,EACbN,UACIuD,MAAOrE,EAAQc,SAASK,QACxB4J,UAAW/K,EAAQc,SAASiK,aAGpC5K,KAAKiB,KAAOjB,KAAKgE,cAAc/C,GAC3BR,WAAYZ,EAAQY,WACpBC,SAAUb,EAAQa,SAClByD,QAAS,OACTF,YAAajD,EACbL,UACIuD,MAAOlE,KAAKH,QAAQc,SAASM,KAC7B2J,UAAW5K,KAAKH,QAAQc,SAASiK,aAGzC5K,KAAKe,SAAWf,KAAKgE,cAAcjD,GAC/BoD,QAAS,WACTxD,UAAYuD,MAAOrE,EAAQc,SAASI,YAExCC,EAAQoJ,IAAInJ,GAAMmJ,IAAIrJ,GAAU+B,GAAG5D,EAAc,wBAAyBc,KAAK6K,eAEnFA,aAAc,SAAU7H,GACpBrG,EAAEqG,EAAEE,eAAe4H,YAAY,gBAA4B,eAAX9H,EAAE9F,OAEtD6N,QAAS,WAAA,GACDnL,GAAUI,KAAKJ,QACfS,EAASL,KAAKH,QAAQQ,MACrBA,IAGLT,EAAQ6I,YAAYpI,IAExBD,QAAS,WACL,GAAIe,GAAanB,KAAKmB,YAClBA,EAAW+H,aAAelJ,KAAKgL,QAAU7J,EAAW2F,QAAU9G,KAAKiL,WAAa9J,EAAW0F,YAC3F7G,KAAKsD,SAASnC,WAAWoH,QAE7BvI,KAAKiL,SAAWjL,KAAKmB,WAAW0F,UAChC7G,KAAKgL,MAAQhL,KAAKmB,WAAW2F,OAC7B9G,KAAK+K,UACL/K,KAAKmI,WAAU,IAEnBG,QAAS,WACL3J,EAAOmB,GAAGwI,QAAQvI,KAAKC,MACvBA,KAAKmB,WAAWG,OAAO,SAAUtB,KAAKqB,iBACtCrB,KAAKyJ,KAAKrH,KAAK,oBAAoBiE,IAAIpH,GACvCe,KAAKiB,KAAKqH,UACVtI,KAAKgB,QAAQsH,UACbtI,KAAKe,SAASuH,UACdtI,KAAKsD,SAASgF,UACdtI,KAAKJ,QAAU,KACfI,KAAKqB,gBAAkB,QAuB/B7C,EAAM0M,cAAcC,eAAe,WAAY,WAC/C3M,EAAM0M,cAAcE,eAAe,aAC3BC,KAAM,UACNC,OAAQ9M,EAAM0M,cAAcK,cAAcrE,SAClC,OACA,aAGhBxI,EAAG8J,OAAOjK,IACZE,OAAOD,MAAMgN,QACR/M,OAAOD,OACE,kBAAV9B,SAAwBA,OAAO+O,IAAM/O,OAAS,SAAUgP,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.pivot.configurator.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.pivot.configurator', [\n        'kendo.dom',\n        'html/chip',\n        'html/chiplist'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'pivot.configurator',\n        name: 'PivotConfigurator',\n        category: 'web',\n        depends: [\n            'dropdownlist',\n            'treeview',\n            'pivot.fieldmenu'\n        ],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, common = window.kendo.pivotgrid.common, fetchDiscover = common.fetchDiscover, configuratorReducer = common.configuratorReducer, PIVOT_CONFIGURATOR_ACTION = common.PIVOT_CONFIGURATOR_ACTION, ns = '.kendoPivotConfigurator', HOVER_EVENTS = 'mouseenter' + ns + ' mouseleave' + ns, SETTINGS_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-configurator-header\">' + '<div class=\"k-pivotgrid-configurator-header-text\">#:title#</div>' + '</div>'), CONTENT_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-configurator-content\">' + '<form class=\"#:formClass#\">' + '#if (horizontal) {# <div class=\"k-form-field-wrapper\"> #}#' + '<div class=\"k-form-field\">' + '<label class=\"k-label\">Fields</label>' + '</div>' + '<div class=\"k-form-field\">' + '<div class=\"k-fields-list-wrapper\"></div>' + '</div>' + '#if (horizontal) {# </div><div class=\"k-form-field-wrapper\"> #}#' + '<div class=\"k-form-field\">' + '<label class=\"k-label\">Columns</label>' + '</div>' + '<div class=\"k-chip-list k-column-fields\"></div>' + '<div class=\"k-form-field\">' + '<label class=\"k-label\">Rows</label>' + '</div>' + '<div class=\"k-chip-list k-row-fields\"></div>' + '#if (horizontal) {# </div><div class=\"k-form-field-wrapper\"> #}#' + '<div class=\"k-form-field\">' + '<label class=\"k-label\">Values</label>' + '</div>' + '<div class=\"k-chip-list k-column-fields\"></div>' + '#if (horizontal) {# </div> #}#' + '</form>' + '</div>'), TARGET_ITEM_TEMPLATE = '<span>' + '<span class=\"k-chip-label\">#:name#</span>' + '#if (menuenabled) {# <span class=\"k-icon k-i-more-vertical\"></span> #}#' + '</span>', ACTIONS_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' + '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\">' + '<span class=\"k-button-text\">#:cancelText#</span>' + '</button>' + '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\">' + '<span class=\"k-button-text\">#:applyText#</span>' + '</button>' + '</div>'), SETTING_CONTAINER_TEMPLATE = kendo.template('<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${name}</strong><div class=\"k-pivotgrid-target-wrap\"></div>');\n        function addKPI(data) {\n            var found;\n            var idx = 0;\n            var length = data.length;\n            for (; idx < length; idx++) {\n                if (data[idx].type == 2) {\n                    found = true;\n                    break;\n                }\n            }\n            if (found) {\n                data.splice(idx + 1, 0, {\n                    caption: 'KPIs',\n                    defaultHierarchy: '[KPIs]',\n                    name: 'KPIs',\n                    uniqueName: '[KPIs]'\n                });\n            }\n        }\n        function kpiNode(node) {\n            return {\n                name: node.uniqueName,\n                type: node.type\n            };\n        }\n        function normalizeKPIs(data) {\n            for (var idx = 0, length = data.length; idx < length; idx++) {\n                data[idx].uniqueName = data[idx].name;\n                data[idx].type = 'kpi';\n            }\n            return data;\n        }\n        function settingTargetFromNode(node) {\n            var target = $(node).closest('.k-pivot-setting');\n            if (target.length) {\n                return target.data('kendoPivotSettingTarget');\n            }\n            return null;\n        }\n        var PivotConfiguratorV2 = Widget.extend({\n            init: function (element, options) {\n                Widget.fn.init.call(this, element, options);\n                this.element.addClass('k-widget k-pivotgrid-configurator k-pos-relative');\n                this._dataSource();\n                this._layout();\n                this.refresh();\n                if (options.height) {\n                    this.element.height(options.height);\n                }\n                kendo.notify(this);\n            },\n            events: [],\n            options: {\n                name: 'PivotConfiguratorV2',\n                orientation: 'vertical',\n                filterable: false,\n                sortable: false,\n                messages: {\n                    title: 'Settings',\n                    cancelButtonText: 'Cancel',\n                    applyButtonText: 'Apply',\n                    measures: 'Select some fields to begin setup',\n                    columns: 'Select some fields to begin setup',\n                    rows: 'Select some fields to begin setup'\n                }\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n                this.refresh();\n            },\n            _dataSource: function () {\n                var that = this;\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind('change', that._refreshHandler).unbind('error', that._errorHandler).unbind('progress', that._progressHandler);\n                } else {\n                    that._errorHandler = $.proxy(that._error, that);\n                    that._refreshHandler = $.proxy(that.refresh, that);\n                    that._progressHandler = $.proxy(that._requestStart, that);\n                }\n                that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n                that.dataSource.bind('change', that._refreshHandler).bind('error', that._errorHandler).bind('progress', that._progressHandler);\n            },\n            _layout: function () {\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var horizontal = options.orientation == 'horizontal';\n                var panel = $('<div class=\\'k-pivotgrid-configurator-panel k-pivotgrid-configurator-push\\'></div>');\n                panel.addClass(horizontal ? 'k-pivotgrid-configurator-horizontal' : 'k-pivotgrid-configurator-vertical');\n                that.element.append(panel);\n                that.panel = panel;\n                $(SETTINGS_TEMPLATE({ title: this.options.messages.title })).appendTo(that.panel);\n                $(CONTENT_TEMPLATE({\n                    formClass: horizontal ? 'k-form k-form-horizontal' : 'k-form',\n                    filterable: options.filterable,\n                    horizontal: horizontal\n                })).appendTo(that.panel).find('.k-chip-list').each(function (index, elm) {\n                    kendo.html.renderChipList(elm, $.extend({}, options));\n                });\n                that._fields();\n                $(ACTIONS_TEMPLATE({\n                    cancelText: messages.cancelButtonText,\n                    applyText: messages.applyButtonText\n                })).appendTo(that.panel);\n                that._targets();\n                that.element.on('click' + ns, '.k-pivotgrid-configurator-actions > button', $.proxy(that._actions, that));\n            },\n            _actions: function (e) {\n                e.preventDefault();\n                var target = $(e.currentTarget);\n                if (target.index()) {\n                    this.columns._applyState();\n                    this.rows._applyState();\n                    this.measures._applyState();\n                    this.dataSource.read();\n                } else {\n                    this.columns._cancelChanges();\n                    this.rows._cancelChanges();\n                    this.measures._cancelChanges();\n                    this.treeView.dataSource.read();\n                }\n            },\n            _targets: function () {\n                var that = this;\n                var columns = that.panel.find('.k-column-fields').first();\n                var rows = that.panel.find('.k-row-fields');\n                var measures = that.panel.find('.k-chip-list').last();\n                var options = this.options;\n                var targetItemTemplate = kendo.html.renderChip(TARGET_ITEM_TEMPLATE, $.extend({}, options, {\n                    fillMode: 'solid',\n                    themeColor: 'base',\n                    rounded: 'full',\n                    removable: true,\n                    removeIcon: 'close-circle'\n                }));\n                this.columns = this._createTarget(columns, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    connectWith: rows,\n                    messages: { empty: options.messages.columns }\n                });\n                this.rows = this._createTarget(rows, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    setting: 'rows',\n                    connectWith: columns,\n                    messages: { empty: this.options.messages.rows }\n                });\n                this.measures = this._createTarget(measures, {\n                    setting: 'measures',\n                    template: targetItemTemplate,\n                    messages: { empty: options.messages.measures }\n                });\n            },\n            _createTarget: function (element, options) {\n                var that = this;\n                return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                    dataSource: this.dataSource,\n                    hint: function (element) {\n                        return element.clone();\n                    },\n                    remove: function (e) {\n                        var item = that.treeView.wrapper.find('[data-name=\\'' + e.name + '\\']').closest('li');\n                        var id = item.attr(kendo.attr('uid'));\n                        var dataItem = that.treeView.dataSource.getByUid(id);\n                        if (dataItem) {\n                            dataItem.checked = false;\n                            item.find('input').attr('checked', false);\n                        }\n                    },\n                    template: options.template\n                }, options));\n            },\n            _fields: function () {\n                var that = this;\n                var container = that.element.find('.k-fields-list-wrapper');\n                this.treeView = $('<div/>').appendTo(container).kendoTreeView({\n                    checkboxes: {\n                        checkChildren: true,\n                        template: '#if ((item.hasChildren || item.aggregator) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\") {# <input type=\"checkbox\" data-name=\"#:item.uniqueName#\" #= item.checked ? \"checked\" : \"\" # class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"#:item.uid#\" tabindex=\"-1\"> #}#'\n                    },\n                    dataTextField: 'caption',\n                    autoBind: false,\n                    check: function (e) {\n                        var dataItem = e.sender.dataItem(e.node);\n                        var action = {\n                            type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                            payload: dataItem\n                        };\n                        var state = {\n                            columnAxes: that.columns._state(),\n                            rowAxes: that.rows._state(),\n                            measureAxes: that.measures._state()\n                        };\n                        var result = configuratorReducer(state, action);\n                        if (dataItem.defaultHierarchy && dataItem.items.length) {\n                            that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                            dataItem.items.trigger('change');\n                        }\n                        if (result.columnAxes) {\n                            that.columns._state(result.columnAxes);\n                            that.columns._redraw();\n                        }\n                        if (result.rowAxes) {\n                            that.rows._state(result.rowAxes);\n                            that.rows._redraw();\n                        }\n                        if (result.measureAxes) {\n                            that.measures._state(result.measureAxes);\n                            that.measures._redraw();\n                        }\n                    },\n                    dataSource: this._treeViewDataSource()\n                }).data('kendoTreeView');\n                this.treeView.wrapper.off('click', this.treeView._clickHandler);\n            },\n            _treeViewDataSource: function () {\n                var that = this;\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: 'uniqueName',\n                            hasChildren: function (item) {\n                                return !('hierarchyUniqueName' in item) && !('aggregator' in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function (options) {\n                            var node;\n                            var transport = that.dataSource.transport;\n                            var catalog = transport.catalog();\n                            var cube = transport.cube();\n                            var fetchOptions = { url: transport.options.read };\n                            var columns = that.columns._state();\n                            var rows = that.rows._state();\n                            var measures = that.measures._state();\n                            var members = columns.concat(rows).concat(measures);\n                            if ($.isEmptyObject(options.data)) {\n                                var fetchOpts = {\n                                    connection: {\n                                        catalog: catalog,\n                                        cube: cube\n                                    },\n                                    restrictions: {\n                                        catalogName: catalog,\n                                        cubeName: cube\n                                    },\n                                    command: 'schemaDimensions'\n                                };\n                                fetchDiscover(fetchOptions, fetchOpts).then(function (newFields) {\n                                    that._checkMembers(members, newFields);\n                                    addKPI(newFields);\n                                    options.success(newFields);\n                                });\n                            } else {\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n                                if (node.uniqueName === '[KPIs]') {\n                                    fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube)).then(function (newFields) {\n                                        options.success(normalizeKPIs(newFields));\n                                    });\n                                } else if (node.type == 'kpi') {\n                                    options.success(buildKPImeasures(node));\n                                } else {\n                                    fetchDiscover(fetchOptions, that._loadFieldsCommand(node, catalog, cube)).then(function (newFields) {\n                                        that._checkMembers(members, newFields);\n                                        options.success(newFields);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n            _checkMembers: function (members, newData) {\n                var hash = {};\n                var index = 0;\n                for (index = 0; index < members.length; index++) {\n                    hash[members[index].name] = true;\n                }\n                for (index = 0; index < newData.length; index++) {\n                    if (hash[newData[index].uniqueName]) {\n                        newData[index].checked = true;\n                    }\n                }\n            },\n            _getKPIOptions: function (catalog, cube) {\n                return {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube\n                    },\n                    command: 'schemaKPIs'\n                };\n            },\n            _loadFieldsCommand: function (field, catalog, cube) {\n                var command;\n                var dimensionUniqueName;\n                var hierarchyUniqueName;\n                if (field.type === 2) {\n                    command = 'schemaMeasures';\n                } else if (field.dimensionUniqueName) {\n                    command = 'schemaLevels';\n                    hierarchyUniqueName = field.uniqueName;\n                } else {\n                    command = 'schemaHierarchies';\n                    dimensionUniqueName = field.uniqueName;\n                }\n                var options = {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube,\n                        hierarchyUniqueName: hierarchyUniqueName,\n                        dimensionUniqueName: dimensionUniqueName\n                    },\n                    command: command\n                };\n                return options;\n            },\n            _progress: function (toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n            _error: function () {\n                this._progress(false);\n            },\n            _requestStart: function () {\n                this._progress(true);\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                this.dataSource.unbind('change', this._refreshHandler);\n                this.element.off(ns);\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n                this.element = null;\n                this._refreshHandler = null;\n            },\n            refresh: function () {\n                if (this.treeView) {\n                    this.treeView.dataSource.fetch();\n                }\n                this._progress(false);\n            }\n        });\n        ui.plugin(PivotConfiguratorV2);\n        var PivotConfigurator = Widget.extend({\n            init: function (element, options) {\n                Widget.fn.init.call(this, element, options);\n                this.element.addClass('k-pivotgrid-configurator-panel kendo-jquery');\n                if (this.options.height) {\n                    this.element.outerHeight(this.options.height);\n                }\n                this._dataSource();\n                this._layout();\n                this.refresh();\n                kendo.notify(this);\n            },\n            events: [],\n            options: {\n                name: 'PivotConfigurator',\n                filterable: false,\n                sortable: false,\n                messages: {\n                    measures: 'Drop Data Fields Here',\n                    columns: 'Drop Column Fields Here',\n                    rows: 'Drop Rows Fields Here',\n                    measuresLabel: 'Measures',\n                    columnsLabel: 'Columns',\n                    rowsLabel: 'Rows',\n                    fieldsLabel: 'Fields'\n                }\n            },\n            _dataSource: function () {\n                var that = this;\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind('change', that._refreshHandler).unbind('error', that._errorHandler).unbind('progress', that._progressHandler);\n                } else {\n                    that._errorHandler = $.proxy(that._error, that);\n                    that._refreshHandler = $.proxy(that.refresh, that);\n                    that._progressHandler = $.proxy(that._requestStart, that);\n                }\n                that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n                that.dataSource.bind('change', that._refreshHandler).bind('error', that._errorHandler).bind('progress', that._progressHandler);\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n                this.refresh();\n            },\n            _treeViewDataSource: function () {\n                var that = this;\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: 'uniqueName',\n                            hasChildren: function (item) {\n                                return !('hierarchyUniqueName' in item) && !('aggregator' in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function (options) {\n                            var promise;\n                            var node;\n                            var kpi;\n                            if ($.isEmptyObject(options.data)) {\n                                promise = that.dataSource.schemaDimensions();\n                                promise.done(function (data) {\n                                    if (!that.dataSource.cubeBuilder) {\n                                        addKPI(data);\n                                    }\n                                    options.success(data);\n                                }).fail(options.error);\n                            } else {\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n                                if (node.uniqueName === '[KPIs]') {\n                                    kpi = true;\n                                    promise = that.dataSource.schemaKPIs();\n                                    promise.done(function (data) {\n                                        options.success(normalizeKPIs(data));\n                                    }).fail(options.error);\n                                } else if (node.type == 'kpi') {\n                                    kpi = true;\n                                    options.success(buildKPImeasures(node));\n                                }\n                                if (!kpi) {\n                                    if (node.type == 2) {\n                                        promise = that.dataSource.schemaMeasures();\n                                    } else if (node.dimensionUniqueName) {\n                                        promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                    } else {\n                                        promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                    }\n                                    promise.done(options.success).fail(options.error);\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n            _progress: function (toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n            _error: function () {\n                this._progress(false);\n            },\n            _requestStart: function () {\n                this._progress(true);\n            },\n            _layout: function () {\n                $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n                this.form = this.element.find('.k-pivotgrid-configurator-content');\n                this._fields();\n                this._targets();\n            },\n            _fields: function () {\n                var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + this.options.messages.fieldsLabel + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n                var template = '# if (item.type == 2 || item.uniqueName == \"[KPIs]\") { #' + '<span class=\"k-icon k-i-#= (item.type == 2 ? \"sum\" : \"kpi\") #\"></span>' + '# } else if (item.type && item.type !== \"kpi\") { #' + '<span class=\"k-icon k-i-arrows-dimensions\"></span>' + '# } #' + '#: item.caption || item.name #';\n                this.treeView = $('<div/>').appendTo(container.find('.k-fields-list-wrapper')).kendoTreeView({\n                    template: template,\n                    dataTextField: 'caption',\n                    dragAndDrop: true,\n                    autoBind: false,\n                    dataSource: this._treeViewDataSource(),\n                    dragstart: function (e) {\n                        var dataItem = this.dataItem(e.sourceNode);\n                        if (!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure || dataItem.type == 2 || dataItem.uniqueName === '[KPIs]') {\n                            e.preventDefault();\n                        }\n                    },\n                    drag: function (e) {\n                        var status = 'k-i-cancel';\n                        var setting = settingTargetFromNode(e.dropTarget);\n                        if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                            status = 'k-i-plus';\n                        }\n                        e.setStatusClass(status);\n                    },\n                    drop: function (e) {\n                        e.preventDefault();\n                        var setting = settingTargetFromNode(e.dropTarget);\n                        var node = this.dataItem(e.sourceNode);\n                        var idx, length, measures;\n                        var name;\n                        if (setting && setting.validate(node)) {\n                            name = node.defaultHierarchy || node.uniqueName;\n                            if (node.type === 'kpi') {\n                                measures = buildKPImeasures(node);\n                                length = measures.length;\n                                name = [];\n                                for (idx = 0; idx < length; idx++) {\n                                    name.push(kpiNode(measures[idx]));\n                                }\n                            } else if (node.kpi) {\n                                name = [kpiNode(node)];\n                            }\n                            setting.add(name);\n                        }\n                    }\n                }).data('kendoTreeView');\n            },\n            _createTarget: function (element, options) {\n                var template = '';\n                var sortable = options.sortable;\n                var icons = '';\n                if (sortable) {\n                    icons += '#if (data.sortIcon) {#';\n                    icons += '<span class=\"k-chip-action\"><span class=\"k-icon ${data.sortIcon}-sm\"></span></span>';\n                    icons += '#}#';\n                }\n                if (options.filterable || sortable) {\n                    icons += '<span class=\"k-setting-fieldmenu k-chip-action\"><span class=\"k-icon k-i-more-vertical\"></span></span>';\n                }\n                icons += '<span class=\"k-setting-delete k-chip-action\"><span class=\"k-icon k-i-close\"></span></span>';\n                template = '' + '<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-' + kendo.ns + 'name=\"${data.name}\">' + '<span class=\"k-chip-content\">' + '<span class=\"k-chip-text\">${data.name}</span>' + '</span>' + '<span class=\"k-chip-actions k-field-actions\">' + icons + '</span>' + '</span>';\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: '<span class=\"k-empty\">${data}</span>'\n                }, options));\n            },\n            _targets: function () {\n                var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n                var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({\n                    name: this.options.messages.columnsLabel,\n                    icon: 'k-i-columns'\n                })).appendTo(container);\n                var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n                var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({\n                    name: this.options.messages.rowsLabel,\n                    icon: 'k-i-rows'\n                })).appendTo(container);\n                var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n                var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({\n                    name: this.options.messages.measuresLabel,\n                    icon: 'k-i-sum'\n                })).appendTo(container);\n                var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n                var options = this.options;\n                this.columns = this._createTarget(columns, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns,\n                        fieldMenu: options.messages.fieldMenu\n                    }\n                });\n                this.rows = this._createTarget(rows, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    setting: 'rows',\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n                this.measures = this._createTarget(measures, {\n                    setting: 'measures',\n                    messages: { empty: options.messages.measures }\n                });\n                columns.add(rows).add(measures).on(HOVER_EVENTS, '.k-item:not(.k-empty)', this._toggleHover);\n            },\n            _toggleHover: function (e) {\n                $(e.currentTarget).toggleClass('k-state-hover', e.type === 'mouseenter');\n            },\n            _resize: function () {\n                var element = this.element;\n                var height = this.options.height;\n                if (!height) {\n                    return;\n                }\n                element.outerHeight(height);\n            },\n            refresh: function () {\n                var dataSource = this.dataSource;\n                if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                    this.treeView.dataSource.fetch();\n                }\n                this._catalog = this.dataSource.catalog();\n                this._cube = this.dataSource.cube();\n                this._resize();\n                this._progress(false);\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                this.dataSource.unbind('change', this._refreshHandler);\n                this.form.find('.k-pivot-setting').off(ns);\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n        function kpiMeasure(name, measure, type) {\n            return {\n                hierarchyUniqueName: name,\n                uniqueName: measure,\n                caption: measure,\n                measure: measure,\n                name: measure,\n                type: type,\n                kpi: true\n            };\n        }\n        function buildKPImeasures(node) {\n            var name = node.name;\n            return [\n                kpiMeasure(name, node.value, 'value'),\n                kpiMeasure(name, node.goal, 'goal'),\n                kpiMeasure(name, node.status, 'status'),\n                kpiMeasure(name, node.trend, 'trend')\n            ];\n        }\n        kendo.cssProperties.registerPrefix('HTMLChip', 'k-chip-');\n        kendo.cssProperties.registerValues('HTMLChip', [{\n                prop: 'rounded',\n                values: kendo.cssProperties.roundedValues.concat([[\n                        'full',\n                        'full'\n                    ]])\n            }]);\n        ui.plugin(PivotConfigurator);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}