{"version":3,"sources":["kendo.treelist.js"],"names":["f","define","$","undefined","is","field","object","not","func","isCellVisible","this","style","display","sortCells","cells","indexAttr","kendo","attr","sort","a","b","indexA","indexB","index","parseInt","leafDataCells","container","rows","find","filter","el","hasClass","length","add","last","createPlaceholders","options","i","level","spans","className","push","kendoDomElement","columnsWidth","cols","colWidth","idx","width","indexOf","syncTableHeight","table1","table2","lockedHeigth","tableHeigth","row","diff","offsetHeight","filterRowRegExp","test","height","isInputElement","element","isLocked","column","parentColumn","locked","findParentColumnWithChildren","columns","source","rtl","target","targetLocked","findReorderTarget","before","masterColumns","parent","parentColumns","sourceIndex","targetIndex","columnParent","inArray","leafColumns","result","concat","getColumnsFields","visibleChildColumns","grep","hidden","isVisible","visibleColumns","normalizeColumns","hide","parentIds","map","uid","guid","headerAttributes","extend","headers","id","flatColumnsInDomOrder","flatColumns","lockedColumns","nonLockedColumns","targetParentContainerIndex","parentColumnsCells","cell","parentCellsWithChildren","offset","prevCells","parentCell","closest","headerRows","eq","prevAll","colSpan","Math","max","getAttribute","childColumnsCells","child","value","rowSpan","colSpanAttr","next","parents","columnParents","inserted","splice","children","columnPosition","cellCounts","updateCellIndex","thead","position","allColumns","depth","temp","updateRowSpans","containerDOMtree","each","attributes","rowspan","removeEmptyRows","emptyRows","shouldRemove","remove","focusTable","table","direct","scrollTop","scrollLeft","focusElement","one","e","preventDefault","trigger","adjustRowHeight","row1","row2","offsetHeight1","offsetHeight2","isColumnEditable","model","selectable","command","editable","isDirtyColumn","dirty","dirtyFields","isUndefined","isNumber","isNaN","TreeListModel","TreeListDataSource","TreeListPager","Editor","PopupEditor","IncellEditor","TreeList","data","kendoDom","dom","kendoTextElement","text","kendoHtmlElement","html","outerWidth","_outerWidth","keys","outerHeight","_outerHeight","ui","DataBoundWidget","DataSource","ObservableArray","Query","Model","browser","support","kendoTemplate","template","activeElement","_activeElement","touchDevice","touch","isArray","Array","proxy","isPlainObject","prototype","STRING","CHANGE","ITEM_CHANGE","ERROR","PROGRESS","DOT","NS","CLICK","INPUT","BEFORE_EDIT","EDIT","PAGE","PAGE_CHANGE","SAVE","SAVE_CHANGES","SORT","EXPAND","COLLAPSE","CELL_CLOSE","REMOVE","DATA_CELL","FILTER_CELL","DATABINDING","DATABOUND","CANCEL","TABINDEX","FILTERMENUINIT","FILTERMENUOPEN","COLUMNHIDE","COLUMNSHOW","HEADERCELLS","COLUMNREORDER","COLUMNRESIZE","COLUMNMENUINIT","COLUMNMENUOPEN","COLUMNLOCK","COLUMNUNLOCK","PARENTIDFIELD","DRAGSTART","DRAG","DROP","DRAGEND","NAVROW","NAVCELL","NAVHEADER","NORECORDSCLASS","ITEMROW","isRtl","HEIGHT","INCELL","INLINE","POPUP","TABLE","CHECKBOX","CHECKBOXINPUT","SELECTCOLUMNTMPL","SELECTCOLUMNHEADERTMPL","SELECTED","whitespaceRegExp","RegExp","classNames","wrapper","header","button","alt","editCell","editRow","dirtyCell","group","toolbar","gridToolbar","gridHeader","gridHeaderWrap","gridContent","gridContentWrap","gridFilter","footerTemplate","focused","loading","refresh","retry","selected","status","link","filterable","icon","iconFilter","iconCollapse","iconExpand","iconHidden","iconPlaceHolder","input","dropPositions","dropTop","dropBottom","dropAdd","dropMiddle","dropDenied","dragStatus","dragClue","dragClueText","headerCellInner","columnTitle","defaultCommands","create","imageClass","methodName","createchild","destroy","edit","update","canceledit","cancel","save","excel","pdf","search","TreeView","Class","init","that","defaultParentId","idField","parentIdField","childrenMap","dataItem","dataItemId","dataItemParentId","dataLength","_childrenMap","idsMap","_idMap","dataMaps","_dataMaps","ids","rootNodes","removeCollapsedSubtreesFromRootNodes","prunedTree","maxDepth","Infinity","removeCollapsedSubtrees","rootNode","childIdx","expanded","TreeQuery","constructor","process","inPlace","query","filterCallback","skip","take","total","filteredChildrenMap","view","prunedData","normalizeGroup","normalizeSort","toArray","processFromRootNodes","range","parentId","fields","type","nullable","fn","call","_loaded","get","accept","set","initiator","loaded","shouldSerialize","base","_getDataMaps","schema","modelBase","_addRange","_createNewModel","fromModel","_modelParentIdField","_isPageable","_shouldWrap","_push","operation","_readData","_getData","_data","newData","toJSON","_replaceData","sourceLength","_readAggregates","_aggregateResult","reader","aggregates","_defaultParentId","read","_modelOptions","_skip","_page","_collapsedTotal","root","_removeChildData","_removeFromDataMaps","removePristine","pageable","_getChildrenMap","items","_subtree","shouldRemovePristine","removedItems","_removeItems","pushDestroy","insert","newModel","_insertInDataMaps","_filterCallback","item","_modelIdField","parentSubtree","_parentNode","unshift","parentNode","len","_observeView","_createTreeView","_initIdsMap","_idsMap","_getIdsMap","_getFilteredChildrenMap","filteredChildren","_setFilteredChildrenMap","_initDataMaps","_initChildrenMapForParent","_defaultTreeModelOptions","modelOptions","_defaultDataItemType","ObservableObject","_calculateAggregates","subtree","pageableChildrenMap","aggregate","_queryProcess","hasLoadedChildren","_processPageableQuery","hasChildren","slice","_processTreeQuery","_replaceWithObservedData","_processDataItemsState","_replaceItemsInDataMaps","dataToAggregate","_dataToAggregate","_replaceInMapWithObservedData","_calculateCollapsedTotal","firstDataItem","firstItemParents","_parentNodes","observableArray","directParent","viewIndex","itemType","_insertInIdsMap","_replaceInMap","replacement","itemInArray","itemIndex","dataToReplace","replacementArray","itemToReplace","itemToReplaceId","dataItemIndex","observableItem","_getById","at","key","_insertInChildrenMap","itemId","_removeFromIdsMap","_removeFromChildrenMap","_indexInChildrenMap","_itemIndexInMap","dataMap","_isLastItemInView","_defaultPageableQueryOptions","page","pageSize","serverPaging","_updateTotalForAction","action","_updateCollapsedTotalForAction","_setFilterTotal","filterTotal","setDefaultValue","collapsedTotal","filteredData","_dataWithoutCollapsedSubtrees","_removeCollapsedSubtrees","_processDataItemState","_queueRequest","callback","_modelLoaded","childNodes","_modelError","_error","success","requestParams","_observe","_total","load","method","remote","serverSorting","serverFiltering","serverGrouping","serverAggregates","defaultPromise","Deferred","resolve","promise","done","fail","contains","rootId","_byParentId","defaultId","current","defaults","allChildNodes","directChildren","_rootNode","_pageableRootNodes","nodesWithoutParentInView","node","_nodesWithoutParentInView","_parentNodesNotInView","parentInView","_parentInView","_pageableModelLevel","baseFilter","_pageableQueryOptions","_flatData","cancelChanges","_restorePageSizeAfterAddChild","_modelCanceled","_changesCanceled","_setAddChildPageSize","queryOptions","_addChildPageSize","_query","sync","then","_syncEnd","Pager","name","totalPages","dataSource","_filter","ceil","_createDataSource","Observable","bind","events","_fields","_initContainer","createEditable","Editable","clearContainer","change","_isEditable","format","editor","end","close","empty","removeAttr","_attachHandlers","cycleForm","open","window","modal","resizable","draggable","title","visible","formContent","append","_appendTemplate","_appendFields","_appendButtons","Tree","render","appendTo","Window","form","unescape","class","fieldRenderer","commandRenderer","closeHandler","_cancelProxy","_cancel","on","_saveProxy","_save","userTriggered","_detachHandlers","off","center","_events","_dataSource","_aria","_columns","_layout","_navigatable","_selectable","_sortable","_resizable","_filterable","_filterRow","_attachEvents","_toolbar","_scrollable","_reorderable","_columnMenu","_minScreenSupport","_draggable","_pageable","autoBind","fetch","_hasLockedColumns","widget","addClass","_resizeHandler","resize","notify","reorderable","move","_dragging","HierarchicalDragAndDrop","$angular","autoScroll","holdToDrag","itemSelector","allowedContainers","hintText","separator","join","destination","dest","src","itemFromTarget","first","tr","prevRow","prev","nextRow","sameLevel","content","dragstart","css","drag","drop","removeClass","dragend","isPrevented","originalSrcParentId","originalSrcIndex","insertBefore","insertAfter","dropHintContainer","dropPositionFrom","dropHint","contents","dropHintElement","isAfterText","nodeType","arguments","nodeData","referenceNode","insertAction","indexOffset","referenceNodeIndex","destIndex","nodeDataIndex","originalDestIndex","_unbindDataSource","_unbindDataChange","_destroyed","pop","_bindDataChange","_bindDataSource","_changeHandler","unbind","_refreshHandler","itemFor","tbody","_itemFor","lockedContent","lockedTable","scrollables","touchScroller","scrollable","_wheelScroll","movable","_touchScroller","sender","x","y","delta","lockedDiv","ctrlKey","wheelDeltaY","currentTarget","scrollHeight","clientHeight","_progress","messages","_showStatus","_render","error","isCurrentInHeader","currentIndex","_cancelEditor","_adjustHeight","navigatable","_isActiveInTable","cellIndex","_restoreCurrent","_checkBoxSelection","_deselectCheckRows","_angularFooters","footer","allAggregates","footerRows","_footerItems","_angularFooter","angular","elements","col","_items","dataItems","n","tmp","_showNoRecordsTemplate","defaultTemplate","scrollableNoGridHeightStyles","_contentTree","_lockedContentTree","noRows","message","_hideStatus","_hideNoRecordsTempalte","show","isHeightSet","contentWrap","pagerHeight","pager","scrollbar","initialHeight","newHeight","offsetWidth","clientWidth","_resize","size","force","_applyLockedContainersWidth","any","hideMinScreenCols","minScreenResizeHandler","_iterateMinScreenCols","screenWidth","minWidth","minScreenWidth","hideColumn","showColumn","innerWidth","screen","_destroyColumnAttachments","_errorHandler","_progressHandler","_navigatableTables","_current","_draggableInstance","_userEvents","_destroyEditor","_destroyPager","_autoExpandable","_dataSourceFetchProxy","lockedHeader","_statusTree","_headerTree","_lockedHeaderColsTree","_lockedContentColsTree","_lockedHeaderTree","sortable","columnMenu","requestFailed","commands","hierarchy","renderAllRows","rowTemplate","altRowTemplate","getOptions","initialData","deepExtend","transport","setOptions","currentOptions","_setEvents","th","filterMenu","_toggle","expand","afterModelLoaded","_toggleData","_syncLockedContentHeight","_isIncellEditable","closeCell","always","_togglePageableData","_renderProgress","_refreshPager","collapse","_toggleChildren","event","tables","headerTables","_tableClick","_tableFocus","_tableBlur","_tableKeyDown","td","lockedColumnOffset","active","rowIndex","newCurrent","_updateCurrentAttr","_scrollCurrent","_lastCellIndex","_setCurrent","tableContainer","isInLockedContainer","isInContent","scrollableContainer","_scrollTo","_relatedRow","_findCurrentCell","elementToLowercase","tagName","toLowerCase","isHorizontal","elementOffsetDir","containerScroll","containerOffsetDir","elementOffset","abs","offsetLeft","bottomDistance","ieCorrection","firefoxCorrection","msie","edge","mozilla","webkit","version","_elementId","_currentDataIndex","lockedColumnsCount","_prevVerticalCell","cellSelector","_nextVerticalCell","tmpIndex","currentRowCells","hiddenColumns","_verticalContainer","up","step","floor","headerId","replace","handled","canHandle","isDefaultPrevented","keyCode","UP","_moveUp","shiftKey","DOWN","_moveDown","LEFT","RIGHT","altKey","_handleExpand","_moveRight","_handleCollapse","_moveLeft","PAGEDOWN","_handlePageDown","PAGEUP","_handlePageUp","ENTER","F2","_handleEnterKey","ESC","_handleEscKey","HOME","_handleHome","END","_handleEnd","TAB","_handleTabKey","stopPropagation","ctrl","rowContainer","isInLockedTable","isInBody","currentTable","blur","cancelRow","has","focusable","click","_handleEditing","incellEditing","_tabNext","_preventPageSizeRestore","back","switchRow","nextAll","editContainer","isEdited","editedCell","isIE","nextFocusableCellRowIndex","nextFocusableCellIndex","currentFocusedCellRowIndex","currentFocusedCellIndex","opera","triggerHandler","focus","saveRow","isHeader","headerTable","isInput","setTimeout","_setTabIndex","retryButton","UserEvents","press","_onPress","allowSelection","_commandClick","_search","_attachCellEditingEventHandlers","icons","multiple","relatedTarget","isLockedCell","clearTimeout","_closeCellTimeout","_commandByName","j","currentName","commandName","parentsUntil","_searchTimeOut","searchFields","expression","filters","logic","operator","_ensureExpandableColumn","expandableColumns","expandable","lockedCols","encoded","Error","_columnTemplates","_columnAttributes","_includeChildren","includeChildren","_checkboxClick","_headerCheckboxClick","dirtyCellTemplate","_createDirtyColumnTemplate","dirtyIndicatorTemplate","_createIndicatorTemplate","headerTemplate","convertStyle","properties","declaration","split","trim","camelCase","_clearSortClasses","layout","addBack","_initVirtualTrees","_renderCols","_renderHeader","_headerColsTree","_contentColsTree","buttons","_buildCommands","_lockedColumns","_nonLockedColumns","_templateColumns","_flushCache","maps","uidAttr","hasFooterTemplate","viewChildrenMap","_renderOptions","_dataToRender","_renderedModelLevel","select","_","_absoluteIndex","_angularItems","_clearRenderMap","buttonClass","_viewChildrenMap","_hasFooterTemplate","_trs","editedColumn","editedColumnIndex","contentResized","_muteAngularRebind","_togglePagerVisibility","_setExpanderElement","expander","hiddenDivClass","hiddenDiv","toggle","progress","parentsNotInView","parentNotInView","parentNotInViewId","childId","parentsCopy","parentIndex","_markNodeAsNonRenderable","_skipRenderingMap","nodeId","_adjustRowsHeight","rows2","containers","containersLength","heights","_ths","cellClasses","headerContent","leafs","ths","scope","role","data-field","data-title","_cols","_clearColsCache","_retrieveFirstColumn","_updateFirstColumnClass","_updateRowSpans","included","_setColumnDataIndexes","_updateColumnCellIndex","_setParentsVisibility","predicate","p","_prepareColumns","parentRow","childRow","totalColSpan","_renderHeaderTree","tree","hasMultiColumnHeaders","rowsToRender","filterThs","_hasFilterRow","_filterThs","_syncLockedHeaderHeight","_updateFilterThs","refColumn","thIndex","refIndex","currIndex","filterRowThs","lockedWidth","nonLockedWidth","wrapperWidth","modelId","rowOptions","_edit","isAlt","_trFromTemplate","_tds","_td","data-parentId","_footerId","isFunction","parseRowTemplate","currElement","nodeName","toLocaleLowerCase","parseAttributes","nodeValue","_createCellElement","_isTextNode","spaceElements","iconElement","noop","c","renderer","editedColumnField","editColumn","iconClass","columnHasEditCommand","_cellContent","dirtyIndicator","_evalColumnTemplate","templateSettings","_customTemplateSettings","columnTemplateAlias","paramName","templateString","_dirtyIndicatorTemplate","templateFunction","columnTemplate","dirtyField","charAt","expr","Template","_handleCommand","_button","data-command","_positionResizeHandle","headerWrap","webkitCorrection","leftMargin","invisibleSpace","leftBorderWidth","resizeHandle","rtlCorrection","cellWidth","which","indicatorWidth","columnResizeHandleWidth","halfResizeHandle","left","parseFloat","scrollWidth","top","val","autoFitColumn","contentTable","footerTable","oldColumnWidth","newColumnWidth","totalWidth","visibleLocked","oldWidth","newWidth","_adjustLockedHorizontalScrollBar","_syncLockedScroll","treelist","Resizable","handle","start","startLocation","location","columnWidth","rtlModifier","minColumnWidth","resizeend","sortableInstance","kendoColumnSorter","filterMenuInstance","filterInit","filterOpen","mode","kendoFilterMenu","settings","filterHandler","existingInstance","suggestDataSource","operators","customDataSource","cellOptions","enabled","values","delay","inputWidth","suggestionOperator","minLength","dataTextField","showOperators","kendoFilterCell","hasFiltering","columnsWithoutFiltering","_change","selectedValues","_uncheckCheckBoxes","_checkRows","_toggleHeaderCheckState","_isLocked","useAllItems","multi","Selectable","parseOptions","aria","continuousItems","_continuousItems","_selectableTarget","SPACEBAR","clear","_lastActive","selectRange","_firstSelectee","lockedItems","nonLockedItems","apply","related","clearSelection","prop","preventChange","checkBox","checked","parentGrid","getKendoTreeList","isSelecting","selector","ds","_sortHandler","setDataSource","getByUid","_isPopupEditable","_editMode","_createEditor","_cancelEdit","args","addRow","inlineEditing","_isInlineEditable","showNewModelInView","_insertAt","_firstEditableColumnIndex","removeRow","document","_shouldRestorePageSize","leafCols","_createIncellEditor","_editCell","isCancel","ns","saveChanges","valid","_toggleColumnVisibility","_findColumn","_adjustTablesWidth","Draggable","hint","prepend","Reorderable","dragOverContainers","_allowDragOverContainers","inSameContainer","oldIndex","newIndex","reorderColumn","lockable","_reorderTrees","destSources","destContainer","destDomTree","sources","sourcesContainer","sourcesDomTree","destDomChildren","destRow","sourcesLeafs","destLeafs","reorderTaget","destThs","sourceDOM","sourceChildren","destColumn","_insertTree","domTr","_reorderHeader","rowsToAdd","destTarget","sourcesDepth","targetDepth","sourceLocked","destLocked","destRows","lockChanged","nonLockedColumnsLength","lockColumn","unlockColumn","menu","menuOptions","initHandler","_columnMenuInit","openHandler","_columnMenuOpen","hasLockableColumns","compare","pane","owner","closeCallback","kendoColumnMenu","_createPager","alwaysVisible","ExcelMixin","PDFMixin","_drawPDF","allPages","startingPage","exportPage","doc","treeList","_drawPDFShadow","avoidLinks","pageNum","pageNumber","err","reject","paperSize","_drawPDF_autoPageBreak","_initPDFProgress","drawing","Group","deferred","progressBar","clone","kendoProgressBar","chunkCount","min","draw","cont","body","_destructive","drawDOM","renderPage","origBody","overflow","paddingRight","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.treelist.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.treelist', [\n        'kendo.dom',\n        'kendo.data',\n        'kendo.columnsorter',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.filtermenu',\n        'kendo.columnmenu',\n        'kendo.selectable',\n        'kendo.resizable',\n        'kendo.treeview.draganddrop',\n        'kendo.pager',\n        'kendo.filtercell'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'treelist',\n        name: 'TreeList',\n        category: 'web',\n        description: 'The TreeList widget displays self-referencing data and offers rich support for interacting with data, sorting, filtering, and selection.',\n        depends: [\n            'dom',\n            'data',\n            'pager'\n        ],\n        features: [\n            {\n                id: 'treelist-sorting',\n                name: 'Sorting',\n                description: 'Support for column sorting',\n                depends: ['columnsorter']\n            },\n            {\n                id: 'treelist-filtering',\n                name: 'Filtering',\n                description: 'Support for record filtering',\n                depends: ['filtermenu']\n            },\n            {\n                id: 'treelist-columnmenu',\n                name: 'Column menu',\n                description: 'Support for header column menu',\n                depends: ['columnmenu']\n            },\n            {\n                id: 'treelist-editing',\n                name: 'Editing',\n                description: 'Support for record editing',\n                depends: [\n                    'editable',\n                    'window'\n                ]\n            },\n            {\n                id: 'treelist-selection',\n                name: 'Selection',\n                description: 'Support for row selection',\n                depends: ['selectable']\n            },\n            {\n                id: 'treelist-column-resize',\n                name: 'Column resizing',\n                description: 'Support for column resizing',\n                depends: ['resizable']\n            },\n            {\n                id: 'treelist-dragging',\n                name: 'Drag & Drop',\n                description: 'Support for drag & drop of rows',\n                depends: ['treeview.draganddrop']\n            },\n            {\n                id: 'treelist-excel-export',\n                name: 'Excel export',\n                description: 'Export data as Excel spreadsheet',\n                depends: ['excel']\n            },\n            {\n                id: 'treelist-pdf-export',\n                name: 'PDF export',\n                description: 'Export data as PDF',\n                depends: [\n                    'pdf',\n                    'drawing'\n                ]\n            },\n            {\n                id: 'treelist-paging',\n                name: 'Paging',\n                description: 'Support for treelist paging',\n                depends: ['pager']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var data = kendo.data;\n        var kendoDom = kendo.dom;\n        var kendoDomElement = kendoDom.element;\n        var kendoTextElement = kendoDom.text;\n        var kendoHtmlElement = kendoDom.html;\n        var outerWidth = kendo._outerWidth;\n        var keys = kendo.keys;\n        var outerHeight = kendo._outerHeight;\n        var ui = kendo.ui;\n        var DataBoundWidget = ui.DataBoundWidget;\n        var DataSource = data.DataSource;\n        var ObservableArray = data.ObservableArray;\n        var Query = data.Query;\n        var Model = data.Model;\n        var browser = kendo.support.browser;\n        var kendoTemplate = kendo.template;\n        var activeElement = kendo._activeElement;\n        var touchDevice = kendo.support.touch;\n        var isArray = Array.isArray;\n        var extend = $.extend;\n        var proxy = $.proxy;\n        var map = $.map;\n        var grep = $.grep;\n        var inArray = $.inArray;\n        var isPlainObject = $.isPlainObject;\n        var push = Array.prototype.push;\n        var STRING = 'string';\n        var CHANGE = 'change';\n        var ITEM_CHANGE = 'itemChange';\n        var ERROR = 'error';\n        var PROGRESS = 'progress';\n        var DOT = '.';\n        var NS = '.kendoTreeList';\n        var CLICK = 'click';\n        var INPUT = 'input';\n        var BEFORE_EDIT = 'beforeEdit';\n        var EDIT = 'edit';\n        var PAGE = 'page';\n        var PAGE_CHANGE = 'pageChange';\n        var SAVE = 'save';\n        var SAVE_CHANGES = 'saveChanges';\n        var SORT = 'sort';\n        var EXPAND = 'expand';\n        var COLLAPSE = 'collapse';\n        var CELL_CLOSE = 'cellClose';\n        var REMOVE = 'remove';\n        var DATA_CELL = 'td:not(.k-group-cell):not(.k-hierarchy-cell):visible';\n        var FILTER_CELL = '.k-filter-row th:not(.k-group-cell):not(.k-hierarchy-cell):visible';\n        var DATABINDING = 'dataBinding';\n        var DATABOUND = 'dataBound';\n        var CANCEL = 'cancel';\n        var TABINDEX = 'tabIndex';\n        var FILTERMENUINIT = 'filterMenuInit';\n        var FILTERMENUOPEN = 'filterMenuOpen';\n        var COLUMNHIDE = 'columnHide';\n        var COLUMNSHOW = 'columnShow';\n        var HEADERCELLS = 'th.k-header';\n        var COLUMNREORDER = 'columnReorder';\n        var COLUMNRESIZE = 'columnResize';\n        var COLUMNMENUINIT = 'columnMenuInit';\n        var COLUMNMENUOPEN = 'columnMenuOpen';\n        var COLUMNLOCK = 'columnLock';\n        var COLUMNUNLOCK = 'columnUnlock';\n        var PARENTIDFIELD = 'parentId';\n        var DRAGSTART = 'dragstart';\n        var DRAG = 'drag';\n        var DROP = 'drop';\n        var DRAGEND = 'dragend';\n        var NAVROW = 'tr:visible';\n        var NAVCELL = 'td:visible';\n        var NAVHEADER = 'th:visible';\n        var NORECORDSCLASS = 'k-grid-norecords';\n        var ITEMROW = 'tr:not(.k-footer-template):visible';\n        var isRtl = false;\n        var HEIGHT = 'height';\n        var INCELL = 'incell';\n        var INLINE = 'inline';\n        var POPUP = 'popup';\n        var TABLE = 'table';\n        var CHECKBOX = 'k-checkbox';\n        var CHECKBOXINPUT = 'input[data-role=\\'checkbox\\'].' + CHECKBOX;\n        var SELECTCOLUMNTMPL = '<input class=\"' + CHECKBOX + ' k-checkbox-md k-rounded-md\" data-role=\"checkbox\" aria-label=\"Select row\" aria-checked=\"false\" type=\"checkbox\">';\n        var SELECTCOLUMNHEADERTMPL = '<input class=\"' + CHECKBOX + ' k-checkbox-md k-rounded-md\" data-role=\"checkbox\" aria-label=\"Select all rows\" aria-checked=\"false\" type=\"checkbox\">';\n        var SELECTED = 'k-state-selected';\n        var whitespaceRegExp = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]';\n        var filterRowRegExp = new RegExp('(^|' + whitespaceRegExp + ')' + '(k-filter-row)' + '(' + whitespaceRegExp + '|$)');\n        var classNames = {\n            wrapper: 'k-treelist k-grid k-widget k-grid-display-block',\n            header: 'k-header',\n            button: 'k-button',\n            alt: 'k-alt',\n            editCell: 'k-edit-cell',\n            editRow: 'k-grid-edit-row',\n            dirtyCell: 'k-dirty-cell',\n            group: 'k-treelist-group',\n            toolbar: 'k-toolbar',\n            gridToolbar: 'k-grid-toolbar',\n            gridHeader: 'k-grid-header',\n            gridHeaderWrap: 'k-grid-header-wrap',\n            gridContent: 'k-grid-content',\n            gridContentWrap: 'k-grid-content',\n            gridFilter: 'k-grid-filter',\n            footerTemplate: 'k-footer-template',\n            focused: 'k-state-focused',\n            loading: 'k-i-loading',\n            refresh: 'k-i-reload',\n            retry: 'k-request-retry',\n            selected: 'k-state-selected',\n            status: 'k-status',\n            link: 'k-link',\n            filterable: 'k-filterable',\n            icon: 'k-icon',\n            iconFilter: 'k-i-filter',\n            iconCollapse: 'k-i-collapse',\n            iconExpand: 'k-i-expand',\n            iconHidden: 'k-i-none',\n            iconPlaceHolder: 'k-icon k-i-none',\n            input: 'k-input',\n            dropPositions: 'k-i-insert-up k-i-insert-down k-i-plus k-i-insert-middle',\n            dropTop: 'k-i-insert-up',\n            dropBottom: 'k-i-insert-down',\n            dropAdd: 'k-i-plus',\n            dropMiddle: 'k-i-insert-middle',\n            dropDenied: 'k-i-cancel',\n            dragStatus: 'k-drag-status',\n            dragClue: 'k-drag-clue',\n            dragClueText: 'k-clue-text',\n            headerCellInner: 'k-cell-inner',\n            columnTitle: 'k-column-title'\n        };\n        var defaultCommands = {\n            create: {\n                imageClass: 'k-i-plus',\n                className: 'k-grid-add',\n                methodName: 'addRow'\n            },\n            createchild: {\n                imageClass: 'k-i-plus',\n                className: 'k-grid-add',\n                methodName: 'addRow'\n            },\n            destroy: {\n                imageClass: 'k-i-close',\n                className: 'k-grid-delete',\n                methodName: 'removeRow'\n            },\n            edit: {\n                imageClass: 'k-i-edit',\n                className: 'k-grid-edit',\n                methodName: 'editRow'\n            },\n            update: {\n                imageClass: 'k-i-check',\n                className: 'k-button-solid-primary k-grid-update',\n                methodName: 'saveRow'\n            },\n            canceledit: {\n                imageClass: 'k-i-cancel',\n                className: 'k-grid-cancel',\n                methodName: '_cancelEdit'\n            },\n            cancel: {\n                imageClass: 'k-icon k-i-cancel',\n                text: 'Cancel changes',\n                className: 'k-grid-cancel-changes',\n                methodName: 'cancelChanges'\n            },\n            save: {\n                imageClass: 'k-icon k-i-check',\n                text: 'Save changes',\n                className: 'k-grid-save-changes',\n                methodName: 'saveChanges'\n            },\n            excel: {\n                imageClass: 'k-i-file-excel',\n                className: 'k-grid-excel',\n                methodName: 'saveAsExcel'\n            },\n            pdf: {\n                imageClass: 'k-i-file-pdf',\n                className: 'k-grid-pdf',\n                methodName: 'saveAsPDF'\n            },\n            search: { template: '<span class=\\'k-spacer\\'></span>' + '<span class=\\'k-searchbox k-input k-input-md k-rounded-md k-input-solid k-grid-search\\'>' + '<span class=\\'k-input-icon k-icon k-i-search\\'></span>' + '<input autocomplete=\\'off\\' placeholder=\\'' + '#= message #' + '\\' title=\\'' + '#= message #' + '\\' class=\\'k-input-inner\\' />' + '</span>' }\n        };\n        var TreeView = kendo.Class.extend({\n            init: function (data, options) {\n                var that = this;\n                that.data = data || [];\n                that.options = extend(that.options, options);\n            },\n            options: {\n                defaultParentId: null,\n                idField: 'id',\n                parentIdField: PARENTIDFIELD\n            },\n            childrenMap: function () {\n                var that = this;\n                var childrenMap = {};\n                var dataLength = that.data.length;\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                var idField = that.options.idField;\n                var parentIdField = that.options.parentIdField;\n                if (that._childrenMap) {\n                    return that._childrenMap;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = this.data[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    childrenMap[dataItemId] = childrenMap[dataItemId] || [];\n                    childrenMap[dataItemParentId] = childrenMap[dataItemParentId] || [];\n                    childrenMap[dataItemParentId].push(dataItem);\n                }\n                that._childrenMap = childrenMap;\n                return childrenMap;\n            },\n            idsMap: function () {\n                var that = this;\n                var idsMap = {};\n                var data = that.data;\n                var dataLength = data.length;\n                var dataItem;\n                var idField = that.options.idField;\n                if (that._idMap) {\n                    return that._idMap;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    idsMap[dataItem[idField]] = dataItem;\n                }\n                that.idsMap = idsMap;\n                return idsMap;\n            },\n            dataMaps: function () {\n                var that = this;\n                var childrenMap = {};\n                var data = that.data;\n                var dataLength = data.length;\n                var idsMap = {};\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                var idField = that.options.idField;\n                var parentIdField = that.options.parentIdField;\n                if (that._dataMaps) {\n                    return that._dataMaps;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    idsMap[dataItemId] = dataItem;\n                    childrenMap[dataItemId] = childrenMap[dataItemId] || [];\n                    childrenMap[dataItemParentId] = childrenMap[dataItemParentId] || [];\n                    childrenMap[dataItemParentId].push(dataItem);\n                }\n                that._dataMaps = {\n                    children: childrenMap,\n                    ids: idsMap\n                };\n                return that._dataMaps;\n            },\n            rootNodes: function () {\n                var that = this;\n                var data = that.data;\n                var defaultParentId = that.options.defaultParentId;\n                var dataLength = data.length;\n                var rootNodes = [];\n                var dataItem;\n                var parentIdField = that.options.parentIdField;\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    if (dataItem[parentIdField] === defaultParentId) {\n                        rootNodes.push(dataItem);\n                    }\n                }\n                return rootNodes;\n            },\n            removeCollapsedSubtreesFromRootNodes: function (options) {\n                options = options || {};\n                var that = this;\n                var rootNodes = that.rootNodes();\n                var result = [];\n                var prunedTree;\n                that._childrenMap = options.childrenMap = options.childrenMap || that.childrenMap();\n                options.maxDepth = options.maxDepth || Infinity;\n                for (var i = 0; i < rootNodes.length; i++) {\n                    prunedTree = that.removeCollapsedSubtrees(rootNodes[i], options);\n                    result = result.concat(prunedTree);\n                }\n                return result;\n            },\n            removeCollapsedSubtrees: function (rootNode, options) {\n                options = options || {};\n                var that = this;\n                var result = [];\n                var childIdx;\n                var prunedTree;\n                var childrenMap = options.childrenMap || {};\n                var maxDepth = options.maxDepth || Infinity;\n                var idField = that.options.idField;\n                var children = childrenMap[rootNode[idField]] || [];\n                var expanded = isUndefined(rootNode.expanded) ? options.expanded : rootNode.expanded;\n                result.push(rootNode);\n                if (children && expanded) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (result.length >= maxDepth) {\n                            break;\n                        }\n                        prunedTree = that.removeCollapsedSubtrees(children[childIdx], options);\n                        result = result.concat(prunedTree);\n                    }\n                }\n                return result;\n            }\n        });\n        var TreeQuery = function (data) {\n            this.data = data || [];\n        };\n        TreeQuery.prototype = new Query();\n        TreeQuery.prototype.constructor = TreeQuery;\n        TreeQuery.process = function (data, options, inPlace) {\n            options = options || {};\n            var query = new TreeQuery(data);\n            var group = options.group;\n            var sort = Query.normalizeGroup(group || []).concat(Query.normalizeSort(options.sort || []));\n            var filterCallback = options.filterCallback;\n            var filter = options.filter;\n            var skip = options.skip;\n            var take = options.take;\n            var total;\n            var childrenMap;\n            var filteredChildrenMap;\n            var view;\n            var prunedData;\n            if (sort && inPlace) {\n                query = query.sort(sort, undefined, undefined, inPlace);\n            }\n            if (filter) {\n                query = query.filter(filter);\n                if (filterCallback) {\n                    query = filterCallback(query);\n                }\n                total = query.toArray().length;\n            }\n            if (sort && !inPlace) {\n                query = query.sort(sort);\n                if (group) {\n                    data = query.toArray();\n                }\n            }\n            if (options.processFromRootNodes) {\n                view = new TreeView(query.toArray(), options);\n                if (filter) {\n                    filteredChildrenMap = view.childrenMap();\n                }\n                prunedData = view.removeCollapsedSubtreesFromRootNodes({\n                    childrenMap: filter || sort && sort.length ? undefined : options.childrenMap,\n                    expanded: options.expanded,\n                    maxDepth: skip + take || Infinity\n                });\n                childrenMap = view.childrenMap();\n                query = new TreeQuery(prunedData);\n            }\n            if (skip !== undefined && take !== undefined) {\n                query = query.range(skip, take);\n            }\n            if (group) {\n                query = query.group(group, data);\n            }\n            return {\n                total: total,\n                data: query.toArray(),\n                childrenMap: childrenMap,\n                filteredChildrenMap: filteredChildrenMap\n            };\n        };\n        var TreeListModel = Model.define({\n            id: 'id',\n            parentId: PARENTIDFIELD,\n            fields: {\n                id: { type: 'number' },\n                parentId: {\n                    type: 'number',\n                    nullable: true\n                }\n            },\n            init: function (value) {\n                Model.fn.init.call(this, value);\n                this._loaded = false;\n                if (!this.parentIdField) {\n                    this.parentIdField = PARENTIDFIELD;\n                }\n                this.parentId = this.get(this.parentIdField);\n            },\n            accept: function (data) {\n                Model.fn.accept.call(this, data);\n                this.parentId = this.get(this.parentIdField);\n            },\n            set: function (field, value, initiator) {\n                if (field == PARENTIDFIELD && this.parentIdField != PARENTIDFIELD) {\n                    this[this.parentIdField] = value;\n                }\n                Model.fn.set.call(this, field, value, initiator);\n                if (field == this.parentIdField) {\n                    this.parentId = this.get(this.parentIdField);\n                }\n            },\n            loaded: function (value) {\n                if (value !== undefined) {\n                    this._loaded = value;\n                } else {\n                    return this._loaded;\n                }\n            },\n            shouldSerialize: function (field) {\n                return Model.fn.shouldSerialize.call(this, field) && field !== '_loaded' && field != '_error' && field != '_edit' && !(this.parentIdField !== 'parentId' && field === 'parentId');\n            }\n        });\n        TreeListModel.parentIdField = PARENTIDFIELD;\n        TreeListModel.define = function (base, options) {\n            if (options === undefined) {\n                options = base;\n                base = TreeListModel;\n            }\n            var parentId = options.parentId || PARENTIDFIELD;\n            options.parentIdField = parentId;\n            var model = Model.define(base, options);\n            if (parentId) {\n                model.parentIdField = parentId;\n            }\n            return model;\n        };\n        function is(field) {\n            return function (object) {\n                return object[field];\n            };\n        }\n        function not(func) {\n            return function (object) {\n                return !func(object);\n            };\n        }\n        var TreeListDataSource = DataSource.extend({\n            init: function (options) {\n                options = options || {};\n                var that = this;\n                that._dataMaps = that._getDataMaps();\n                options.schema = extend(true, {}, {\n                    modelBase: TreeListModel,\n                    model: TreeListModel\n                }, options.schema);\n                DataSource.fn.init.call(this, options);\n            },\n            _addRange: function () {\n            },\n            _createNewModel: function (data) {\n                var that = this;\n                var model = {};\n                var fromModel = data instanceof Model;\n                var parentIdField = this._modelParentIdField();\n                if (fromModel) {\n                    model = data;\n                }\n                model = DataSource.fn._createNewModel.call(this, model);\n                if (!fromModel) {\n                    if (data.parentId) {\n                        data[model.parentIdField] = data.parentId;\n                    } else if (that._isPageable() && data[parentIdField]) {\n                        data[model.parentIdField] = data[parentIdField];\n                    }\n                    model.accept(data);\n                }\n                return model;\n            },\n            _shouldWrap: function () {\n                return true;\n            },\n            _push: function (result, operation) {\n                var data = DataSource.fn._readData.call(this, result);\n                if (!data) {\n                    data = result;\n                }\n                this[operation](data);\n            },\n            _getData: function () {\n                return this._data || [];\n            },\n            _readData: function (newData) {\n                var that = this;\n                var data = that._isPageable() ? that._getData().toJSON() : that.data();\n                newData = DataSource.fn._readData.call(this, newData);\n                this._replaceData((data.toJSON ? data.toJSON() : data).concat(newData), data);\n                if (newData instanceof ObservableArray) {\n                    return newData;\n                }\n                return data;\n            },\n            _replaceData: function (source, target) {\n                var sourceLength = source.length;\n                for (var i = 0; i < sourceLength; i++) {\n                    target[i] = source[i];\n                }\n                target.length = sourceLength;\n            },\n            _readAggregates: function (data) {\n                var result = extend(this._aggregateResult, this.reader.aggregates(data));\n                if ('' in result) {\n                    result[this._defaultParentId()] = result[''];\n                    delete result[''];\n                }\n                return result;\n            },\n            read: function (data) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._dataMaps = {};\n                    if (!that._modelOptions().expanded) {\n                        that._skip = 0;\n                        that._page = 1;\n                        that._collapsedTotal = undefined;\n                    }\n                }\n                return DataSource.fn.read.call(that, data);\n            },\n            remove: function (root) {\n                this._removeChildData(root);\n                this._removeFromDataMaps(root);\n                return DataSource.fn.remove.call(this, root);\n            },\n            _removeChildData: function (model, removePristine) {\n                var that = this;\n                var pageable = that._isPageable();\n                var data = pageable ? this._getData() : this.data();\n                var childrenMap = pageable ? that._getChildrenMap() || that.childrenMap(data) : that._childrenMap(data);\n                var items = this._subtree(childrenMap, model.id);\n                var shouldRemovePristine = isUndefined(removePristine) ? false : removePristine;\n                var removedItems = this._removeItems(items, shouldRemovePristine);\n                that._removeFromDataMaps(removedItems);\n            },\n            pushDestroy: function (items) {\n                var that = this;\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                for (var i = 0; i < items.length; i++) {\n                    that._removeChildData(items[i], true);\n                    that._removeFromDataMaps(items[i]);\n                }\n                DataSource.fn.pushDestroy.call(that, items);\n            },\n            insert: function (index, model) {\n                var that = this;\n                var newModel = that._createNewModel(model);\n                that._insertInDataMaps(newModel);\n                return DataSource.fn.insert.call(that, index, newModel);\n            },\n            _filterCallback: function (query) {\n                var that = this;\n                var i, item;\n                var map = {};\n                var result = [];\n                var data = query.toArray();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var pageable = that._isPageable();\n                var parentSubtree = [];\n                var parent;\n                for (i = 0; i < data.length; i++) {\n                    item = data[i];\n                    if (pageable) {\n                        parentSubtree = [];\n                        if (!map[item[idField]]) {\n                            map[item[idField]] = true;\n                            parentSubtree.push(item);\n                        }\n                        parent = that._parentNode(item);\n                        while (parent) {\n                            if (!map[parent[idField]]) {\n                                map[parent[idField]] = true;\n                                parentSubtree.unshift(parent);\n                                parent = that._parentNode(parent);\n                            } else {\n                                break;\n                            }\n                        }\n                        if (parentSubtree.length) {\n                            result = result.concat(parentSubtree);\n                        }\n                    } else {\n                        while (item) {\n                            if (!map[item[idField]]) {\n                                map[item[idField]] = true;\n                                result.push(item);\n                            }\n                            if (!map[item[parentIdField]]) {\n                                map[item[parentIdField]] = true;\n                                item = this.parentNode(item);\n                                if (item) {\n                                    result.push(item);\n                                }\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                }\n                return new Query(result);\n            },\n            _subtree: function (map, id) {\n                var that = this;\n                var result = map[id] || [];\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                for (var i = 0, len = result.length; i < len; i++) {\n                    if (result[i][idField] !== defaultParentId) {\n                        result = result.concat(that._subtree(map, result[i][idField]));\n                    }\n                }\n                return result;\n            },\n            _childrenMap: function (data) {\n                var map = {};\n                var i, item, id, parentId;\n                data = this._observeView(data);\n                for (i = 0; i < data.length; i++) {\n                    item = data[i];\n                    id = item.id;\n                    parentId = item.parentId;\n                    map[id] = map[id] || [];\n                    map[parentId] = map[parentId] || [];\n                    map[parentId].push(item);\n                }\n                return map;\n            },\n            childrenMap: function (data) {\n                var view = this._createTreeView(data);\n                var map = view.childrenMap();\n                return map;\n            },\n            _getChildrenMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.children;\n            },\n            _initIdsMap: function (data) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                if (isUndefined(dataMaps.ids)) {\n                    dataMaps.ids = that._idsMap(data);\n                }\n                return dataMaps.ids;\n            },\n            _idsMap: function (data) {\n                var view = this._createTreeView(data);\n                var map = view.idsMap();\n                return map;\n            },\n            _getIdsMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.ids || {};\n            },\n            _getFilteredChildrenMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.filteredChildren;\n            },\n            _setFilteredChildrenMap: function (map) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                dataMaps.filteredChildren = map;\n            },\n            _initDataMaps: function (data) {\n                var that = this;\n                var view = that._createTreeView(data);\n                that._dataMaps = view.dataMaps();\n                return that._dataMaps;\n            },\n            _initChildrenMapForParent: function (parent) {\n                var that = this;\n                var data = that._getData();\n                var childrenMap = that._getChildrenMap();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var parentId = (parent || {})[idField];\n                if (childrenMap && parent) {\n                    childrenMap[parentId] = [];\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i][parentIdField] === parentId) {\n                            childrenMap[parentId].push(data[i]);\n                        }\n                    }\n                }\n            },\n            _getDataMaps: function () {\n                var that = this;\n                that._dataMaps = that._dataMaps || {};\n                return that._dataMaps;\n            },\n            _createTreeView: function (data, options) {\n                var view = new TreeView(data, extend(options, this._defaultTreeModelOptions()));\n                return view;\n            },\n            _defaultTreeModelOptions: function () {\n                var that = this;\n                var modelOptions = that._modelOptions();\n                return {\n                    defaultParentId: that._defaultParentId(),\n                    idField: that._modelIdField(),\n                    parentIdField: that._modelParentIdField(),\n                    expanded: modelOptions.expanded\n                };\n            },\n            _defaultDataItemType: function () {\n                return this.reader.model || kendo.data.ObservableObject;\n            },\n            _calculateAggregates: function (data, options) {\n                options = options || {};\n                var that = this;\n                var result = {};\n                var item, subtree, i;\n                var filter = options.filter;\n                var skip = options.skip;\n                var take = options.take;\n                var maxDepth = !isUndefined(skip) && !isUndefined(take) ? skip + take : Infinity;\n                var pageable = that._isPageable();\n                var filteredChildrenMap = options.filteredChildrenMap;\n                var childrenMap = options.childrenMap;\n                var pageableChildrenMap;\n                if (pageable) {\n                    if (isUndefined(options.aggregate)) {\n                        return result;\n                    }\n                    if (filteredChildrenMap) {\n                        pageableChildrenMap = filteredChildrenMap;\n                    } else if (childrenMap) {\n                        pageableChildrenMap = childrenMap;\n                    } else {\n                        pageableChildrenMap = that.childrenMap(that._getData());\n                    }\n                }\n                if (!pageable && filter) {\n                    data = Query.process(data, {\n                        filter: filter,\n                        filterCallback: proxy(this._filterCallback, this)\n                    }).data;\n                }\n                var map = pageable ? pageableChildrenMap : that._childrenMap(data);\n                result[this._defaultParentId()] = new Query(this._subtree(map, this._defaultParentId())).aggregate(options.aggregate);\n                for (i = 0; i < data.length; i++) {\n                    if (i >= maxDepth) {\n                        break;\n                    }\n                    item = data[i];\n                    subtree = this._subtree(map, item.id);\n                    result[item.id] = new Query(subtree).aggregate(options.aggregate);\n                }\n                return result;\n            },\n            _queryProcess: function (data, options) {\n                var that = this;\n                var result = {};\n                options = options || {};\n                options.filterCallback = proxy(this._filterCallback, this);\n                if (that._isPageable()) {\n                    return that._processPageableQuery(data, options);\n                } else {\n                    var defaultParentId = this._defaultParentId();\n                    result = Query.process(data, options);\n                    var map = this._childrenMap(result.data);\n                    var hasLoadedChildren, i, item, children;\n                    data = map[defaultParentId] || [];\n                    for (i = 0; i < data.length; i++) {\n                        item = data[i];\n                        if (item.id === defaultParentId) {\n                            continue;\n                        }\n                        children = map[item.id];\n                        hasLoadedChildren = !!(children && children.length);\n                        if (!item.loaded()) {\n                            item.loaded(hasLoadedChildren || !item.hasChildren);\n                        }\n                        if (item.loaded() || item.hasChildren !== true) {\n                            item.hasChildren = hasLoadedChildren;\n                        }\n                        if (hasLoadedChildren) {\n                            data = data.slice(0, i + 1).concat(children, data.slice(i + 1));\n                        }\n                    }\n                    result.data = data;\n                }\n                return result;\n            },\n            _processPageableQuery: function (data, options) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                var result;\n                var filteredChildrenMap;\n                if (that._getData() !== data || !dataMaps.children || !dataMaps.ids) {\n                    dataMaps = that._initDataMaps(that._getData());\n                }\n                options.childrenMap = dataMaps.children || {};\n                options.idsMap = dataMaps.ids || {};\n                result = that._processTreeQuery(data, options);\n                that._replaceWithObservedData(result.data, data);\n                that._processDataItemsState(result.data, result.childrenMap);\n                that._replaceItemsInDataMaps(result.data);\n                result.dataToAggregate = that._dataToAggregate(result.data, options);\n                if (options.filter || that.filter()) {\n                    filteredChildrenMap = result.filteredChildrenMap;\n                    that._replaceInMapWithObservedData(filteredChildrenMap, data);\n                    that._setFilteredChildrenMap(filteredChildrenMap);\n                    options.filteredChildrenMap = filteredChildrenMap;\n                    that._calculateCollapsedTotal(result.data);\n                } else {\n                    that._collapsedTotal = undefined;\n                }\n                return result;\n            },\n            _dataToAggregate: function (data) {\n                var that = this;\n                var firstDataItem = data[0] || {};\n                var firstItemParents = that._parentNodes(firstDataItem);\n                var dataToAggregate = firstItemParents.concat(data);\n                return dataToAggregate;\n            },\n            _replaceItemsInDataMaps: function (observableArray) {\n                var that = this;\n                var view = isArray(observableArray) ? observableArray : [observableArray];\n                var itemType = that._defaultDataItemType();\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var dataMaps = that._getDataMaps();\n                var item;\n                var parents;\n                var directParent;\n                for (var viewIndex = 0; viewIndex < view.length; viewIndex++) {\n                    item = view[viewIndex];\n                    if (!(item instanceof itemType)) {\n                        continue;\n                    }\n                    that._insertInIdsMap(item);\n                    parents = that._parentNodes(item);\n                    directParent = parents && parents.length ? parents[parents.length - 1] : undefined;\n                    if (item[parentIdField] === defaultParentId) {\n                        that._replaceInMap(dataMaps.children, defaultParentId, item, itemType);\n                    } else if (directParent) {\n                        that._replaceInMap(dataMaps.children, directParent[idField], item, itemType);\n                    }\n                }\n            },\n            _replaceInMap: function (map, id, replacement, itemType) {\n                var idField = this._modelIdField();\n                map[id] = map[id] || [];\n                itemType = itemType || this._defaultDataItemType();\n                var itemInArray = map[id].filter(function (element) {\n                    return replacement[idField] === element[idField];\n                })[0];\n                var itemIndex = itemInArray ? map[id].indexOf(itemInArray) : -1;\n                if (itemIndex !== -1 && !(itemInArray instanceof itemType)) {\n                    map[id][itemIndex] = replacement;\n                }\n            },\n            _replaceWithObservedData: function (dataToReplace, replacementArray) {\n                var that = this;\n                var idsMap = that._getDataMaps().ids || {};\n                var idField = that._modelIdField();\n                var itemType = that._defaultDataItemType();\n                var itemToReplace;\n                var itemToReplaceId;\n                var dataItem;\n                var dataItemIndex;\n                var observableItem;\n                for (var i = 0; i < dataToReplace.length; i++) {\n                    itemToReplace = dataToReplace[i];\n                    itemToReplaceId = itemToReplace[idField];\n                    if (!(itemToReplace instanceof itemType)) {\n                        if (!(idsMap[itemToReplaceId] instanceof itemType)) {\n                            dataItem = that._getById(itemToReplaceId);\n                            dataItemIndex = replacementArray.indexOf(dataItem);\n                            if (dataItem && dataItemIndex !== -1) {\n                                observableItem = replacementArray.at(dataItemIndex);\n                                dataToReplace[i] = observableItem;\n                            }\n                        } else {\n                            dataToReplace[i] = idsMap[itemToReplaceId];\n                        }\n                    }\n                }\n            },\n            _replaceInMapWithObservedData: function (map, replacementArray) {\n                var that = this;\n                for (var key in map) {\n                    that._replaceWithObservedData(map[key], replacementArray);\n                }\n            },\n            _insertInDataMaps: function (item) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._insertInIdsMap(item);\n                    that._insertInChildrenMap(item);\n                }\n            },\n            _insertInIdsMap: function (item) {\n                var that = this;\n                var idsMap = that._getIdsMap();\n                var idField = that._modelIdField();\n                if (!isUndefined(item[idField])) {\n                    idsMap[item[idField]] = item;\n                }\n            },\n            _insertInChildrenMap: function (item, index) {\n                var that = this;\n                var childrenMap = that._getChildrenMap() || {};\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var itemId = item[idField];\n                var parentId = item[parentIdField];\n                index = index || 0;\n                childrenMap[itemId] = childrenMap[itemId] || [];\n                childrenMap[parentId] = childrenMap[parentId] || [];\n                childrenMap[parentId].splice(index, 0, item);\n            },\n            _removeFromDataMaps: function (items) {\n                var that = this;\n                items = isArray(items) ? items : [items];\n                if (that._isPageable()) {\n                    for (var i = 0; i < items.length; i++) {\n                        that._removeFromIdsMap(items[i]);\n                        that._removeFromChildrenMap(items[i]);\n                    }\n                }\n            },\n            _removeFromIdsMap: function (item) {\n                var that = this;\n                var idsMap = that._getIdsMap();\n                var idField = that._modelIdField();\n                if (!isUndefined(item[idField])) {\n                    idsMap[item[idField]] = undefined;\n                }\n            },\n            _removeFromChildrenMap: function (item) {\n                var that = this;\n                var childrenMap = that._getChildrenMap() || {};\n                var parentIdField = that._modelParentIdField();\n                var parentId = item[parentIdField];\n                childrenMap[parentId] = childrenMap[parentId] || [];\n                var itemIndex = that._indexInChildrenMap(item);\n                if (itemIndex !== -1) {\n                    childrenMap[parentId].splice(itemIndex, 1);\n                }\n            },\n            _indexInChildrenMap: function (item) {\n                var that = this;\n                return that._itemIndexInMap(item, that._getChildrenMap());\n            },\n            _itemIndexInMap: function (item, dataMap) {\n                var that = this;\n                var map = dataMap || {};\n                var parentIdField = that._modelParentIdField();\n                var parentId = item[parentIdField];\n                map[parentId] = map[parentId] || [];\n                var itemInArray = map[parentId].filter(function (element) {\n                    return item.uid === element.uid;\n                })[0];\n                var itemIndex = itemInArray ? map[parentId].indexOf(itemInArray) : -1;\n                return itemIndex;\n            },\n            _getById: function (id) {\n                var that = this;\n                var idField = that._modelIdField();\n                var data = that._getData();\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i][idField] === id) {\n                        return data[i];\n                    }\n                }\n            },\n            _isLastItemInView: function (dataItem) {\n                var view = this.view();\n                return view.length && view[view.length - 1] === dataItem;\n            },\n            _defaultPageableQueryOptions: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                var options = {\n                    skip: that.skip(),\n                    take: that.take(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    filterCallback: proxy(that._filterCallback, that),\n                    childrenMap: dataMaps.children,\n                    idsMap: dataMaps.ids\n                };\n                return options;\n            },\n            _isPageable: function () {\n                var pageSize = this.pageSize();\n                return !isUndefined(pageSize) && pageSize > 0 && !this.options.serverPaging;\n            },\n            _updateTotalForAction: function (action, items) {\n                var that = this;\n                DataSource.fn._updateTotalForAction.call(that, action, items);\n                if (that._isPageable()) {\n                    that._updateCollapsedTotalForAction(action, items);\n                }\n            },\n            _updateCollapsedTotalForAction: function (action, items) {\n                var that = this;\n                var total = parseInt(that._collapsedTotal, 10);\n                if (!isNumber(that._collapsedTotal)) {\n                    that._calculateCollapsedTotal();\n                    return;\n                }\n                if (action === 'add') {\n                    total += items.length;\n                } else if (action === 'remove') {\n                    total -= items.length;\n                } else if (action !== 'itemchange' && action !== 'sync' && !that.options.serverPaging) {\n                    total = that._calculateCollapsedTotal();\n                } else if (action === 'sync') {\n                    total = that._calculateCollapsedTotal();\n                }\n                that._collapsedTotal = total;\n            },\n            _setFilterTotal: function (filterTotal, setDefaultValue) {\n                var that = this;\n                DataSource.fn._setFilterTotal.call(that, filterTotal, setDefaultValue);\n            },\n            collapsedTotal: function () {\n                var that = this;\n                if (!isUndefined(that._collapsedTotal)) {\n                    return that._collapsedTotal;\n                }\n                return that._calculateCollapsedTotal();\n            },\n            _calculateCollapsedTotal: function (filteredData) {\n                var that = this;\n                var data = that._dataWithoutCollapsedSubtrees(filteredData);\n                if (data.length) {\n                    that._collapsedTotal = data.length;\n                }\n                return that._collapsedTotal;\n            },\n            _dataWithoutCollapsedSubtrees: function (filteredData) {\n                return this._removeCollapsedSubtrees(filteredData || this._getData());\n            },\n            _removeCollapsedSubtrees: function (data) {\n                var that = this;\n                var view = that._createTreeView(data);\n                var result = view.removeCollapsedSubtreesFromRootNodes({\n                    expanded: that._modelOptions().expanded,\n                    childrenMap: that.filter() ? that._getFilteredChildrenMap() : that._getChildrenMap()\n                });\n                return result;\n            },\n            _processTreeQuery: function (data, options) {\n                var result = TreeQuery.process(data, extend(options, this._defaultTreeModelOptions(), { processFromRootNodes: true }));\n                return result;\n            },\n            _processDataItemsState: function (data, childrenMap) {\n                var dataLength = data.length;\n                var i;\n                for (i = 0; i < dataLength; i++) {\n                    this._processDataItemState(data[i], childrenMap);\n                }\n            },\n            _processDataItemState: function (dataItem, childrenMap) {\n                var defaultParentId = this._defaultParentId();\n                if (dataItem.id === defaultParentId) {\n                    return;\n                }\n                var children = childrenMap[dataItem.id] || [];\n                var hasLoadedChildren = !!(children && children.length);\n                if (!dataItem.loaded) {\n                    return;\n                }\n                if (!dataItem.loaded()) {\n                    dataItem.loaded(hasLoadedChildren || !dataItem.hasChildren);\n                }\n                if (dataItem.loaded() || dataItem.hasChildren !== true) {\n                    dataItem.hasChildren = hasLoadedChildren;\n                }\n            },\n            _queueRequest: function (options, callback) {\n                callback.call(this);\n            },\n            _modelLoaded: function (id) {\n                var model = this.get(id);\n                model.loaded(true);\n                model.hasChildren = this.childNodes(model).length > 0;\n            },\n            _modelError: function (id, e) {\n                this.get(id)._error = e;\n            },\n            success: function (data, requestParams) {\n                if (!requestParams || typeof requestParams.id == 'undefined') {\n                    this._data = this._observe([]);\n                }\n                DataSource.fn.success.call(this, data, requestParams);\n                this._total = this._data.length;\n            },\n            load: function (model) {\n                var method = '_query';\n                var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n                var defaultPromise = $.Deferred().resolve().promise();\n                if (model.loaded()) {\n                    if (remote) {\n                        return defaultPromise;\n                    }\n                } else if (model.hasChildren) {\n                    method = 'read';\n                    this._removeChildData(model);\n                }\n                return this[method]({ id: model.id }).done(proxy(this._modelLoaded, this, model.id)).fail(proxy(this._modelError, this, model.id));\n            },\n            contains: function (root, child) {\n                var that = this;\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var rootId = root[idField];\n                var pageable = that._isPageable();\n                while (child) {\n                    if (child[parentIdField] === rootId) {\n                        return true;\n                    }\n                    child = pageable ? that._parentNode(child) : that.parentNode(child);\n                }\n                return false;\n            },\n            _byParentId: function (id, defaultId) {\n                var result = [];\n                var view = this.view();\n                var current;\n                if (id === defaultId) {\n                    return [];\n                }\n                for (var i = 0; i < view.length; i++) {\n                    current = view.at(i);\n                    if (current.parentId == id) {\n                        result.push(current);\n                    }\n                }\n                return result;\n            },\n            _defaultParentId: function () {\n                return this.reader.model.fn.defaults[this.reader.model.parentIdField];\n            },\n            _modelOptions: function () {\n                var modelOptions = (this.options.schema || {}).model || {};\n                return modelOptions;\n            },\n            _modelIdField: function () {\n                var modelOptions = this._modelOptions();\n                return modelOptions.id || 'id';\n            },\n            _modelParentIdField: function () {\n                var modelOptions = this._modelOptions();\n                return modelOptions.parentId || PARENTIDFIELD;\n            },\n            childNodes: function (model) {\n                return this._byParentId(model.id, this._defaultParentId());\n            },\n            allChildNodes: function (model, result) {\n                var directChildren = this.data().filter(function (item) {\n                    return item.parentId === model.id;\n                });\n                for (var i = 0; i < directChildren.length; i++) {\n                    result.push(directChildren[i]);\n                    this.allChildNodes(directChildren[i], result);\n                }\n            },\n            rootNodes: function () {\n                return this._byParentId(this._defaultParentId());\n            },\n            _rootNode: function (child) {\n                return this._parentNodes(child)[0];\n            },\n            _pageableRootNodes: function (options) {\n                options = options || {};\n                var that = this;\n                var defaultParentId = that._defaultParentId();\n                var parentIdField = that._modelParentIdField();\n                var result = [];\n                var nodesWithoutParentInView = that._nodesWithoutParentInView(options);\n                var node;\n                var root;\n                for (var i = 0; i < nodesWithoutParentInView.length; i++) {\n                    node = nodesWithoutParentInView[i];\n                    if (node[parentIdField] === defaultParentId) {\n                        result.push(node);\n                    } else {\n                        root = that._rootNode(node);\n                        if (root && result.indexOf(root) === -1) {\n                            result.push(root);\n                        }\n                    }\n                }\n                return result;\n            },\n            parentNode: function (model) {\n                return this.get(model.parentId);\n            },\n            _parentNode: function (child) {\n                var that = this;\n                var parentIdField = that._modelParentIdField();\n                var idsMap = that._initIdsMap(that._getData());\n                var parentId = child[parentIdField];\n                var parent = idsMap[parentId] || that._getById(parentId);\n                return parent;\n            },\n            _parentNodes: function (child) {\n                var that = this;\n                var parent = that._parentNode(child);\n                var parents = [];\n                while (parent) {\n                    parents.unshift(parent);\n                    parent = that._parentNode(parent);\n                }\n                return parents;\n            },\n            _parentNodesNotInView: function () {\n                var that = this;\n                var view = that.view();\n                var result = [];\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var parentInView;\n                var parents = [];\n                var directParent;\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                for (var i = 0; i < view.length; i++) {\n                    dataItem = view[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    parentInView = that._parentInView(dataItemParentId);\n                    if (!parentInView && dataItemParentId !== defaultParentId) {\n                        parents = that._parentNodes(dataItem);\n                        directParent = parents && parents.length ? parents[parents.length - 1] : that._getById(dataItemParentId);\n                        if (directParent && result.indexOf(directParent) === -1) {\n                            result.push(directParent);\n                        }\n                    }\n                }\n                return result;\n            },\n            _nodesWithoutParentInView: function (options) {\n                options = options || {};\n                var that = this;\n                var view = that.view();\n                var childrenMap = options.childrenMap || that.childrenMap(that._getData());\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var dataItem;\n                var parentInView;\n                var children = [];\n                var result = [];\n                for (var i = 0; i < view.length; i++) {\n                    dataItem = view[i];\n                    children = childrenMap[dataItem[idField]];\n                    parentInView = that._parentInView(dataItem[parentIdField]);\n                    if (!parentInView) {\n                        result.push(dataItem);\n                    }\n                }\n                return result;\n            },\n            _parentInView: function (parentId) {\n                var view = this.view();\n                for (var i = 0; i < view.length; i++) {\n                    if (view[i].id === parentId) {\n                        return view[i];\n                    }\n                }\n            },\n            level: function (model) {\n                var result = -1;\n                if (!(model instanceof TreeListModel)) {\n                    model = this.get(model);\n                }\n                do {\n                    model = this.parentNode(model);\n                    result++;\n                } while (model);\n                return result;\n            },\n            _pageableModelLevel: function (model) {\n                var that = this;\n                if (!model || !that._isPageable()) {\n                    return 0;\n                }\n                var parents = that._parentNodes(model);\n                return parents.length;\n            },\n            filter: function (value) {\n                var baseFilter = DataSource.fn.filter;\n                if (value === undefined) {\n                    return baseFilter.call(this, value);\n                }\n                baseFilter.call(this, value);\n            },\n            _pageableQueryOptions: function (options) {\n                var dataMaps = this._getDataMaps();\n                options.childrenMap = dataMaps.children;\n                options.idsMap = dataMaps.ids;\n                return options;\n            },\n            _flatData: function (data, skip) {\n                skip = this._isPageable() ? true : skip;\n                return DataSource.fn._flatData.call(this, data, skip);\n            },\n            data: function (data) {\n                var that = this;\n                var result = DataSource.fn.data.call(that, data);\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                    that._calculateCollapsedTotal();\n                }\n                return result;\n            },\n            cancelChanges: function (model) {\n                var that = this;\n                DataSource.fn.cancelChanges.call(that, model);\n                that._restorePageSizeAfterAddChild();\n            },\n            _modelCanceled: function (model) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._removeFromDataMaps(model);\n                }\n            },\n            _changesCanceled: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                }\n            },\n            _setAddChildPageSize: function () {\n                var that = this;\n                var queryOptions = {};\n                if (that._isPageable()) {\n                    that._addChildPageSize = that.pageSize() + 1;\n                    queryOptions = that._defaultPageableQueryOptions();\n                    queryOptions.take = that._addChildPageSize;\n                    queryOptions.pageSize = that._addChildPageSize;\n                    that._query(queryOptions);\n                }\n            },\n            _restorePageSizeAfterAddChild: function () {\n                var that = this;\n                var queryOptions = {};\n                if (that._isPageable()) {\n                    if (!isUndefined(that._addChildPageSize)) {\n                        queryOptions = that._defaultPageableQueryOptions();\n                        queryOptions.take = that._addChildPageSize - 1;\n                        queryOptions.pageSize = that._addChildPageSize - 1;\n                        that._query(queryOptions);\n                    }\n                }\n                that._addChildPageSize = undefined;\n            },\n            sync: function () {\n                var that = this;\n                return DataSource.fn.sync.call(that).then(function () {\n                    that._restorePageSizeAfterAddChild();\n                });\n            },\n            _syncEnd: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                }\n            }\n        });\n        TreeListDataSource.create = function (options) {\n            if (Array.isArray(options)) {\n                options = { data: options };\n            } else if (options instanceof ObservableArray) {\n                options = { data: options.toJSON() };\n            }\n            return options instanceof TreeListDataSource ? options : new TreeListDataSource(options);\n        };\n        function isCellVisible() {\n            return this.style.display !== 'none';\n        }\n        function sortCells(cells) {\n            var indexAttr = kendo.attr('index');\n            return cells.sort(function (a, b) {\n                a = $(a);\n                b = $(b);\n                var indexA = a.attr(indexAttr);\n                var indexB = b.attr(indexAttr);\n                if (indexA === undefined) {\n                    indexA = $(a).index();\n                }\n                if (indexB === undefined) {\n                    indexB = $(b).index();\n                }\n                indexA = parseInt(indexA, 10);\n                indexB = parseInt(indexB, 10);\n                return indexA > indexB ? 1 : indexA < indexB ? -1 : 0;\n            });\n        }\n        function leafDataCells(container) {\n            var rows = container.find('>tr:not(.k-filter-row)');\n            var filter = function () {\n                var el = $(this);\n                return !el.hasClass('k-group-cell') && !el.hasClass('k-hierarchy-cell');\n            };\n            var cells = $();\n            if (rows.length > 1) {\n                cells = rows.find('th[data-index]').filter(filter);\n            }\n            cells = cells.add(rows.last().find('th').filter(filter));\n            return sortCells(cells);\n        }\n        function createPlaceholders(options) {\n            var spans = [];\n            var className = options.className;\n            for (var i = 0, level = options.level; i < level; i++) {\n                spans.push(kendoDomElement('span', { className: className }));\n            }\n            return spans;\n        }\n        function columnsWidth(cols) {\n            var colWidth, width = 0;\n            for (var idx = 0, length = cols.length; idx < length; idx++) {\n                colWidth = cols[idx].style.width;\n                if (colWidth && colWidth.indexOf('%') == -1) {\n                    width += parseInt(colWidth, 10);\n                }\n            }\n            return width;\n        }\n        function syncTableHeight(table1, table2) {\n            table1 = table1[0];\n            table2 = table2[0];\n            if (table1.rows.length && table2.rows.length && table1.rows.length !== table2.rows.length) {\n                var lockedHeigth = table1.offsetHeight;\n                var tableHeigth = table2.offsetHeight;\n                var row;\n                var diff;\n                if (lockedHeigth > tableHeigth) {\n                    row = table2.rows[table2.rows.length - 1];\n                    if (filterRowRegExp.test(row.className)) {\n                        row = table2.rows[table2.rows.length - 2];\n                    }\n                    diff = lockedHeigth - tableHeigth;\n                } else {\n                    row = table1.rows[table1.rows.length - 1];\n                    if (filterRowRegExp.test(row.className)) {\n                        row = table1.rows[table1.rows.length - 2];\n                    }\n                    diff = tableHeigth - lockedHeigth;\n                }\n                row.style.height = row.offsetHeight + diff + 'px';\n            }\n        }\n        var TreeListPager = ui.Pager.extend({\n            options: { name: 'TreeListPager' },\n            totalPages: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                if (dataSource && dataSource._filter) {\n                    return ui.Pager.fn.totalPages.call(that);\n                }\n                return Math.ceil((that._collapsedTotal() || 0) / (that.pageSize() || 1));\n            },\n            _createDataSource: function (options) {\n                this.dataSource = kendo.data.TreeListDataSource.create(options.dataSource);\n            },\n            _collapsedTotal: function () {\n                var dataSource = this.dataSource;\n                return dataSource ? dataSource.collapsedTotal() || 0 : 0;\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                options = this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.bind(this.events, options);\n                this.model = this.options.model;\n                this.fields = this._fields(this.options.columns);\n                this._initContainer();\n                this.createEditable();\n            },\n            events: [],\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: options.clearContainer,\n                    model: this.model,\n                    change: options.change\n                });\n            },\n            _isEditable: function (column) {\n                return isColumnEditable(column, this.model);\n            },\n            _fields: function (columns) {\n                var fields = [];\n                var idx, length, column;\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (this._isEditable(column)) {\n                        fields.push({\n                            field: column.field,\n                            format: column.format,\n                            editor: column.editor\n                        });\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            close: function () {\n                this.destroy();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty().end().removeAttr(kendo.attr('role'));\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this._attachHandlers();\n                kendo.cycleForm(this.wrapper);\n                this.open();\n            },\n            events: [\n                CANCEL,\n                SAVE\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var formContent = [];\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid).append('<div class=\"k-edit-form-container\"/>');\n                if (options.template) {\n                    this._appendTemplate(formContent);\n                    this.fields = [];\n                } else {\n                    this._appendFields(formContent);\n                }\n                this._appendButtons(formContent);\n                new kendoDom.Tree(this.wrapper.children()[0]).render(formContent);\n                this.wrapper.appendTo(options.appendTo);\n                this.window = new ui.Window(this.wrapper, options.window);\n            },\n            _appendTemplate: function (form) {\n                var template = this.options.template;\n                if (typeof template === STRING) {\n                    template = kendo.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                form.push(kendoHtmlElement(template));\n            },\n            _appendFields: function (form) {\n                var idx, length, column;\n                var columns = this.options.columns;\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.selectable) {\n                        continue;\n                    }\n                    if (column.command) {\n                        continue;\n                    }\n                    form.push(kendoHtmlElement('<div class=\"k-edit-label\"><label for=\"' + column.field + '\">' + (column.title || column.field || '') + '</label></div>'));\n                    if (this._isEditable(column)) {\n                        form.push(kendoHtmlElement('<div ' + kendo.attr('container-for') + '=\"' + column.field + '\" class=\"k-edit-field\"></div>'));\n                    } else {\n                        form.push(kendoDomElement('div', { 'class': 'k-edit-field' }, [this.options.fieldRenderer(column, this.model)]));\n                    }\n                }\n            },\n            _appendButtons: function (form) {\n                form.push(kendoDomElement('div', { 'class': 'k-edit-buttons' }, this.options.commandRenderer()));\n            },\n            _attachHandlers: function () {\n                var closeHandler = this._cancelProxy = proxy(this._cancel, this);\n                this.wrapper.on(CLICK + NS, '.k-grid-cancel', this._cancelProxy);\n                this._saveProxy = proxy(this._save, this);\n                this.wrapper.on(CLICK + NS, '.k-grid-update', this._saveProxy);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        closeHandler(e);\n                    }\n                });\n            },\n            _detachHandlers: function () {\n                this._cancelProxy = null;\n                this._saveProxy = null;\n                this.wrapper.off(NS);\n            },\n            _cancel: function (e) {\n                this.trigger(CANCEL, e);\n            },\n            _save: function () {\n                this.trigger(SAVE);\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.destroy();\n                this.window = null;\n                this._detachHandlers();\n                Editor.fn.destroy.call(this);\n            }\n        });\n        var IncellEditor = Editor.extend({\n            destroy: function () {\n                var that = this;\n                that.editable.destroy();\n                that.editable.element.off().empty().removeAttr(kendo.attr('role'));\n                that.model = that.wrapper = that.element = that.columns = that.editable = null;\n            }\n        });\n        var TreeList = DataBoundWidget.extend({\n            init: function (element, options, events) {\n                DataBoundWidget.fn.init.call(this, element, options);\n                if (events) {\n                    this._events = events;\n                }\n                isRtl = kendo.support.isRtl(element);\n                this._dataSource(this.options.dataSource);\n                this._aria();\n                this._columns();\n                this._layout();\n                this._navigatable();\n                this._selectable();\n                this._sortable();\n                this._resizable();\n                this._filterable();\n                this._filterRow();\n                this._attachEvents();\n                this._toolbar();\n                this._scrollable();\n                this._reorderable();\n                this._columnMenu();\n                this._minScreenSupport();\n                this._draggable();\n                this._pageable();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n                if (this._hasLockedColumns) {\n                    var widget = this;\n                    this.wrapper.addClass('k-grid-lockedcolumns');\n                    this._resizeHandler = function () {\n                        widget.resize();\n                    };\n                    $(window).on('resize' + NS, this._resizeHandler);\n                }\n                kendo.notify(this);\n            },\n            _draggable: function () {\n                var that = this;\n                var editable = this.options.editable;\n                var dataSource = that.dataSource;\n                var idField = dataSource._modelIdField();\n                var parentIdField = dataSource._modelParentIdField();\n                var pageable = that._isPageable();\n                var reorderable;\n                if (!editable || !editable.move) {\n                    return;\n                }\n                reorderable = editable.move.reorderable;\n                this._dragging = new kendo.ui.HierarchicalDragAndDrop(this.wrapper, {\n                    $angular: this.$angular,\n                    autoScroll: true,\n                    holdToDrag: touchDevice,\n                    filter: 'tbody>tr',\n                    itemSelector: 'tr',\n                    allowedContainers: this.wrapper,\n                    hintText: function (row) {\n                        var text = function () {\n                            return $(this).text();\n                        };\n                        var separator = '<span class=\\'k-drag-separator\\'></span>';\n                        return row.children('td').map(text).toArray().join(separator);\n                    },\n                    contains: proxy(function (source, destination) {\n                        var dest = this.dataItem(destination);\n                        var src = this.dataItem(source);\n                        return src == dest || this.dataSource.contains(src, dest);\n                    }, this),\n                    itemFromTarget: function (target) {\n                        var tr = target.closest('tr');\n                        var prevRow = tr.prev();\n                        var nextRow = tr.next();\n                        var first;\n                        var last;\n                        if (prevRow) {\n                            first = !that.sameLevel(prevRow, tr);\n                        }\n                        if (nextRow) {\n                            last = !that.sameLevel(nextRow, tr);\n                        }\n                        return {\n                            item: tr,\n                            content: tr,\n                            first: first,\n                            last: last\n                        };\n                    },\n                    dragstart: proxy(function (source) {\n                        this.wrapper.addClass('k-treelist-dragging');\n                        if (this.wrapper.find('.k-grid-content').length) {\n                            this.wrapper.find('.k-grid-content table, .k-grid-content-locked table').css('position', 'relative');\n                        }\n                        var model = this.dataItem(source);\n                        return this.trigger(DRAGSTART, { source: model });\n                    }, this),\n                    drag: proxy(function (e) {\n                        e.source = this.dataItem(e.source);\n                        this.trigger(DRAG, e);\n                    }, this),\n                    drop: proxy(function (e) {\n                        e.source = this.dataItem(e.source);\n                        e.destination = this.dataItem(e.destination);\n                        this.wrapper.removeClass('k-treelist-dragging');\n                        if (this.wrapper.find('.k-grid-content').length) {\n                            this.wrapper.find('.k-grid-content table, .k-grid-content-locked table').css('position', 'static');\n                        }\n                        return this.trigger(DROP, e);\n                    }, this),\n                    dragend: proxy(function (e) {\n                        var dest = this.dataItem(e.destination);\n                        var src = this.dataItem(e.source);\n                        var originalSrcParentId = src[parentIdField];\n                        var originalSrcIndex = dataSource._indexInChildrenMap(src);\n                        var position = e.position;\n                        if (position == 'over') {\n                            if (pageable) {\n                                dataSource._removeFromChildrenMap(src);\n                                src[parentIdField] = dest ? dest[idField] : null;\n                                dataSource._initChildrenMapForParent(dest);\n                                src[parentIdField] = originalSrcParentId;\n                            }\n                            var isPrevented = src.set('parentId', dest ? dest.id : null);\n                            if (pageable && isPrevented) {\n                                dataSource._removeFromChildrenMap(src);\n                                src[parentIdField] = originalSrcParentId;\n                                dataSource._removeFromChildrenMap(src);\n                                dataSource._insertInChildrenMap(src, originalSrcIndex);\n                            }\n                        } else {\n                            if (position == 'before') {\n                                that.insertBefore(src, dest);\n                            } else if (position == 'after') {\n                                that.insertAfter(src, dest);\n                            }\n                        }\n                        e.source = src;\n                        e.destination = dest;\n                        this.trigger(DRAGEND, e);\n                    }, this),\n                    reorderable: reorderable,\n                    dropHintContainer: function (item) {\n                        return item.children('td:visible').eq(0);\n                    },\n                    dropPositionFrom: function (dropHint) {\n                        var contents;\n                        var length;\n                        var i;\n                        var dropHintElement;\n                        var isAfterText = false;\n                        if (dropHint.parent().find('.k-i-none').length) {\n                            return dropHint.prevAll('.k-i-none').length > 0 ? 'after' : 'before';\n                        } else {\n                            contents = dropHint.parent().contents();\n                            length = contents.length;\n                            dropHintElement = dropHint[0];\n                            for (i = 0; i < length; i++) {\n                                if (contents[i] === dropHintElement) {\n                                    break;\n                                }\n                                if (contents[i].nodeType === 3) {\n                                    isAfterText = true;\n                                }\n                            }\n                            return isAfterText ? 'after' : 'before';\n                        }\n                    }\n                });\n            },\n            sameLevel: function () {\n                return arguments[0].find('.' + classNames.iconHidden).length === arguments[1].find('.' + classNames.iconHidden).length;\n            },\n            insertAfter: function (nodeData, referenceNode) {\n                this.insertAction(nodeData, referenceNode, 1);\n            },\n            insertBefore: function (nodeData, referenceNode) {\n                this.insertAction(nodeData, referenceNode, 0);\n            },\n            insertAction: function (nodeData, referenceNode, indexOffset) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var parentIdField = dataSource._modelParentIdField();\n                var referenceNodeIndex;\n                var nodeDataIndex = dataSource.indexOf(nodeData);\n                var pageable = that._isPageable();\n                var originalDestIndex = dataSource._indexInChildrenMap(referenceNode);\n                var destIndex;\n                var childrenMap = dataSource._getChildrenMap() || {};\n                var parentId = nodeData[parentIdField];\n                that._unbindDataSource();\n                that._unbindDataChange();\n                if (pageable) {\n                    dataSource._removeFromChildrenMap(nodeData);\n                }\n                if (nodeData[parentIdField] != referenceNode[parentIdField]) {\n                    nodeData.set('parentId', referenceNode && referenceNode.parentId ? referenceNode.parentId : null);\n                }\n                dataSource._data.splice(nodeDataIndex, 1);\n                referenceNodeIndex = dataSource.indexOf(referenceNode);\n                destIndex = referenceNodeIndex + indexOffset;\n                if (pageable) {\n                    originalDestIndex += indexOffset;\n                    if (childrenMap[parentId].length <= originalDestIndex) {\n                        originalDestIndex = childrenMap[parentId].length;\n                    }\n                    dataSource._insertInChildrenMap(nodeData, originalDestIndex);\n                }\n                dataSource._data.splice(destIndex, 0, nodeData);\n                dataSource._destroyed.pop();\n                that._bindDataChange();\n                that._bindDataSource();\n                that.refresh();\n            },\n            _bindDataChange: function () {\n                var dataSource = this.dataSource;\n                if (dataSource._data && dataSource._changeHandler) {\n                    dataSource._data.bind(CHANGE, dataSource._changeHandler);\n                    dataSource._data.trigger(CHANGE);\n                }\n            },\n            _unbindDataChange: function () {\n                var dataSource = this.dataSource;\n                if (dataSource._data && dataSource._changeHandler) {\n                    dataSource._data.unbind(CHANGE, dataSource._changeHandler);\n                }\n            },\n            _bindDataSource: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                if (dataSource) {\n                    dataSource.bind(CHANGE, that._refreshHandler);\n                }\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, that._refreshHandler);\n                }\n            },\n            itemFor: function (model) {\n                if (typeof model == 'number') {\n                    model = this.dataSource.get(model);\n                }\n                return this.tbody.find('[' + kendo.attr('uid') + '=' + model.uid + ']');\n            },\n            _itemFor: function (model) {\n                var that = this;\n                var table = that.lockedContent ? that.lockedTable : that.table;\n                if (typeof model == 'number') {\n                    model = this.dataSource.get(model);\n                }\n                return table.find('[' + kendo.attr('uid') + '=' + model.uid + ']');\n            },\n            _scrollable: function () {\n                if (this.options.scrollable) {\n                    var scrollables = this.thead.closest('.k-grid-header-wrap');\n                    var lockedContent = $(this.lockedContent).on('DOMMouseScroll' + NS + ' mousewheel' + NS, proxy(this._wheelScroll, this));\n                    this.content.on('scroll' + NS, function () {\n                        kendo.scrollLeft(scrollables, this.scrollLeft);\n                        lockedContent.scrollTop(this.scrollTop);\n                    });\n                    var touchScroller = kendo.touchScroller(this.content);\n                    if (touchScroller && touchScroller.movable) {\n                        this._touchScroller = touchScroller;\n                        touchScroller.movable.bind('change', function (e) {\n                            kendo.scrollLeft(scrollables, -e.sender.x);\n                            if (lockedContent) {\n                                lockedContent.scrollTop(-e.sender.y);\n                            }\n                        });\n                    }\n                }\n            },\n            _wheelScroll: function (e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n                var delta = kendo.wheelDeltaY(e);\n                var lockedDiv = $(e.currentTarget);\n                if (delta) {\n                    if (lockedDiv[0].scrollHeight > lockedDiv[0].clientHeight && (lockedDiv[0].scrollTop < lockedDiv[0].scrollHeight - lockedDiv[0].clientHeight && delta < 0 || lockedDiv[0].scrollTop > 0 && delta > 0)) {\n                        e.preventDefault();\n                    }\n                    lockedDiv.one('wheel' + NS, false);\n                    this.content.scrollTop(this.content.scrollTop() + -delta);\n                }\n            },\n            _progress: function () {\n                var messages = this.options.messages;\n                if (!this.tbody.find('tr').length) {\n                    this._showStatus(kendo.template('<span class=\\'#= className #\\'></span> #: messages.loading #')({\n                        className: classNames.icon + ' ' + classNames.loading,\n                        messages: messages\n                    }));\n                }\n            },\n            _error: function (e) {\n                if (!this.dataSource.rootNodes().length) {\n                    this._render({ error: e });\n                }\n            },\n            refresh: function (e) {\n                var that = this;\n                e = e || {};\n                if (e.action == 'itemchange' && this.editor) {\n                    return;\n                }\n                if (this.trigger(DATABINDING)) {\n                    return;\n                }\n                var current = $(this.current());\n                var isCurrentInHeader = false;\n                var currentIndex;\n                this._cancelEditor();\n                this._render();\n                this._adjustHeight();\n                if (this.options.navigatable) {\n                    if (this._isActiveInTable() || this.editor) {\n                        isCurrentInHeader = current.is('th');\n                        currentIndex = Math.max(this.cellIndex(current), 0);\n                    }\n                    this._restoreCurrent(currentIndex, isCurrentInHeader);\n                }\n                if (that._checkBoxSelection) {\n                    that._deselectCheckRows(that.items(), true);\n                }\n                this.trigger(DATABOUND);\n            },\n            _angularFooters: function (command) {\n                var i, footer, aggregates;\n                var allAggregates = this.dataSource.aggregates();\n                var footerRows = this._footerItems();\n                for (i = 0; i < footerRows.length; i++) {\n                    footer = footerRows.eq(i);\n                    aggregates = allAggregates[footer.attr('data-parentId')];\n                    this._angularFooter(command, footer.find('td').get(), aggregates);\n                }\n            },\n            _angularFooter: function (command, cells, aggregates) {\n                var columns = this.columns;\n                this.angular(command, function () {\n                    return {\n                        elements: cells,\n                        data: map(columns, function (col) {\n                            return {\n                                column: col,\n                                aggregate: aggregates && aggregates[col.field]\n                            };\n                        })\n                    };\n                });\n            },\n            items: function () {\n                if (this._hasLockedColumns) {\n                    return this._items(this.tbody).add(this._items(this.lockedTable));\n                } else {\n                    return this._items(this.tbody);\n                }\n            },\n            _items: function (container) {\n                return container.find('tr[data-uid]').filter(function () {\n                    return !$(this).hasClass(classNames.footerTemplate);\n                });\n            },\n            _footerItems: function () {\n                var container = this.tbody;\n                if (this._hasLockedColumns) {\n                    container = container.add(this.lockedTable);\n                }\n                return container.find('tr').filter(function () {\n                    return $(this).hasClass(classNames.footerTemplate);\n                });\n            },\n            dataItems: function () {\n                var dataItems = kendo.ui.DataBoundWidget.fn.dataItems.call(this);\n                if (this._hasLockedColumns) {\n                    var n = dataItems.length, tmp = new Array(2 * n);\n                    for (var i = n; --i >= 0;) {\n                        tmp[i] = tmp[i + n] = dataItems[i];\n                    }\n                    dataItems = tmp;\n                }\n                return dataItems;\n            },\n            _showNoRecordsTemplate: function () {\n                var wrapper = '<div class=\"{0}\">{1}</div>';\n                var defaultTemplate = '<div class=\"k-grid-norecords-template\"{1}>{0}</div>';\n                var scrollableNoGridHeightStyles = this.options.scrollable && !this.wrapper[0].style.height ? ' style=\"margin:0 auto;position:static;\"' : '';\n                var template;\n                this._contentTree.render([]);\n                if (this._hasLockedColumns) {\n                    this._lockedContentTree.render([]);\n                }\n                template = kendo.format(defaultTemplate, this.options.messages.noRows, scrollableNoGridHeightStyles);\n                $(kendo.template(kendo.format(wrapper, NORECORDSCLASS, template))({})).insertAfter(this.table);\n            },\n            _showStatus: function (message) {\n                var status = this.element.find('.k-status');\n                var content = $(this.content).add(this.lockedContent);\n                if (!status.length) {\n                    status = $('<div class=\\'k-status\\' role=\\'alert\\' aria-live=\\'polite\\' />').appendTo(this.element);\n                }\n                this._contentTree.render([]);\n                if (this._hasLockedColumns) {\n                    this._lockedContentTree.render([]);\n                }\n                content.hide();\n                status.html(message);\n            },\n            _hideStatus: function () {\n                this.element.find('.k-status').remove();\n                this._hideNoRecordsTempalte();\n                $(this.content).add(this.lockedContent).show();\n            },\n            _hideNoRecordsTempalte: function () {\n                this.element.find('.' + NORECORDSCLASS).remove();\n            },\n            _adjustHeight: function () {\n                var that = this;\n                var element = this.element;\n                var contentWrap = element.find(DOT + classNames.gridContentWrap);\n                var header = element.find(DOT + classNames.gridHeader);\n                var toolbar = element.find(DOT + classNames.gridToolbar);\n                var status = element.find(DOT + classNames.status);\n                var pagerHeight = that._isPageable() && that.pager && that.pager.element.is(':visible') ? outerHeight(that.pager.element) : 0;\n                var height;\n                var scrollbar = kendo.support.scrollbar();\n                element.css(HEIGHT, this.options.height);\n                var isHeightSet = function (el) {\n                    var initialHeight, newHeight;\n                    if (el[0].style.height) {\n                        return true;\n                    } else {\n                        initialHeight = el.height();\n                    }\n                    el.height('auto');\n                    newHeight = el.height();\n                    el.height('');\n                    return initialHeight != newHeight;\n                };\n                if (isHeightSet(element)) {\n                    height = element.height() - outerHeight(header) - outerHeight(toolbar) - outerHeight(status) - pagerHeight;\n                    contentWrap.height(height);\n                    if (this._hasLockedColumns) {\n                        scrollbar = this.table[0].offsetWidth > this.table.parent()[0].clientWidth ? scrollbar : 0;\n                        this.lockedContent.height(height - scrollbar);\n                    }\n                }\n            },\n            _resize: function (size, force) {\n                this._applyLockedContainersWidth();\n                this._adjustHeight();\n                if (this.pager && this.pager.element) {\n                    this.pager.resize(force);\n                }\n            },\n            _minScreenSupport: function () {\n                var any = this.hideMinScreenCols();\n                if (any) {\n                    this.minScreenResizeHandler = proxy(this.hideMinScreenCols, this);\n                    $(window).on('resize', this.minScreenResizeHandler);\n                }\n            },\n            _iterateMinScreenCols: function (cols, screenWidth) {\n                var any = false;\n                for (var i = 0; i < cols.length; i++) {\n                    var col = cols[i];\n                    var minWidth = col.minScreenWidth;\n                    if (minWidth !== undefined && minWidth !== null) {\n                        any = true;\n                        if (minWidth > screenWidth) {\n                            this.hideColumn(col);\n                        } else {\n                            this.showColumn(col);\n                        }\n                    }\n                    if (!col.hidden && col.columns) {\n                        any = this._iterateMinScreenCols(col.columns, screenWidth) || any;\n                    }\n                }\n                return any;\n            },\n            hideMinScreenCols: function () {\n                var cols = this.columns, screenWidth = window.innerWidth > 0 ? window.innerWidth : screen.width;\n                return this._iterateMinScreenCols(cols, screenWidth);\n            },\n            destroy: function () {\n                this._destroyColumnAttachments();\n                DataBoundWidget.fn.destroy.call(this);\n                var dataSource = this.dataSource;\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n                dataSource.unbind(PROGRESS, this._progressHandler);\n                this._navigatableTables = null;\n                this._current = null;\n                if (this._resizeHandler) {\n                    $(window).off('resize' + NS, this._resizeHandler);\n                }\n                if (this._dragging) {\n                    this._dragging.destroy();\n                    this._dragging = null;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n                if (this.reorderable) {\n                    this.reorderable.destroy();\n                    this.reorderable = null;\n                }\n                if (this._draggableInstance && this._draggableInstance.element) {\n                    this._draggableInstance.destroy();\n                    this._draggableInstance = null;\n                }\n                if (this.selectable) {\n                    this.selectable.destroy();\n                }\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                    this._userEvents = null;\n                }\n                if (this.minScreenResizeHandler) {\n                    $(window).off('resize', this.minScreenResizeHandler);\n                }\n                this._destroyEditor();\n                this.element.off(NS);\n                if (this.wrapper) {\n                    this.wrapper.off(NS);\n                }\n                if (this._touchScroller) {\n                    this._touchScroller.destroy();\n                }\n                this._destroyPager();\n                if (dataSource) {\n                    dataSource._dataMaps = null;\n                }\n                this._autoExpandable = null;\n                this._refreshHandler = this._errorHandler = this._progressHandler = this._dataSourceFetchProxy = null;\n                this.thead = this.content = this.tbody = this.table = this.element = this.lockedHeader = this.lockedContent = null;\n                this._statusTree = this._headerTree = this._contentTree = this._lockedHeaderColsTree = this._lockedContentColsTree = this._lockedHeaderTree = this._lockedContentTree = null;\n                kendo.destroy(this.wrapper);\n            },\n            options: {\n                name: 'TreeList',\n                columns: [],\n                autoBind: true,\n                scrollable: true,\n                selectable: false,\n                sortable: false,\n                toolbar: null,\n                height: null,\n                columnMenu: false,\n                messages: {\n                    noRows: 'No records to display',\n                    loading: 'Loading...',\n                    requestFailed: 'Request failed.',\n                    retry: 'Retry',\n                    commands: {\n                        edit: 'Edit',\n                        update: 'Update',\n                        canceledit: 'Cancel',\n                        create: 'Add new record',\n                        createchild: 'Add child record',\n                        destroy: 'Delete',\n                        excel: 'Export to Excel',\n                        pdf: 'Export to PDF',\n                        search: 'Search...'\n                    }\n                },\n                excel: { hierarchy: true },\n                resizable: false,\n                search: false,\n                filterable: false,\n                editable: false,\n                reorderable: false,\n                pageable: false,\n                renderAllRows: true,\n                rowTemplate: '',\n                altRowTemplate: ''\n            },\n            events: [\n                CHANGE,\n                BEFORE_EDIT,\n                EDIT,\n                PAGE,\n                SAVE,\n                SAVE_CHANGES,\n                REMOVE,\n                EXPAND,\n                COLLAPSE,\n                DATABINDING,\n                DATABOUND,\n                CANCEL,\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n                FILTERMENUINIT,\n                ITEM_CHANGE,\n                CELL_CLOSE,\n                FILTERMENUOPEN,\n                COLUMNHIDE,\n                COLUMNSHOW,\n                COLUMNREORDER,\n                COLUMNRESIZE,\n                COLUMNMENUINIT,\n                COLUMNMENUOPEN,\n                COLUMNLOCK,\n                COLUMNUNLOCK\n            ],\n            getOptions: function () {\n                var options = this.options;\n                options.dataSource = null;\n                var result = extend(true, {}, this.options);\n                result.columns = kendo.deepExtend([], this.columns);\n                var dataSource = this.dataSource;\n                var initialData = dataSource.options.data && dataSource._data;\n                dataSource.options.data = null;\n                result.dataSource = $.extend(true, {}, dataSource.options);\n                dataSource.options.data = initialData;\n                result.dataSource.data = initialData;\n                result.dataSource.page = dataSource.page();\n                result.dataSource.filter = $.extend(true, {}, dataSource.filter());\n                result.dataSource.pageSize = dataSource.pageSize();\n                result.dataSource.sort = dataSource.sort();\n                result.dataSource.group = dataSource.group();\n                result.dataSource.aggregate = dataSource.aggregate();\n                if (result.dataSource.transport) {\n                    result.dataSource.transport.dataSource = null;\n                }\n                if (result.pageable && result.pageable.pageSize) {\n                    result.pageable.pageSize = dataSource.pageSize();\n                }\n                result.$angular = undefined;\n                return result;\n            },\n            setOptions: function (options) {\n                var currentOptions = this.getOptions();\n                kendo.deepExtend(currentOptions, options);\n                if (!options.dataSource) {\n                    currentOptions.dataSource = this.dataSource;\n                }\n                var wrapper = this.wrapper;\n                var events = this._events;\n                var element = this.element;\n                this.destroy();\n                this.options = null;\n                if (wrapper[0] !== element[0]) {\n                    wrapper.before(element);\n                    wrapper.remove();\n                }\n                element.empty();\n                this.init(element, currentOptions, events);\n                this._setEvents(currentOptions);\n            },\n            _destroyColumnAttachments: function () {\n                var that = this;\n                if (!that.thead) {\n                    return;\n                }\n                this.angular('cleanup', function () {\n                    return { elements: that.thead.get() };\n                });\n                that.thead.add(that.lockedHeader).find('th').each(function () {\n                    var th = $(this), filterMenu = th.data('kendoFilterMenu'), sortable = th.data('kendoColumnSorter'), columnMenu = th.data('kendoColumnMenu');\n                    if (filterMenu) {\n                        filterMenu.destroy();\n                    }\n                    if (sortable) {\n                        sortable.destroy();\n                    }\n                    if (columnMenu) {\n                        columnMenu.destroy();\n                    }\n                });\n            },\n            _toggle: function (model, expand) {\n                var that = this;\n                var defaultPromise = $.Deferred().resolve().promise();\n                var loaded = model.loaded();\n                if (that._isIncellEditable() && that.editor) {\n                    $(activeElement()).change();\n                    that.closeCell();\n                }\n                if (model._error) {\n                    model.expanded = false;\n                    model._error = undefined;\n                }\n                if (!loaded && model.expanded) {\n                    return defaultPromise;\n                }\n                if (typeof expand == 'undefined') {\n                    expand = !model.expanded;\n                }\n                model.expanded = expand;\n                function afterModelLoaded() {\n                    that._toggleData();\n                    if (that._isPageable()) {\n                        that.refresh();\n                    } else {\n                        that._render();\n                    }\n                    that._syncLockedContentHeight();\n                }\n                if (!loaded) {\n                    defaultPromise = this.dataSource.load(model).always(proxy(function () {\n                        afterModelLoaded();\n                    }, this));\n                }\n                afterModelLoaded();\n                return defaultPromise;\n            },\n            _toggleData: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._togglePageableData();\n                }\n            },\n            _togglePageableData: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                var data = dataSource._getData();\n                var result;\n                var queryOptions = dataSource._defaultPageableQueryOptions();\n                that._renderProgress(true);\n                var childrenMap = dataSource._getChildrenMap() || dataSource.childrenMap(dataSource._getData());\n                dataSource._processDataItemsState(data, childrenMap);\n                result = dataSource._processPageableQuery(data, queryOptions);\n                queryOptions.childrenMap = result.childrenMap;\n                queryOptions.filteredChildrenMap = result.filteredChildrenMap;\n                dataSource._aggregateResult = dataSource._calculateAggregates(result.dataToAggregate, queryOptions);\n                dataSource.view(result.data);\n                if (!dataSource.filter()) {\n                    dataSource._calculateCollapsedTotal();\n                }\n                that._refreshPager();\n                that._renderProgress(false);\n            },\n            _refreshPager: function () {\n                var pager = this.pager;\n                if (pager) {\n                    pager.refresh();\n                }\n            },\n            expand: function (row) {\n                return this._toggle(this.dataItem(row), true);\n            },\n            collapse: function (row) {\n                return this._toggle(this.dataItem(row), false);\n            },\n            _toggleChildren: function (e) {\n                var icon = $(e.target);\n                var model = this.dataItem(icon);\n                if (!model) {\n                    return;\n                }\n                var event = !model.expanded ? EXPAND : COLLAPSE;\n                if (!this.trigger(event, { model: model })) {\n                    this._toggle(model);\n                }\n                e.preventDefault();\n            },\n            _navigatable: function () {\n                var that = this;\n                if (!that.options.navigatable) {\n                    return;\n                }\n                var tables = that.table.add(that.lockedTable);\n                var headerTables = that.thead.parent().add($('>table', that.lockedHeader));\n                if (that.options.scrollable) {\n                    tables = tables.add(headerTables);\n                    headerTables.attr(TABINDEX, -1);\n                }\n                this._navigatableTables = tables;\n                tables.on(kendo.support.touch ? 'touchstart' + NS : 'mousedown' + NS, NAVROW + '>:visible', proxy(that._tableClick, that)).on('focus' + NS, proxy(that._tableFocus, that)).on('focusout' + NS, proxy(that._tableBlur, that)).on('keydown' + NS, proxy(that._tableKeyDown, that));\n            },\n            cellIndex: function (td) {\n                var lockedColumnOffset = 0;\n                if (this.lockedTable && !$.contains(this.lockedTable[0], td[0])) {\n                    lockedColumnOffset = leafColumns(lockedColumns(this.columns)).length;\n                }\n                return $(td).parent().children().index(td) + lockedColumnOffset;\n            },\n            _isActiveInTable: function () {\n                var active = kendo._activeElement();\n                if (!active) {\n                    return false;\n                }\n                return this.table[0] === active || $.contains(this.table[0], active) || this.lockedTable && (this.lockedTable[0] === active || $.contains(this.lockedTable[0], active));\n            },\n            _restoreCurrent: function (currentIndex, isCurrentInHeader) {\n                var rowIndex;\n                var row;\n                var td;\n                if (currentIndex === undefined || currentIndex < 0) {\n                    return;\n                }\n                if (this._current) {\n                    this._current.removeClass('k-state-focused');\n                }\n                if (isCurrentInHeader) {\n                    this.current(this.thead.find('th').eq(currentIndex));\n                } else {\n                    rowIndex = 0;\n                    currentIndex = 0;\n                    row = $();\n                    if (this.lockedTable) {\n                        row = this.lockedTable.find('>tbody>tr:visible').eq(rowIndex);\n                    }\n                    row = row.add(this.tbody.children().eq(rowIndex));\n                    td = row.find('>td:visible').eq(currentIndex);\n                    this.current(td);\n                }\n                if (this._current) {\n                    focusTable(this._current.closest('table')[0], true);\n                }\n            },\n            current: function (newCurrent) {\n                var current = this._current;\n                newCurrent = $(newCurrent);\n                if (newCurrent.length && (!current || current[0] !== newCurrent[0])) {\n                    this._updateCurrentAttr(current, newCurrent);\n                    this._scrollCurrent();\n                }\n                if (newCurrent && newCurrent.length) {\n                    this._lastCellIndex = newCurrent.parent().children(DATA_CELL).index(newCurrent);\n                }\n                return this._current;\n            },\n            _setCurrent: function (newCurrent) {\n                var that = this;\n                newCurrent = $(newCurrent);\n                if (newCurrent[0]) {\n                    that._current = newCurrent;\n                    that._updateCurrentAttr(that._current, newCurrent);\n                    that._scrollCurrent();\n                }\n                return that._current;\n            },\n            _scrollCurrent: function () {\n                var current = this._current;\n                var scrollable = this.options.scrollable;\n                if (!current || !scrollable) {\n                    return;\n                }\n                var row = current.parent();\n                var tableContainer = row.closest('table').parent();\n                var isInLockedContainer = tableContainer.is('.k-grid-content-locked,.k-grid-header-locked');\n                var isInContent = tableContainer.is('.k-grid-content-locked,.k-grid-content');\n                var scrollableContainer = $(this.content)[0];\n                if (isInContent) {\n                    this._scrollTo(this._relatedRow(row)[0], scrollableContainer);\n                }\n                if (this.lockedContent) {\n                    this.lockedContent[0].scrollTop = scrollableContainer.scrollTop;\n                }\n                if (!isInLockedContainer) {\n                    this._scrollTo(current[0], scrollableContainer);\n                }\n            },\n            _findCurrentCell: function () {\n                var that = this;\n                var current = that.current();\n                var elements = $(that.table).add(that.header).add(that.lockedTable).add(that.lockedHeader);\n                if (current && elements.find(current).length > 0) {\n                    return current;\n                } else {\n                    return elements.find(DOT + classNames.focused);\n                }\n            },\n            _scrollTo: function (element, container) {\n                var elementToLowercase = element.tagName.toLowerCase();\n                var isHorizontal = elementToLowercase === 'td' || elementToLowercase === 'th';\n                var table = $(element).closest('table')[0];\n                var elementOffsetDir = element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n                var containerScroll = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n                var containerOffsetDir = container[isHorizontal ? 'clientWidth' : 'clientHeight'];\n                var elementOffset = $(element).css('position') === 'relative' && isRtl && isHorizontal ? Math.abs(table.offsetLeft - element.offsetLeft) : element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n                var bottomDistance = elementOffset + elementOffsetDir;\n                var result = 0;\n                var ieCorrection = 0;\n                var firefoxCorrection = 0;\n                if (isRtl && isHorizontal) {\n                    if (browser.msie || browser.edge) {\n                        ieCorrection = table.offsetLeft;\n                    } else if (browser.mozilla || browser.webkit && browser.version > 85) {\n                        firefoxCorrection = table.offsetLeft - kendo.support.scrollbar();\n                    }\n                }\n                containerScroll = Math.abs(containerScroll + ieCorrection - firefoxCorrection);\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (bottomDistance > containerScroll + containerOffsetDir) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = bottomDistance - containerOffsetDir;\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                result = Math.abs(result + ieCorrection) + firefoxCorrection;\n                container[isHorizontal ? 'scrollLeft' : 'scrollTop'] = result;\n            },\n            _aria: function () {\n                var id = this.element.attr('id') || 'aria';\n                if (id) {\n                    this._elementId = id + '_active_element';\n                }\n            },\n            _currentDataIndex: function (table, current) {\n                var index = current.attr('data-index');\n                if (!index) {\n                    return undefined;\n                }\n                var lockedColumnsCount = lockedColumns(this.columns).length;\n                if (lockedColumnsCount && !table.closest('div').hasClass('k-grid-content-locked')[0]) {\n                    return index - lockedColumnsCount;\n                }\n                return index;\n            },\n            _prevVerticalCell: function (container, current) {\n                var cells;\n                var row = current.parent();\n                var rows = container.children(NAVROW);\n                var rowIndex = rows.index(row);\n                var index = this._currentDataIndex(container, current);\n                var cellSelector = DATA_CELL + ',' + FILTER_CELL;\n                if (index || current.hasClass('k-header')) {\n                    cells = parentColumnsCells(current);\n                    return cells.eq(cells.length - 2);\n                }\n                index = Math.max(row.children(cellSelector).index(current), this._lastCellIndex || 0);\n                if (row.hasClass('k-filter-row')) {\n                    return leafDataCells(container).filter(isCellVisible).eq(index);\n                }\n                if (rowIndex == -1) {\n                    row = container.find('tr.k-filter-row:visible');\n                    if (!row[0]) {\n                        return leafDataCells(container).filter(isCellVisible).eq(index);\n                    }\n                } else {\n                    row = rowIndex === 0 ? $() : rows.eq(rowIndex - 1);\n                }\n                cells = row.children(cellSelector);\n                if (cells.length > index) {\n                    return cells.eq(index);\n                }\n                return cells.eq(0);\n            },\n            _nextVerticalCell: function (container, current) {\n                var cells;\n                var row = current.parent();\n                var rows = container.children(NAVROW);\n                var rowIndex = rows.index(row);\n                var index = this._currentDataIndex(container, current);\n                var cellSelector = DATA_CELL + ',' + FILTER_CELL;\n                if (rowIndex != -1 && index === undefined && current.hasClass('k-header')) {\n                    return childColumnsCells(current).eq(1);\n                }\n                index = index ? parseInt(index, 10) : row.children(cellSelector).index(current);\n                index = Math.max(index, this._lastCellIndex || 0);\n                if (rowIndex == -1) {\n                    row = rows.eq(0);\n                } else {\n                    row = rows.eq(rowIndex + current[0].rowSpan);\n                }\n                var tmpIndex = index;\n                if (this._currentDataIndex(container, current) !== undefined) {\n                    var currentRowCells = row.children(':not(.k-group-cell):not(.k-hierarchy-cell)');\n                    var hiddenColumns = currentRowCells.filter(':hidden');\n                    for (var idx = 0, length = hiddenColumns.length; idx < length; idx++) {\n                        if (currentRowCells.index(hiddenColumns[idx]) < index) {\n                            tmpIndex--;\n                        }\n                    }\n                }\n                index = tmpIndex;\n                cells = row.children(cellSelector);\n                if (cells.length > index) {\n                    return cells.eq(index);\n                }\n                return cells.eq(0);\n            },\n            _verticalContainer: function (container, up) {\n                var table = container.parent();\n                var length = this._navigatableTables.length;\n                var step = Math.floor(length / 2);\n                var index = inArray(table[0], this._navigatableTables);\n                if (up) {\n                    step *= -1;\n                }\n                index += step;\n                if (index >= 0 || index < length) {\n                    table = this._navigatableTables.eq(index);\n                }\n                return table.find(up ? 'thead' : 'tbody');\n            },\n            _updateCurrentAttr: function (current, next) {\n                var headerId = $(current).data('headerId');\n                $(current).removeClass(classNames.focused).closest('table').removeAttr('aria-activedescendant');\n                if (headerId) {\n                    headerId = headerId.replace(this._elementId, '');\n                    $(current).attr('id', headerId);\n                } else {\n                    $(current).removeAttr('id');\n                }\n                next.data('headerId', next.attr('id')).attr('id', this._elementId).addClass(classNames.focused).closest('table').attr('aria-activedescendant', this._elementId);\n                this._current = next;\n            },\n            _tableKeyDown: function (e) {\n                var handled = false;\n                var current = this.current();\n                var target = $(e.target);\n                var canHandle = !e.isDefaultPrevented() && !target.is(':button,a,:input,a>.k-icon');\n                current = current ? current : $(this.lockedTable).add(this.table).find(NAVROW + ' > td:visible').first();\n                if (canHandle && e.keyCode == keys.UP) {\n                    handled = this._moveUp(current, e.shiftKey);\n                }\n                if (canHandle && e.keyCode == keys.DOWN) {\n                    handled = this._moveDown(current, e.shiftKey);\n                }\n                if (canHandle && e.keyCode == (isRtl ? keys.LEFT : keys.RIGHT)) {\n                    if (e.altKey) {\n                        handled = this._handleExpand(current);\n                    } else {\n                        handled = this._moveRight(current);\n                    }\n                }\n                if (canHandle && e.keyCode == (isRtl ? keys.RIGHT : keys.LEFT)) {\n                    if (e.altKey) {\n                        handled = this._handleCollapse(current);\n                    } else {\n                        handled = this._moveLeft(current);\n                    }\n                }\n                if (canHandle && e.keyCode == keys.PAGEDOWN) {\n                    handled = this._handlePageDown();\n                }\n                if (canHandle && e.keyCode == keys.PAGEUP) {\n                    handled = this._handlePageUp();\n                }\n                if (e.keyCode == keys.ENTER || e.keyCode == keys.F2) {\n                    handled = this._handleEnterKey(current, e.currentTarget, target);\n                }\n                if (e.keyCode == keys.ESC) {\n                    handled = this._handleEscKey(current, e.currentTarget);\n                }\n                if (canHandle && e.keyCode == keys.HOME) {\n                    handled = this._handleHome(current, e.ctrlKey);\n                }\n                if (canHandle && e.keyCode == keys.END) {\n                    handled = this._handleEnd(current, e.ctrlKey);\n                }\n                if (e.keyCode == keys.TAB) {\n                    handled = this._handleTabKey(current, e.currentTarget, e.shiftKey);\n                }\n                if (handled) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            },\n            _handleExpand: function (current) {\n                var that = this;\n                var row = current.parent();\n                var model = that.dataItem(row);\n                if (current.hasClass('k-header')) {\n                    return false;\n                }\n                if (model && model.hasChildren && !model.expanded && !that.trigger(EXPAND, { model: model })) {\n                    this.expand(row);\n                    return true;\n                }\n                return false;\n            },\n            _handleCollapse: function (current) {\n                var that = this;\n                var row = current.parent();\n                var model = that.dataItem(row);\n                if (current.hasClass('k-header')) {\n                    return false;\n                }\n                if (model && model.hasChildren && model.expanded && !that.trigger(COLLAPSE, { model: model })) {\n                    that.collapse(row);\n                    return true;\n                }\n                return false;\n            },\n            _handleHome: function (current, ctrl) {\n                var row = current.parent();\n                var rowContainer = row.parent();\n                var isInLockedTable = this.lockedTable && this.lockedTable.children('tbody')[0] === rowContainer[0];\n                var isInBody = rowContainer[0] === this.tbody[0];\n                var prev;\n                if (ctrl) {\n                    if (this.lockedTable) {\n                        prev = this.lockedTable.find(NAVROW + ' > td:visible').first();\n                    } else {\n                        prev = this.table.find(NAVROW + ' > td:visible').first();\n                    }\n                } else if (isInBody || isInLockedTable) {\n                    if (isInBody && this.lockedTable) {\n                        row = this._relatedRow(row);\n                    }\n                    prev = row.children(NAVCELL).first();\n                }\n                if (prev && prev.length) {\n                    this.current(prev);\n                    return true;\n                }\n            },\n            _handleEnd: function (current, ctrl) {\n                var row = current.parent();\n                var rowContainer = row.parent();\n                var isInLockedTable = this.lockedTable && this.lockedTable.children('tbody')[0] === rowContainer[0];\n                var isInBody = rowContainer[0] === this.tbody[0];\n                var next;\n                if (ctrl) {\n                    next = this.table.find(ITEMROW).last().children(NAVCELL).last();\n                } else if (isInBody || isInLockedTable) {\n                    if (!isInBody && this.lockedTable) {\n                        row = this._relatedRow(row);\n                    }\n                    next = row.children(NAVCELL).last();\n                }\n                if (next && next.length) {\n                    this.current(next);\n                    return true;\n                }\n            },\n            _handlePageDown: function () {\n                var that = this;\n                if (!that._isPageable()) {\n                    return false;\n                }\n                that.dataSource._restorePageSizeAfterAddChild();\n                that.dataSource.page(that.dataSource.page() + 1);\n                return true;\n            },\n            _handlePageUp: function () {\n                var that = this;\n                if (!that._isPageable()) {\n                    return false;\n                }\n                that.dataSource._restorePageSizeAfterAddChild();\n                that.dataSource.page(that.dataSource.page() - 1);\n                return true;\n            },\n            _handleEscKey: function (current, currentTable) {\n                var active = kendo._activeElement();\n                var currentIndex;\n                var that = this;\n                var row;\n                var rowIndex;\n                var cellIndex;\n                var tbody;\n                if (!current || !current.parent().hasClass('k-grid-edit-row')) {\n                    if (current.has(active).length) {\n                        focusTable(currentTable, true);\n                        return true;\n                    }\n                    return false;\n                }\n                if (that._isIncellEditable()) {\n                    row = current.parent();\n                    cellIndex = current.index();\n                    rowIndex = row.index();\n                    tbody = row.closest('tbody');\n                    that.closeCell(true);\n                    that._setCurrent(tbody.children().eq(rowIndex).children().eq(cellIndex));\n                } else {\n                    currentIndex = $(current).parent().index();\n                    if (active) {\n                        active.blur();\n                    }\n                    this.cancelRow();\n                    if (currentIndex >= 0) {\n                        this.current(this.items().eq(currentIndex).children(NAVCELL).first());\n                    }\n                }\n                focusTable(currentTable, true);\n                return true;\n            },\n            _handleEnterKey: function (current, currentTable, target) {\n                var editable = this.options.editable;\n                var container = target.closest('[role=gridcell]');\n                var focusable;\n                if (!target.is('table') && !$.contains(current[0], target[0])) {\n                    current = container;\n                }\n                if (current.is('th')) {\n                    current.find('.k-link').click();\n                    return true;\n                }\n                focusable = current.find(':kendoFocusable').first();\n                if (focusable[0] && current.hasClass('k-state-focused')) {\n                    focusable.trigger('focus');\n                    return true;\n                }\n                if (editable && !target.is(':button,.k-button,textarea')) {\n                    if (!container[0]) {\n                        container = current;\n                    }\n                    this._handleEditing(container, false, currentTable);\n                    return true;\n                }\n                return false;\n            },\n            _handleTabKey: function (current, currentTable, shiftKey) {\n                var that = this;\n                var incellEditing = that.options.editable && that._isIncellEditable();\n                var cell;\n                if (!incellEditing || current.is('th')) {\n                    return false;\n                }\n                cell = $(activeElement()).closest(DOT + classNames.editCell);\n                if (cell[0] && cell[0] !== current[0]) {\n                    current = cell;\n                }\n                cell = that._tabNext(current, currentTable, shiftKey);\n                if (cell.length) {\n                    that._handleEditing(current, cell, cell.closest(TABLE));\n                    return true;\n                } else {\n                    that._preventPageSizeRestore = false;\n                }\n                return false;\n            },\n            _tabNext: function (current, currentTable, back) {\n                var that = this;\n                var switchRow = true;\n                var next = back ? current.prevAll(DATA_CELL).first() : current.nextAll(':visible').first();\n                if (!next.length) {\n                    next = current.parent();\n                    if (that.lockedTable) {\n                        switchRow = back && currentTable == that.lockedTable[0] || !back && currentTable == that.table[0];\n                        next = that._relatedRow(next);\n                    }\n                    if (switchRow) {\n                        next = next[back ? 'prevAll' : 'nextAll']('tr:not(.k-grouping-row):not(.k-detail-row):visible').first();\n                    }\n                    if (back) {\n                        next = next.children(DATA_CELL).last();\n                    } else {\n                        next = next.children(DATA_CELL).first();\n                    }\n                    that.dataSource._restorePageSizeAfterAddChild();\n                }\n                return next;\n            },\n            _handleEditing: function (current, next, table) {\n                var that = this, active = $(kendo._activeElement()), isIE = browser.msie, editContainer, focusable, isEdited;\n                var editable = that.options.editable && that.options.editable.update !== false;\n                var incellEditing = that._isIncellEditable();\n                var nextFocusableCellRowIndex = $(next).parents('tr').index();\n                var nextFocusableCellIndex = $(next).index();\n                var currentFocusedCellRowIndex = $(current).parents('tr').index();\n                var currentFocusedCellIndex = current.index();\n                var editedCell;\n                table = $(table);\n                if (incellEditing) {\n                    isEdited = current.hasClass(classNames.editCell);\n                } else {\n                    isEdited = current.parent().hasClass('k-grid-edit-row');\n                }\n                if (that.editor) {\n                    editContainer = that.editor.wrapper;\n                    if (editContainer && $.contains(editContainer[0], active[0])) {\n                        if (browser.opera) {\n                            active.trigger('blur').change().triggerHandler('blur');\n                        } else {\n                            active.trigger('blur');\n                            if (isIE) {\n                                active.trigger('blur');\n                            }\n                        }\n                    }\n                    if (!that.editor) {\n                        focusTable(table);\n                        return;\n                    }\n                    if (that.editor.end()) {\n                        if (incellEditing) {\n                            that._preventPageSizeRestore = true;\n                            that.closeCell();\n                            that._preventPageSizeRestore = false;\n                            if ($(that.table).add(that.lockedTable).find(DOT + classNames.editCell).length === 0) {\n                                that.current(table.find('tbody').children().eq(currentFocusedCellRowIndex).children().eq(currentFocusedCellIndex));\n                            }\n                        } else {\n                            that.saveRow();\n                            isEdited = true;\n                        }\n                    } else {\n                        if (incellEditing) {\n                            that.current(editContainer);\n                        } else {\n                            that.current(editContainer.children().filter(NAVCELL).first());\n                        }\n                        focusable = editContainer.find(':kendoFocusable').first()[0];\n                        if (focusable) {\n                            focusable.focus();\n                        }\n                        return;\n                    }\n                }\n                next = $(next).length && table.find(next).length === 0 ? table.find('tbody').children().eq(nextFocusableCellRowIndex).children().eq(nextFocusableCellIndex) : next;\n                if (next) {\n                    that.current(next);\n                }\n                focusTable(table, true);\n                if (!editable) {\n                    return;\n                }\n                if (!isEdited && !next || next) {\n                    var currentIndex = that.current().index();\n                    if (incellEditing) {\n                        that.editCell(that.current());\n                        editedCell = $(that.table).add(that.lockedTable).find(DOT + classNames.editCell)[0];\n                        if (editedCell) {\n                            that._current = $(editedCell);\n                        } else {\n                            that.current(that._findCurrentCell());\n                        }\n                    } else {\n                        that.editRow(that.current().parent());\n                        that.current(that.editor.wrapper.children().eq(currentIndex));\n                        that.current().removeClass('k-state-focused');\n                    }\n                } else {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                }\n            },\n            _moveRight: function (current) {\n                var next = current.nextAll(NAVCELL).first();\n                var row = current.parent();\n                var rowIndex = row.index();\n                if (current.hasClass('k-header') || row.is('.k-filter-row')) {\n                    next = current.nextAll(NAVHEADER).first();\n                    if (!next[0] && this.lockedTable && current.closest('table')[0] === this.lockedHeader.find('table')[0]) {\n                        next = this.thead.find('tr').eq(rowIndex).find(NAVHEADER).first();\n                    }\n                }\n                if (!next[0] && this.lockedTable && current.closest('table')[0] === this.lockedTable[0]) {\n                    next = this._relatedRow(row).children(NAVCELL).first();\n                }\n                if (next[0] && next[0] !== current[0]) {\n                    focusTable(next.closest('table'), true);\n                }\n                this.current(next);\n                return true;\n            },\n            _moveLeft: function (current) {\n                var prev = current.prevAll(NAVCELL).first();\n                var row = current.parent();\n                var rowIndex = row.index();\n                if (current.hasClass('k-header') || row.is('.k-filter-row')) {\n                    prev = current.prevAll(NAVHEADER).first();\n                    if (!prev[0] && this.lockedTable && current.closest('table')[0] === this.thead.parent()[0]) {\n                        prev = this.lockedHeader.find('>table>thead>tr').eq(rowIndex).children(NAVHEADER).last();\n                    }\n                }\n                if (!prev[0] && this.lockedTable && current.closest('table')[0] === this.table[0]) {\n                    prev = this._relatedRow(row).children(NAVCELL).last();\n                }\n                if (prev[0] && prev[0] !== current[0]) {\n                    focusTable(prev.closest('table'), true);\n                }\n                this.current(prev);\n                return true;\n            },\n            _moveUp: function (current, shiftKey) {\n                var container = current.parent().parent();\n                var prev;\n                if (shiftKey) {\n                    prev = current.parent();\n                    prev = prev.prevAll(ITEMROW).first();\n                    prev = current.parent().is(ITEMROW) ? prev.children().eq(current.index()) : prev.children(DATA_CELL).last();\n                } else {\n                    prev = this._prevVerticalCell(container, current);\n                    if (!prev[0]) {\n                        this._lastCellIndex = 0;\n                        container = this._verticalContainer(container, true);\n                        prev = this._prevVerticalCell(container, current);\n                        if (prev[0]) {\n                            focusTable(container.parent(), true);\n                        }\n                    }\n                }\n                var tmp = this._lastCellIndex || 0;\n                this.current(prev);\n                this._lastCellIndex = tmp;\n                return true;\n            },\n            _moveDown: function (current, shiftKey) {\n                var container = current.parent().parent();\n                var next;\n                if (shiftKey) {\n                    next = current.parent();\n                    next = next.nextAll(ITEMROW).first();\n                    next = current.parent().is(ITEMROW) ? next.children().eq(current.index()) : next.children(DATA_CELL).first();\n                } else {\n                    next = this._nextVerticalCell(container, current);\n                    if (!next[0]) {\n                        this._lastCellIndex = 0;\n                        container = this._verticalContainer(container);\n                        next = this._nextVerticalCell(container, current);\n                        if (next[0]) {\n                            focusTable(container.parent(), true);\n                        }\n                    }\n                }\n                var tmp = this._lastCellIndex || 0;\n                this.current(next);\n                this._lastCellIndex = tmp;\n                return true;\n            },\n            _tableClick: function (e) {\n                var currentTarget = $(e.currentTarget), isHeader = currentTarget.is('th'), table = this.table.add(this.lockedTable), headerTable = this.thead.parent().add($('>table', this.lockedHeader)), isInput = isInputElement(e.target), currentTable = currentTarget.closest('table')[0];\n                if (kendo.support.touch) {\n                    return;\n                }\n                if (currentTable !== table[0] && currentTable !== table[1] && currentTable !== headerTable[0] && currentTable !== headerTable[1]) {\n                    return;\n                }\n                if (this.options.navigatable) {\n                    this.current(currentTarget);\n                }\n                if (isHeader || !isInput) {\n                    setTimeout(function () {\n                        if (!isInputElement(kendo._activeElement()) || !$.contains(currentTable, kendo._activeElement())) {\n                            focusTable(currentTable, true);\n                        }\n                    });\n                }\n                if (isHeader) {\n                    e.preventDefault();\n                }\n            },\n            _setTabIndex: function (table) {\n                this._navigatableTables.attr(TABINDEX, -1);\n                table.attr(TABINDEX, 0);\n            },\n            _tableFocus: function (e) {\n                var current = this.current();\n                var table = $(e.currentTarget);\n                if (current && current.is(':visible')) {\n                    current.addClass(classNames.focused);\n                } else {\n                    this.current(table.find(NAVROW + ' > td:visible').first());\n                }\n                this._setTabIndex(table);\n            },\n            _tableBlur: function () {\n                var current = this.current();\n                if (current) {\n                    current.removeClass(classNames.focused);\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                var retryButton = DOT + classNames.retry;\n                that._userEvents = new kendo.UserEvents(that.element, {\n                    press: proxy(that._onPress, that),\n                    allowSelection: true\n                });\n                this.element.on(CLICK + NS, retryButton, this._dataSourceFetchProxy).on(CLICK + NS, '.k-button[data-command]', proxy(this._commandClick, this)).on(INPUT + NS, '.k-grid-search input', proxy(this._search, this));\n                this._attachCellEditingEventHandlers();\n            },\n            _onPress: function (e) {\n                var that = this;\n                var icons = DOT + classNames.iconCollapse + ', .' + classNames.iconExpand + ', .' + classNames.refresh;\n                if ($(e.event.target).is(icons)) {\n                    that._toggleChildren.call(that, e.event);\n                }\n            },\n            _attachCellEditingEventHandlers: function () {\n                var that = this;\n                var editable = that.options.editable;\n                var selectable = that.selectable && that.selectable.options.multiple;\n                var closeCell = function (e) {\n                    var target = activeElement();\n                    var editor = that.editor || {};\n                    var cell = editor.element;\n                    if (cell && !$.contains(cell[0], target) && cell[0] !== target && !$(target).closest('.k-animation-container').length) {\n                        if (editor.end()) {\n                            if (!e.relatedTarget && that._isPageable() && !isUndefined(that.dataSource._addChildPageSize)) {\n                                that._preventPageSizeRestore = false;\n                            }\n                            that.closeCell();\n                        }\n                    }\n                    that._preventPageSizeRestore = false;\n                };\n                if (that._isIncellEditable() && editable.update !== false) {\n                    that.wrapper.on(CLICK + NS, 'tr:not(.k-grouping-row) > td', function (e) {\n                        var td = $(this), isLockedCell = that.lockedTable && td.closest('table')[0] === that.lockedTable[0];\n                        if (td.hasClass(classNames.editCell) || td.has('a.k-grid-delete').length || td.has('button.k-grid-delete').length || td.closest('tbody')[0] !== that.tbody[0] && !isLockedCell || $(e.target).is(':input') || $(e.target).hasClass(classNames.iconExpand) || $(e.target).hasClass(classNames.iconCollapse)) {\n                            if (!that.editor) {\n                                that.dataSource._restorePageSizeAfterAddChild();\n                            }\n                            that._preventPageSizeRestore = false;\n                            return;\n                        }\n                        if (that.editor) {\n                            if (that.editor.end()) {\n                                if (selectable) {\n                                    $(activeElement()).trigger('blur');\n                                }\n                                that.closeCell();\n                                that.editCell(td);\n                            }\n                        } else {\n                            that.editCell(td);\n                        }\n                    }).on('mousedown' + NS, 'tr:not(.k-grouping-row) > td', function (e) {\n                        if (that.editor && that._isPageable() && !isUndefined(that.dataSource._addChildPageSize)) {\n                            that._preventPageSizeRestore = $(e.target).parents(DOT + classNames.editRow).length > 0;\n                        } else {\n                            that._preventPageSizeRestore = false;\n                        }\n                    }).on('focusin' + NS, function () {\n                        if (!$.contains(this, activeElement())) {\n                            clearTimeout(that._closeCellTimeout);\n                            that._closeCellTimeout = null;\n                        }\n                    }).on('focusout' + NS, function (e) {\n                        that._closeCellTimeout = setTimeout(function () {\n                            closeCell(e);\n                        }, 1);\n                    });\n                }\n            },\n            _commandByName: function (name) {\n                var columns = this.columns;\n                var toolbar = Array.isArray(this.options.toolbar) ? this.options.toolbar : [];\n                var i, j, commands, currentName;\n                name = name.toLowerCase();\n                if (defaultCommands[name]) {\n                    return defaultCommands[name];\n                }\n                for (i = 0; i < columns.length; i++) {\n                    commands = columns[i].command;\n                    if (commands) {\n                        for (j = 0; j < commands.length; j++) {\n                            currentName = commands[j].name;\n                            if (!currentName) {\n                                continue;\n                            }\n                            if (currentName.toLowerCase() == name) {\n                                return commands[j];\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < toolbar.length; i++) {\n                    currentName = toolbar[i].name;\n                    if (!currentName) {\n                        continue;\n                    }\n                    if (currentName.toLowerCase() == name) {\n                        return toolbar[i];\n                    }\n                }\n            },\n            _commandClick: function (e) {\n                var button = $(e.currentTarget);\n                var commandName = button.attr('data-command');\n                var command = this._commandByName(commandName);\n                var row = button.parentsUntil(this.wrapper, 'tr');\n                row = row.length ? row : undefined;\n                if (command) {\n                    if (command.methodName) {\n                        this[command.methodName](row);\n                    } else if (command.click) {\n                        command.click.call(this, e);\n                    }\n                    e.preventDefault();\n                }\n            },\n            _search: function (e) {\n                var that = this;\n                var input = e.currentTarget;\n                clearTimeout(that._searchTimeOut);\n                that._searchTimeOut = setTimeout(function () {\n                    that._searchTimeOut = null;\n                    var options = that.options;\n                    var searchFields = options.search ? options.search.fields : null;\n                    var expression = {\n                        filters: [],\n                        logic: 'or'\n                    };\n                    var value = input.value;\n                    if (!searchFields) {\n                        searchFields = getColumnsFields(options.columns);\n                    }\n                    if (value) {\n                        for (var i = 0; i < searchFields.length; i++) {\n                            expression.filters.push({\n                                field: searchFields[i],\n                                operator: 'contains',\n                                value: value\n                            });\n                        }\n                    } else {\n                        expression = {};\n                    }\n                    that.dataSource.filter(expression);\n                }, 300);\n            },\n            _ensureExpandableColumn: function () {\n                if (this._autoExpandable) {\n                    delete this._autoExpandable.expandable;\n                }\n                var visibleColumns = grep(this.columns, not(is('hidden')));\n                visibleColumns = grep(visibleColumns, not(is('command')));\n                visibleColumns = grep(visibleColumns, not(is('selectable')));\n                var expandableColumns = grep(visibleColumns, is('expandable'));\n                if (this.columns.length && !expandableColumns.length) {\n                    this._autoExpandable = visibleColumns[0];\n                    visibleColumns[0].expandable = true;\n                }\n            },\n            _columns: function () {\n                var that = this;\n                var columns = this.options.columns || [];\n                this.columns = map(columns, function (column) {\n                    column = typeof column === 'string' ? { field: column } : column;\n                    return extend({ encoded: true }, column);\n                });\n                var lockedCols = lockedColumns(columns);\n                if (lockedCols.length > 0) {\n                    if (this.options.rowTemplate || this.options.altRowTemplate) {\n                        throw new Error('Having both row template and locked columns is not supported');\n                    }\n                    this._hasLockedColumns = true;\n                    this.columns = lockedCols.concat(nonLockedColumns(this.columns));\n                }\n                this.columns = normalizeColumns(this.columns);\n                this._ensureExpandableColumn();\n                this._columnTemplates();\n                this._columnAttributes();\n                if ($.grep(leafColumns(that.columns), function (col) {\n                        if (col.selectable) {\n                            that._includeChildren = col.includeChildren;\n                        }\n                        return col.selectable;\n                    }).length) {\n                    that._checkBoxSelection = true;\n                    that.element.on(CLICK + NS, 'tbody > tr ' + CHECKBOXINPUT, proxy(that._checkboxClick, that));\n                    that.element.on(CLICK + NS, 'thead > tr ' + CHECKBOXINPUT, proxy(that._headerCheckboxClick, that));\n                }\n            },\n            _columnTemplates: function () {\n                var idx, length, column;\n                var columns = leafColumns(this.columns);\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.template) {\n                        column.template = kendo.template(column.template);\n                    }\n                    if (this._isIncellEditable()) {\n                        column.dirtyCellTemplate = this._createDirtyColumnTemplate(column);\n                        column.dirtyIndicatorTemplate = this._createIndicatorTemplate(column);\n                    }\n                    if (column.headerTemplate) {\n                        column.headerTemplate = kendo.template(column.headerTemplate);\n                    }\n                    if (column.footerTemplate) {\n                        column.footerTemplate = kendo.template(column.footerTemplate);\n                    }\n                }\n            },\n            _columnAttributes: function () {\n                var idx, length;\n                var columns = this.columns;\n                function convertStyle(attr) {\n                    var properties, i, declaration;\n                    if (attr && attr.style && attr.style.split) {\n                        properties = attr.style.split(';');\n                        attr.style = {};\n                        for (i = 0; i < properties.length; i++) {\n                            declaration = properties[i].split(':');\n                            var name = kendo.trim(declaration[0]);\n                            if (name) {\n                                attr.style[$.camelCase(name)] = kendo.trim(declaration[1]);\n                            }\n                        }\n                    }\n                }\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    convertStyle(columns[idx].attributes);\n                    convertStyle(columns[idx].headerAttributes);\n                }\n            },\n            _clearSortClasses: function () {\n                var that = this;\n                if (that.content) {\n                    that.content.find('col:not(.k-group-col):not(.k-hierarchy-col)').removeClass('k-sorted');\n                }\n                if (that.lockedContent) {\n                    that.lockedContent.find('col:not(.k-group-col):not(.k-hierarchy-col)').removeClass('k-sorted');\n                }\n            },\n            _layout: function () {\n                var columns = this.columns;\n                var element = this.element;\n                var layout = '';\n                this.wrapper = element.addClass(classNames.wrapper);\n                layout = '<div class=\\'#= gridHeader #\\'>';\n                if (this._hasLockedColumns) {\n                    layout += '<div class=\\'k-grid-header-locked\\'>' + '<table role=\\'grid\\'>' + '<colgroup></colgroup>' + '<thead role=\\'rowgroup\\'></thead>' + '</table>' + '</div>';\n                }\n                layout += '<div class=\\'#= gridHeaderWrap #\\'>' + '<table role=\\'grid\\'>' + '<colgroup></colgroup>' + '<thead role=\\'rowgroup\\'></thead>' + '</table>' + '</div>' + '</div>';\n                if (this._hasLockedColumns) {\n                    layout += '<div class=\\'k-grid-content-locked\\'>' + '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<tbody></tbody>' + '</table>' + '</div>';\n                }\n                layout += '<div class=\\'#= gridContentWrap # k-auto-scrollable\\'>' + '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<tbody></tbody>' + '</table>' + '</div>';\n                if (!this.options.scrollable) {\n                    layout = '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<thead class=\\'#= gridHeader #\\' role=\\'rowgroup\\'></thead>' + '<tbody></tbody>' + '</table>';\n                }\n                if (this.options.toolbar) {\n                    layout = '<div class=\\'#= toolbar # #= gridToolbar #\\'></div>' + layout;\n                }\n                element.append(kendo.template(layout)(classNames) + '<div class=\\'k-status\\' role=\\'alert\\' aria-live=\\'polite\\'></div>');\n                this.toolbar = element.find(DOT + classNames.gridToolbar);\n                var header = element.find(DOT + classNames.gridHeader).find('thead').addBack().filter('thead');\n                this.thead = header.last();\n                if (this.options.scrollable) {\n                    var rtl = kendo.support.isRtl(element);\n                    element.find('div.' + classNames.gridHeader).css(rtl ? 'padding-left' : 'padding-right', kendo.support.scrollbar());\n                }\n                var content = element.find(DOT + classNames.gridContentWrap);\n                if (!content.length) {\n                    content = element;\n                } else {\n                    this.content = content;\n                }\n                this.table = content.find('>table');\n                this.tbody = this.table.find('>tbody');\n                if (this._hasLockedColumns) {\n                    this.lockedHeader = header.first().closest('.k-grid-header-locked');\n                    this.lockedContent = element.find('.k-grid-content-locked');\n                    this.lockedTable = this.lockedContent.children();\n                }\n                this._initVirtualTrees();\n                this._renderCols();\n                this._renderHeader();\n                this.angular('compile', function () {\n                    return {\n                        elements: header.find('th.k-header').get(),\n                        data: map(columns, function (col) {\n                            return { column: col };\n                        })\n                    };\n                });\n            },\n            _initVirtualTrees: function () {\n                this._headerColsTree = new kendoDom.Tree(this.thead.prev()[0]);\n                this._contentColsTree = new kendoDom.Tree(this.tbody.prev()[0]);\n                this._headerTree = new kendoDom.Tree(this.thead[0]);\n                this._contentTree = new kendoDom.Tree(this.tbody[0]);\n                this._statusTree = new kendoDom.Tree(this.element.children('.k-status')[0]);\n                if (this.lockedHeader) {\n                    this._lockedHeaderColsTree = new kendoDom.Tree(this.lockedHeader.find('colgroup')[0]);\n                    this._lockedContentColsTree = new kendoDom.Tree(this.lockedTable.find('>colgroup')[0]);\n                    this._lockedHeaderTree = new kendoDom.Tree(this.lockedHeader.find('thead')[0]);\n                    this._lockedContentTree = new kendoDom.Tree(this.lockedTable.find('>tbody')[0]);\n                }\n            },\n            _toolbar: function () {\n                var options = this.options.toolbar;\n                var toolbar = this.toolbar;\n                if (!options) {\n                    return;\n                }\n                if (Array.isArray(options)) {\n                    var buttons = this._buildCommands(options);\n                    new kendoDom.Tree(toolbar[0]).render(buttons);\n                } else {\n                    toolbar.append(kendo.template(options)({}));\n                }\n                this.angular('compile', function () {\n                    return { elements: toolbar.get() };\n                });\n            },\n            _lockedColumns: function () {\n                return grep(this.columns, is('locked'));\n            },\n            _nonLockedColumns: function () {\n                return grep(this.columns, not(is('locked')));\n            },\n            _templateColumns: function () {\n                return grep(this.columns, is('template'));\n            },\n            _flushCache: function () {\n                if (this.options.$angular && this._templateColumns().length) {\n                    this._contentTree.render([]);\n                    if (this._hasLockedColumns) {\n                        this._lockedContentTree.render([]);\n                    }\n                }\n            },\n            _render: function (options) {\n                var that = this;\n                options = options || {};\n                options = that._renderOptions(options);\n                var messages = this.options.messages;\n                var pageable = that._isPageable();\n                var dataSource = that.dataSource;\n                var maps = {\n                    children: options.filteredChildrenMap || options.childrenMap,\n                    ids: options.idsMap\n                };\n                var dataMaps = pageable ? maps && maps.children && maps.ids ? maps : dataSource._initDataMaps(dataSource._getData()) : {};\n                var childrenMap = dataMaps.children;\n                var idsMap = dataMaps.ids;\n                options.childrenMap = childrenMap;\n                options.idsMap = idsMap;\n                var data = that._dataToRender(options);\n                var level = that._renderedModelLevel(data[0], options);\n                var uidAttr = kendo.attr('uid');\n                var hasFooterTemplate;\n                var selected = this.select().removeClass('k-state-selected').map(function (_, row) {\n                    return $(row).attr(uidAttr);\n                });\n                var viewChildrenMap;\n                this._absoluteIndex = 0;\n                this._angularItems('cleanup');\n                this._angularFooters('cleanup');\n                this._flushCache();\n                that._clearRenderMap();\n                if (options.error) {\n                    this._showStatus(kendo.template('#: messages.requestFailed # ' + '<button class=\\'#= buttonClass # k-button-md k-rounded-md k-button-solid k-button-solid-base\\'><span class=\\'k-button-text\\'>#: messages.retry #</span></button>')({\n                        buttonClass: [\n                            classNames.button,\n                            classNames.retry\n                        ].join(' '),\n                        messages: messages\n                    }));\n                } else if (!data.length) {\n                    this._hideStatus();\n                    this._showNoRecordsTemplate();\n                } else {\n                    if (pageable) {\n                        viewChildrenMap = that._viewChildrenMap(options);\n                    }\n                    this._hideStatus();\n                    hasFooterTemplate = this._hasFooterTemplate();\n                    this._contentTree.render(this._trs({\n                        columns: leafColumns(nonLockedColumns(this.columns)),\n                        editedColumn: options.editedColumn,\n                        editedColumnIndex: options.editedColumnIndex,\n                        aggregates: options.aggregates,\n                        selected: selected,\n                        data: data,\n                        childrenMap: childrenMap,\n                        viewChildrenMap: viewChildrenMap,\n                        hasFooterTemplate: hasFooterTemplate,\n                        visible: true,\n                        level: 0\n                    }));\n                    if (this._hasLockedColumns) {\n                        this._absoluteIndex = 0;\n                        this._lockedContentTree.render(this._trs({\n                            columns: leafColumns(lockedColumns(this.columns)),\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            aggregates: options.aggregates,\n                            selected: selected,\n                            data: data,\n                            childrenMap: childrenMap,\n                            viewChildrenMap: viewChildrenMap,\n                            hasFooterTemplate: hasFooterTemplate,\n                            visible: true,\n                            level: level\n                        }));\n                    }\n                }\n                if (this._touchScroller) {\n                    this._touchScroller.contentResized();\n                }\n                this._muteAngularRebind(function () {\n                    this._angularItems('compile');\n                    this._angularFooters('compile');\n                });\n                this.items().filter(function () {\n                    return $.inArray($(this).attr(uidAttr), selected) >= 0;\n                }).addClass('k-state-selected');\n                this._syncLockedContentHeight();\n                that._togglePagerVisibility();\n                that._setExpanderElement();\n            },\n            _setExpanderElement: function () {\n                var that = this, hiddenDivClass = 'k-grid-content-expander', hiddenDiv = '<div class=\"' + hiddenDivClass + '\"></div>', expander;\n                if (that.options.scrollable && that.wrapper.is(':visible')) {\n                    expander = that.table.parent().children('.' + hiddenDivClass);\n                    if (!that.dataSource || !that.dataSource.view().length) {\n                        if (!expander[0]) {\n                            expander = $(hiddenDiv).appendTo(that.table.parent());\n                        }\n                        if (that.thead) {\n                            expander.width(that.thead.width());\n                        }\n                    } else if (expander[0]) {\n                        expander.remove();\n                    }\n                }\n            },\n            _renderProgress: function (toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n            _renderOptions: function (options) {\n                options = options || {};\n                var that = this;\n                var dataMaps = that.dataSource._getDataMaps();\n                var filter = that.dataSource.filter();\n                if (that._isPageable()) {\n                    options.childrenMap = dataMaps.children;\n                    options.idsMap = dataMaps.ids;\n                    if (filter) {\n                        options.filteredChildrenMap = dataMaps.filteredChildren;\n                    }\n                }\n                return options;\n            },\n            _renderedModelLevel: function (model, options) {\n                return !this._isPageable() ? 0 : this.dataSource._pageableModelLevel(model, options);\n            },\n            _viewChildrenMap: function (options) {\n                options = options || {};\n                var that = this;\n                var dataSource = that.dataSource;\n                var viewChildrenMap = dataSource.childrenMap(dataSource.view());\n                var idField = dataSource._modelIdField();\n                var parentsNotInView = dataSource._parentNodesNotInView();\n                var parentNotInView;\n                var parentNotInViewId;\n                var parents;\n                var parent;\n                var parentId;\n                var child;\n                var childId;\n                var parentsCopy;\n                that._clearRenderMap();\n                for (var i = 0; i < parentsNotInView.length; i++) {\n                    parentNotInView = parentsNotInView[i];\n                    parentNotInViewId = parentNotInView[idField];\n                    that._markNodeAsNonRenderable(parentNotInViewId);\n                    viewChildrenMap[parentNotInViewId] = viewChildrenMap[parentNotInViewId] || [];\n                    parents = dataSource._parentNodes(parentNotInView);\n                    parentsCopy = parents.slice();\n                    parentsCopy.push(parentNotInView);\n                    for (var parentIndex = 0; parentIndex < parentsCopy.length - 1; parentIndex++) {\n                        parent = parentsCopy[parentIndex];\n                        parentId = parent[idField];\n                        that._markNodeAsNonRenderable(parentId);\n                        viewChildrenMap[parentId] = viewChildrenMap[parentId] || [];\n                        child = parentsCopy[parentIndex + 1];\n                        childId = child[idField];\n                        that._markNodeAsNonRenderable(childId);\n                        viewChildrenMap[childId] = viewChildrenMap[childId] || [];\n                        if (viewChildrenMap[parentId].indexOf(child) === -1) {\n                            viewChildrenMap[parentId].unshift(child);\n                        }\n                    }\n                }\n                return viewChildrenMap;\n            },\n            _clearRenderMap: function () {\n                this._skipRenderingMap = {};\n            },\n            _dataToRender: function (options) {\n                var that = this;\n                if (that._isPageable()) {\n                    return that.dataSource._pageableRootNodes(options);\n                }\n                return that.dataSource.rootNodes();\n            },\n            _markNodeAsNonRenderable: function (nodeId) {\n                this._skipRenderingMap[nodeId] = true;\n            },\n            _adjustRowsHeight: function (table1, table2) {\n                if (!this._hasLockedColumns) {\n                    return;\n                }\n                var rows = table1[0].rows;\n                var length = rows.length;\n                var idx;\n                var rows2 = table2[0].rows;\n                var containers = table1.add(table2);\n                var containersLength = containers.length;\n                var heights = [];\n                for (idx = 0; idx < length; idx++) {\n                    if (!rows2[idx]) {\n                        break;\n                    }\n                    if (rows[idx].style.height) {\n                        rows[idx].style.height = rows2[idx].style.height = '';\n                    }\n                }\n                for (idx = 0; idx < length; idx++) {\n                    if (!rows2[idx]) {\n                        break;\n                    }\n                    var offsetHeight1 = rows[idx].offsetHeight;\n                    var offsetHeight2 = rows2[idx].offsetHeight;\n                    var height = 0;\n                    if (offsetHeight1 > offsetHeight2) {\n                        height = offsetHeight1;\n                    } else if (offsetHeight1 < offsetHeight2) {\n                        height = offsetHeight2;\n                    }\n                    heights.push(height);\n                }\n                for (idx = 0; idx < containersLength; idx++) {\n                    containers[idx].style.display = 'none';\n                }\n                for (idx = 0; idx < length; idx++) {\n                    if (heights[idx]) {\n                        rows[idx].style.height = rows2[idx].style.height = heights[idx] + 1 + 'px';\n                    }\n                }\n                for (idx = 0; idx < containersLength; idx++) {\n                    containers[idx].style.display = '';\n                }\n            },\n            _ths: function (columns, rowSpan) {\n                var ths = [];\n                var column, title, children, cellClasses, attr, headerContent;\n                var index;\n                var leafs;\n                for (var i = 0, length = columns.length; i < length; i++) {\n                    column = columns[i];\n                    children = [];\n                    cellClasses = [classNames.header];\n                    if (column.selectable) {\n                        leafs = leafColumns(columns);\n                        index = inArray(column, leafs);\n                        attr = {\n                            scope: 'col',\n                            role: 'columnheader',\n                            className: cellClasses.join(' ')\n                        };\n                        if (column.headerTemplate) {\n                            title = column.headerTemplate({});\n                        }\n                        title = column.headerTemplate ? title : kendo.template(SELECTCOLUMNHEADERTMPL)({});\n                        if (rowSpan && !column.colSpan) {\n                            attr.rowSpan = rowSpan;\n                        }\n                        if (index > -1) {\n                            attr[kendo.attr('index')] = index;\n                        }\n                        children.push(kendoHtmlElement(title));\n                        ths.push(kendoDomElement('th', $.extend(true, {}, attr, column.headerAttributes), children));\n                        continue;\n                    }\n                    if (column.headerTemplate) {\n                        title = column.headerTemplate({});\n                    } else {\n                        title = column.title || column.field || '';\n                    }\n                    if (column.headerTemplate) {\n                        headerContent = kendoHtmlElement(title);\n                    } else {\n                        headerContent = kendoTextElement(title);\n                    }\n                    if (this.options.sortable) {\n                        children.push(kendoDomElement('span', { className: classNames.headerCellInner }, [kendoDomElement('span', { className: classNames.link }, [kendoDomElement('span', { className: classNames.columnTitle }, [headerContent])])]));\n                    } else {\n                        children.push(headerContent);\n                    }\n                    attr = {\n                        'data-field': column.field,\n                        'data-title': column.title,\n                        'style': column.hidden === true ? { 'display': 'none' } : {},\n                        className: cellClasses.join(' '),\n                        'role': 'columnheader'\n                    };\n                    if (!column.columns) {\n                        attr.rowSpan = rowSpan ? rowSpan : 1;\n                    }\n                    if (column.headerAttributes) {\n                        if (column.headerAttributes.colSpan === 1) {\n                            delete column.headerAttributes.colSpan;\n                        }\n                        if (column.headerAttributes['class']) {\n                            attr.className += ' ' + column.headerAttributes['class'];\n                            delete column.headerAttributes['class'];\n                        }\n                    }\n                    if (column['data-index'] > -1) {\n                        attr['data-index'] = column['data-index'];\n                    }\n                    attr = extend(true, {}, attr, column.headerAttributes);\n                    ths.push(kendoDomElement('th', attr, children));\n                }\n                return ths;\n            },\n            _cols: function (columns) {\n                var cols = [];\n                var width, attr;\n                for (var i = 0; i < columns.length; i++) {\n                    if (columns[i].hidden === true) {\n                        continue;\n                    }\n                    width = columns[i].width;\n                    attr = {};\n                    if (width && parseInt(width, 10) !== 0) {\n                        attr.style = { width: typeof width === 'string' ? width : width + 'px' };\n                    }\n                    cols.push(kendoDomElement('col', attr));\n                }\n                return cols;\n            },\n            _clearColsCache: function () {\n                this._headerColsTree.render([]);\n                if (this.options.scrollable) {\n                    this._contentColsTree.render([]);\n                }\n                if (this._hasLockedColumns) {\n                    this._lockedHeaderColsTree.render([]);\n                    this._lockedContentColsTree.render([]);\n                }\n            },\n            _renderCols: function () {\n                var columns = nonLockedColumns(this.columns);\n                this._headerColsTree.render(this._cols(leafColumns(columns)));\n                if (this.options.scrollable) {\n                    this._contentColsTree.render(this._cols(leafColumns(columns)));\n                }\n                if (this._hasLockedColumns) {\n                    columns = lockedColumns(this.columns);\n                    this._lockedHeaderColsTree.render(this._cols(leafColumns(columns)));\n                    this._lockedContentColsTree.render(this._cols(leafColumns(columns)));\n                }\n            },\n            _retrieveFirstColumn: function (columns, rows) {\n                var result = $();\n                if (rows.length && columns[0]) {\n                    var column = columns[0];\n                    while (column.columns && column.columns.length) {\n                        column = column.columns[0];\n                        rows = rows.filter(':not(:first)');\n                    }\n                    result = result.add(rows);\n                }\n                return result;\n            },\n            _updateFirstColumnClass: function () {\n                var that = this;\n                var columns = that.columns || [];\n                var tr = that.thead.find('>tr:not(:first, .k-filter-row)');\n                var rows;\n                columns = nonLockedColumns(columns);\n                rows = that._retrieveFirstColumn(columns, tr);\n                if (that.lockedHeader) {\n                    tr = that.lockedHeader.find('thead>tr:not(.k-filter-row):not(:first)');\n                    columns = lockedColumns(that.columns);\n                    rows = rows.add(that._retrieveFirstColumn(columns, tr));\n                }\n                rows.each(function () {\n                    var ths = $(this).find('th');\n                    ths.removeClass('k-first');\n                    ths.eq(0).addClass('k-first');\n                });\n            },\n            _updateRowSpans: function (rows) {\n                for (var i = rows.length - 1; i >= 0; i--) {\n                    var included = visibleChildColumns(rows[i].cells).length > 0;\n                    if (included) {\n                        rows[i].rowSpan = rows.length - i;\n                    }\n                }\n            },\n            _setColumnDataIndexes: function (columns) {\n                for (var i = 0; i < columns.length; i++) {\n                    columns[i]['data-index'] = i;\n                }\n            },\n            _updateColumnCellIndex: function () {\n                var header;\n                var offset = 0;\n                if (this.lockedHeader) {\n                    header = this.lockedHeader.find('thead');\n                    offset = updateCellIndex(header, lockedColumns(this.columns));\n                }\n                updateCellIndex(this.thead, nonLockedColumns(this.columns), offset);\n            },\n            _setParentsVisibility: function (column, visible) {\n                var columns = this.columns;\n                var idx;\n                var parents = [];\n                var parent;\n                var predicate = visible ? function (p) {\n                    return visibleColumns(p.columns).length && p.hidden;\n                } : function (p) {\n                    return !visibleColumns(p.columns).length && !p.hidden;\n                };\n                if (columnParents(column, columns, parents) && parents.length) {\n                    for (idx = parents.length - 1; idx >= 0; idx--) {\n                        parent = parents[idx];\n                        if (predicate(parent)) {\n                            parent.hidden = !visible;\n                        }\n                    }\n                }\n            },\n            _prepareColumns: function (rows, columns, parentCell, parentRow, parentColumn) {\n                var row = parentRow || rows[rows.length - 1];\n                var childRow = rows[row.index + 1];\n                var totalColSpan = 0;\n                for (var idx = 0; idx < columns.length; idx++) {\n                    var cell = $.extend({}, columns[idx], { headerAttributes: columns[idx].headerAttributes || {} });\n                    row.cells.push(cell);\n                    if (columns[idx].columns && columns[idx].columns.length) {\n                        if (!childRow) {\n                            childRow = {\n                                rowSpan: 0,\n                                cells: [],\n                                index: rows.length\n                            };\n                            rows.push(childRow);\n                        }\n                        if (columns[idx].columns.length) {\n                            cell.headerAttributes.colSpan = visibleChildColumns(columns[idx].columns).length || 1;\n                            cell.headerAttributes['data-colspan'] = leafColumns(columns[idx].columns).length;\n                        }\n                        this._prepareColumns(rows, columns[idx].columns, cell, childRow, columns[idx]);\n                        if (!cell.hidden) {\n                            totalColSpan += cell.headerAttributes.colSpan - 1;\n                        }\n                        row.rowSpan = rows.length - row.index;\n                    }\n                    columns[idx].rowIndex = row.index;\n                    if (parentColumn) {\n                        columns[idx].parentColumn = parentColumn;\n                    }\n                    columns[idx].cellIndex = row.cells.length - 1;\n                }\n                if (parentCell) {\n                    parentCell.headerAttributes.colSpan += totalColSpan;\n                }\n            },\n            _renderHeaderTree: function (tree, columns, hasMultiColumnHeaders) {\n                var idx;\n                var rows = [];\n                var rowsToRender = [];\n                var filterThs = [];\n                if (hasMultiColumnHeaders) {\n                    rows = [{\n                            rowSpan: 1,\n                            cells: [],\n                            index: 0\n                        }];\n                    this._prepareColumns(rows, columns);\n                    this._updateRowSpans(rows);\n                    for (idx = 0; idx < rows.length; idx++) {\n                        rowsToRender.push(kendoDomElement('tr', { 'role': 'row' }, this._ths(rows[idx].cells, rows[idx].rowSpan)));\n                    }\n                } else {\n                    rowsToRender.push(kendoDomElement('tr', { 'role': 'row' }, this._ths(columns)));\n                }\n                if (this._hasFilterRow()) {\n                    this._filterThs(columns, filterThs);\n                    rowsToRender.push(kendoDomElement('tr', { 'class': 'k-filter-row' }, filterThs));\n                }\n                tree.render(rowsToRender);\n            },\n            _renderHeader: function () {\n                var columns = nonLockedColumns(this.columns);\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                this._setColumnDataIndexes(leafColumns(this.columns));\n                this._renderHeaderTree(this._headerTree, columns, hasMultiColumnHeaders);\n                if (this._hasLockedColumns) {\n                    columns = lockedColumns(this.columns);\n                    this._renderHeaderTree(this._lockedHeaderTree, columns, hasMultiColumnHeaders);\n                    this._applyLockedContainersWidth();\n                    this._syncLockedHeaderHeight();\n                }\n                this._updateFirstColumnClass();\n            },\n            _filterThs: function (columns, ths) {\n                var column;\n                var attr;\n                var uidAttr = kendo.attr('uid');\n                for (var i = 0, length = columns.length; i < length; i++) {\n                    column = columns[i];\n                    if (column.columns) {\n                        this._filterThs(column.columns, ths);\n                    }\n                    if (column.columns && column.columns.length) {\n                        continue;\n                    }\n                    attr = { 'style': column.hidden === true ? { 'display': 'none' } : {} };\n                    attr[uidAttr] = column.headerAttributes.id;\n                    ths.push(kendoDomElement('th', attr));\n                }\n            },\n            _updateFilterThs: function (before, column, refColumn) {\n                var columns = leafColumns([column]);\n                var filterRowThs = $(this.lockedHeader).add(this.thead).find('tr.k-filter-row th');\n                var refIndex;\n                var currIndex;\n                var uidAttr = kendo.attr('uid');\n                function thIndex(ths, uid) {\n                    for (var i = 0; i < ths.length; i++) {\n                        if (ths.eq(i).attr(uidAttr) === uid) {\n                            return i;\n                        }\n                    }\n                }\n                for (var i = columns.length - 1; i >= 0; i--) {\n                    column = columns[i];\n                    currIndex = thIndex(filterRowThs, column.headerAttributes.id);\n                    refIndex = thIndex(filterRowThs, refColumn.headerAttributes.id);\n                    filterRowThs.eq(currIndex)[before ? 'insertBefore' : 'insertAfter'](filterRowThs.eq(refIndex));\n                }\n            },\n            _applyLockedContainersWidth: function () {\n                if (!this._hasLockedColumns) {\n                    return;\n                }\n                var lockedWidth = columnsWidth(this.lockedHeader.find('>table>colgroup>col'));\n                var headerTable = this.thead.parent();\n                var nonLockedWidth = columnsWidth(headerTable.find('>colgroup>col'));\n                var wrapperWidth = this.wrapper[0].clientWidth;\n                var scrollbar = kendo.support.scrollbar();\n                if (lockedWidth >= wrapperWidth) {\n                    lockedWidth = wrapperWidth - 3 * scrollbar;\n                }\n                this.lockedHeader.add(this.lockedContent).width(lockedWidth);\n                headerTable.add(this.table).width(nonLockedWidth);\n                var width = wrapperWidth - lockedWidth;\n                this.content.width(width - 1);\n                headerTable.parent().width(width - scrollbar - 2);\n            },\n            _trs: function (options) {\n                var that = this;\n                var model, attr, className, hasChildren, childNodes, i, length;\n                var modelId;\n                var rows = [];\n                var level = options.level;\n                var data = options.data;\n                var dataSource = this.dataSource;\n                var aggregates = dataSource.aggregates() || {};\n                var idField = dataSource._modelIdField();\n                var parentIdField = dataSource._modelParentIdField();\n                var columns = options.columns;\n                var pageable = that._isPageable();\n                var childrenMap = options.childrenMap || dataSource.childrenMap(dataSource._getData());\n                for (i = 0, length = data.length; i < length; i++) {\n                    className = [];\n                    model = data[i];\n                    modelId = model[idField];\n                    childNodes = pageable ? childrenMap[modelId] : model.loaded() ? dataSource.childNodes(model) : [];\n                    hasChildren = childNodes && childNodes.length;\n                    attr = { 'role': 'row' };\n                    attr[kendo.attr('uid')] = model.uid;\n                    if (hasChildren) {\n                        attr['aria-expanded'] = !!model.expanded;\n                    }\n                    if (options.visible) {\n                        if (!pageable || pageable && !that._skipRenderingMap[modelId]) {\n                            if (this._absoluteIndex % 2 !== 0) {\n                                className.push(classNames.alt);\n                            }\n                            this._absoluteIndex++;\n                        }\n                    } else {\n                        attr.style = { display: 'none' };\n                    }\n                    if ($.inArray(model.uid, options.selected) >= 0) {\n                        className.push(classNames.selected);\n                    }\n                    if (hasChildren) {\n                        className.push(classNames.group);\n                    }\n                    if (model._edit) {\n                        className.push('k-grid-edit-row');\n                    }\n                    attr.className = className.join(' ');\n                    if (!that._skipRenderingMap[modelId]) {\n                        var row;\n                        var rowOptions = {\n                            model: model,\n                            attr: attr,\n                            level: pageable ? that._renderedModelLevel(model, options) : level,\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            hasChildren: hasChildren,\n                            visible: options.visible,\n                            isAlt: this._absoluteIndex % 2 === 0\n                        };\n                        if (that.options.rowTemplate) {\n                            row = this._trFromTemplate(rowOptions);\n                        } else {\n                            row = this._tds(rowOptions, columns, proxy(this._td, this));\n                        }\n                        rows.push(row);\n                    }\n                    if (hasChildren && (that.options.renderAllRows || !!model.expanded)) {\n                        if (pageable) {\n                            childNodes = (options.viewChildrenMap || {})[modelId] || [];\n                        }\n                        if (childNodes.length === 0) {\n                            continue;\n                        }\n                        rows = rows.concat(this._trs({\n                            columns: columns,\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            aggregates: aggregates,\n                            selected: options.selected,\n                            visible: pageable ? options.visible : options.visible && !!model.expanded,\n                            data: childNodes,\n                            childrenMap: options.childrenMap || childrenMap,\n                            hasFooterTemplate: options.hasFooterTemplate,\n                            viewChildrenMap: options.viewChildrenMap,\n                            level: level + 1\n                        }));\n                    }\n                }\n                if (options.hasFooterTemplate && model) {\n                    attr = {\n                        className: classNames.footerTemplate,\n                        'data-parentId': model[parentIdField]\n                    };\n                    if (!options.visible) {\n                        attr.style = { display: 'none' };\n                    }\n                    rows.push(this._tds({\n                        model: aggregates[model[parentIdField]],\n                        attr: attr,\n                        level: level,\n                        editedColumn: options.editedColumn,\n                        editedColumnIndex: options.editedColumnIndex\n                    }, columns, this._footerId));\n                }\n                return rows;\n            },\n            _trFromTemplate: function (options) {\n                var rowTemplate = this.options.rowTemplate;\n                var altRowTemplate = this.options.altRowTemplate;\n                var row;\n                var template;\n                altRowTemplate = altRowTemplate ? altRowTemplate : rowTemplate;\n                if (!kendo.isFunction(rowTemplate)) {\n                    rowTemplate = kendo.template(rowTemplate);\n                }\n                if (!kendo.isFunction(altRowTemplate)) {\n                    altRowTemplate = kendo.template(altRowTemplate);\n                }\n                if (this._absoluteIndex % 2 !== 0) {\n                    template = rowTemplate(options);\n                } else {\n                    template = altRowTemplate(options);\n                }\n                if (!$(template).length) {\n                    return kendoTextElement(template);\n                }\n                row = this.parseRowTemplate($(template)[0], options);\n                return row;\n            },\n            parseRowTemplate: function (element, options) {\n                var nodeName = element.nodeName.toLocaleLowerCase();\n                var childNodes = element.childNodes;\n                var children = [];\n                var currElement;\n                var attributes;\n                attributes = this.parseAttributes(element);\n                for (var i = 0; i < childNodes.length; i++) {\n                    if (!/\\S/.test(childNodes[i].nodeValue)) {\n                        continue;\n                    }\n                    if (childNodes[i].nodeName.toLocaleLowerCase() === 'td') {\n                        children.push(this._createCellElement(childNodes[i]));\n                    }\n                }\n                if (options && !options.visible) {\n                    attributes.style = attributes.style || {};\n                    attributes.style = $.extend(true, attributes.style, { display: 'none' });\n                }\n                if (this._isTextNode(nodeName)) {\n                    currElement = kendoTextElement(element.nodeValue);\n                } else {\n                    currElement = kendoDomElement(nodeName, attributes, children);\n                }\n                return currElement;\n            },\n            _createCellElement: function (element) {\n                var attributes = this.parseAttributes(element);\n                var spaceElements = $(element).find('.' + classNames.iconHidden).remove();\n                var iconElement = $(element).find('.' + classNames.iconExpand + ',.' + classNames.iconCollapse).remove()[0];\n                var children = [];\n                for (var i = 0; i < spaceElements.length; i++) {\n                    children.push(kendoDomElement('span', this.parseAttributes(spaceElements[i])));\n                }\n                if (iconElement) {\n                    children.push(kendoDomElement('span', this.parseAttributes(iconElement)));\n                }\n                children.push(kendoHtmlElement($(element).html()));\n                return kendoDomElement('td', attributes, children);\n            },\n            parseAttributes: function (element) {\n                if (this._isTextNode(element.nodeName)) {\n                    return null;\n                }\n                element = $(element)[0];\n                var attributes = element.attributes;\n                var length = attributes.length;\n                var result = {};\n                for (var i = 0; i < length; i++) {\n                    result[attributes[i].name] = attributes[i].value;\n                }\n                return result;\n            },\n            _isTextNode: function (nodeName) {\n                return nodeName.indexOf('text') >= 0;\n            },\n            _footerId: function (options) {\n                var content = [];\n                var column = options.column;\n                var template = options.column.footerTemplate || $.noop;\n                var aggregates = options.model[column.field] || {};\n                var attr = {\n                    'role': 'gridcell',\n                    'style': column.hidden === true ? { 'display': 'none' } : {}\n                };\n                if (column.expandable) {\n                    content = content.concat(createPlaceholders({\n                        level: options.level + 1,\n                        className: classNames.iconPlaceHolder\n                    }));\n                }\n                if (column.attributes) {\n                    extend(true, attr, column.attributes, { 'style': column.hidden === true ? { 'display': 'none' } : {} });\n                }\n                content.push(kendoHtmlElement(template(aggregates) || ''));\n                return kendoDomElement('td', attr, content);\n            },\n            _hasFooterTemplate: function () {\n                return !!grep(leafColumns(this.columns), function (c) {\n                    return c.footerTemplate;\n                }).length;\n            },\n            _tds: function (options, columns, renderer) {\n                var children = [];\n                var column;\n                var editedColumnField = (options.editedColumn || {}).field;\n                var incellEditing = this._isIncellEditable();\n                var length = columns.length;\n                for (var i = 0; i < length; i++) {\n                    column = columns[i];\n                    var col = renderer({\n                        model: options.model,\n                        column: column,\n                        editColumn: !incellEditing || incellEditing && column.field === editedColumnField && options.editedColumnIndex === i,\n                        level: options.level\n                    });\n                    children.push(col);\n                }\n                return kendoDomElement('tr', options.attr, children);\n            },\n            _td: function (options) {\n                var children = [];\n                var model = options.model;\n                var column = options.column;\n                var iconClass;\n                var attr = {\n                    'role': 'gridcell',\n                    'style': column.hidden === true ? { 'display': 'none' } : {}\n                };\n                var incellEditing = this._isIncellEditable();\n                var columnHasEditCommand = false;\n                if (column.attributes) {\n                    extend(true, attr, column.attributes);\n                }\n                if (this.options.navigatable) {\n                    attr['aria-describedby'] = column.headerAttributes.id;\n                }\n                if (model._edit && column.field && options.editColumn && (incellEditing || !incellEditing && isColumnEditable(column, model))) {\n                    attr[kendo.attr('container-for')] = column.field;\n                    if (incellEditing) {\n                        if (attr.className && attr.className.indexOf(classNames.editCell) !== -1) {\n                            attr.className += ' ' + classNames.editCell;\n                        } else if (!attr.className) {\n                            attr.className = classNames.editCell;\n                        }\n                    }\n                } else {\n                    if (column.expandable) {\n                        children = createPlaceholders({\n                            level: options.level,\n                            className: classNames.iconPlaceHolder\n                        });\n                        iconClass = [classNames.icon];\n                        if (model.hasChildren) {\n                            iconClass.push(model.expanded ? classNames.iconCollapse : classNames.iconExpand);\n                        } else {\n                            iconClass.push(classNames.iconHidden);\n                        }\n                        if (model._error) {\n                            iconClass.push(classNames.refresh);\n                        } else if (!model.loaded() && model.expanded) {\n                            iconClass.push(classNames.loading);\n                            attr['aria-busy'] = true;\n                        }\n                        children.push(kendoDomElement('span', { className: iconClass.join(' ') }));\n                        attr.style['white-space'] = 'nowrap';\n                    }\n                    if (isDirtyColumn(column, model)) {\n                        if (attr.className) {\n                            attr.className += classNames.dirtyCell;\n                        } else if (!attr.className) {\n                            attr.className = classNames.dirtyCell;\n                        }\n                    }\n                    if (column.command) {\n                        if (attr.className && attr.className.indexOf('k-command-cell') !== -1) {\n                            attr.className += ' k-command-cell';\n                        } else if (!attr.className) {\n                            attr.className = 'k-command-cell';\n                        }\n                        columnHasEditCommand = grep(column.command, function (command) {\n                            return command === EDIT || command.name === EDIT;\n                        }).length > 0;\n                        if (model._edit && !this._isIncellEditable() && columnHasEditCommand) {\n                            children = this._buildCommands([\n                                'update',\n                                'canceledit'\n                            ]);\n                        } else {\n                            children = this._buildCommands(column.command);\n                        }\n                    } else {\n                        children.push(this._cellContent(column, model));\n                    }\n                    attr.className = [\n                        attr['class'],\n                        attr.className\n                    ].join(' ').trim();\n                }\n                return kendoDomElement('td', attr, children);\n            },\n            _cellContent: function (column, model) {\n                var that = this;\n                var value;\n                var incellEditing = that._isIncellEditable();\n                var dirtyIndicator;\n                if (column.selectable) {\n                    return kendoHtmlElement(SELECTCOLUMNTMPL);\n                }\n                if (column.template) {\n                    value = that._evalColumnTemplate(column, model);\n                } else if (column.field) {\n                    value = model.get(column.field);\n                    dirtyIndicator = incellEditing ? column.dirtyIndicatorTemplate(model) : '';\n                    if (value !== null && !isUndefined(value)) {\n                        if (column.format) {\n                            value = kendo.format(column.format, value);\n                        }\n                        value = dirtyIndicator + value;\n                    } else {\n                        value = dirtyIndicator;\n                    }\n                } else if (value === null || isUndefined(value)) {\n                    value = '';\n                }\n                if (column.template || !column.encoded) {\n                    return kendoHtmlElement(value);\n                } else {\n                    if (incellEditing) {\n                        return kendoHtmlElement(value);\n                    } else {\n                        return kendoTextElement(value);\n                    }\n                }\n            },\n            _evalColumnTemplate: function (column, model) {\n                if (this._isIncellEditable()) {\n                    return column.dirtyCellTemplate(model);\n                } else {\n                    return column.template(model);\n                }\n            },\n            _createDirtyColumnTemplate: function (column) {\n                var that = this;\n                var templateSettings = that._customTemplateSettings();\n                var columnTemplateAlias = '#=this.columnTemplate(' + templateSettings.paramName + ')#';\n                var templateString = that._dirtyIndicatorTemplate(column.field) + columnTemplateAlias;\n                var templateFunction = proxy(kendoTemplate(templateString, templateSettings), { columnTemplate: column.template });\n                return templateFunction;\n            },\n            _createIndicatorTemplate: function (column) {\n                var dirtyIndicatorTemplate = this._dirtyIndicatorTemplate(column.field);\n                return kendoTemplate(dirtyIndicatorTemplate);\n            },\n            _dirtyIndicatorTemplate: function (field) {\n                var that = this;\n                var dirtyField;\n                var templateSettings = that._customTemplateSettings();\n                var paramName = templateSettings.paramName;\n                if (field && paramName) {\n                    dirtyField = field.charAt(0) === '[' ? kendo.expr(field, paramName + '.dirtyFields') : paramName + '.dirtyFields[\\'' + field + '\\']';\n                    return '#= ' + paramName + ' && ' + paramName + '.dirty && ' + paramName + '.dirtyFields && ' + dirtyField + ' ? \\'<span class=\"k-dirty\"></span>\\' : \\'\\' #';\n                }\n                return '';\n            },\n            _customTemplateSettings: function () {\n                return extend({}, kendo.Template, this.options.templateSettings);\n            },\n            _buildCommands: function (commands) {\n                var i, result = [];\n                for (i = 0; i < commands.length; i++) {\n                    result.push(this._handleCommand(commands[i]));\n                }\n                return result;\n            },\n            _handleCommand: function (command) {\n                var name = (command.name || command).toLowerCase();\n                var text = this.options.messages.commands[name];\n                var icon = [];\n                command = extend({}, defaultCommands[name], { text: text }, command);\n                if (command.imageClass) {\n                    icon.push(kendoDomElement('span', {\n                        className: [\n                            'k-icon',\n                            'k-button-icon',\n                            command.imageClass\n                        ].join(' ')\n                    }));\n                }\n                if (command.template) {\n                    return kendoHtmlElement(kendo.template(command.template)({ message: command.text || this.options.messages.commands.search }));\n                } else {\n                    return this._button(command, name, icon);\n                }\n            },\n            _button: function (command, name, icon) {\n                if (command.className && command.className.indexOf('k-primary') > -1) {\n                    command.className = command.className.replace('k-primary', 'k-button-solid-primary');\n                }\n                if (!command.className || command.className.indexOf('k-button-solid-primary') === -1) {\n                    command.className += ' k-button-solid-base';\n                }\n                var button = kendoDomElement('button', {\n                    'type': 'button',\n                    'data-command': name,\n                    className: [\n                        'k-button k-button-md k-rounded-md k-button-solid',\n                        command.className\n                    ].join(' ')\n                }, icon.concat([kendoDomElement('span', {\n                        type: 'span',\n                        className: 'k-button-text'\n                    }, [kendoTextElement(command.text || command.name)])]));\n                return button;\n            },\n            _positionResizeHandle: function (e) {\n                var th = $(e.currentTarget);\n                var resizeHandle = this.resizeHandle;\n                var position = th.position();\n                var left;\n                var rtlCorrection = 0;\n                var headerWrap;\n                var ieCorrection;\n                var webkitCorrection;\n                var firefoxCorrection;\n                var leftMargin;\n                var invisibleSpace;\n                var leftBorderWidth;\n                var scrollLeft;\n                var cellWidth = outerWidth(th);\n                var container = th.closest('div');\n                var button = typeof e.buttons !== 'undefined' ? e.buttons : e.which || e.button;\n                var indicatorWidth = this.options.columnResizeHandleWidth || 3;\n                var halfResizeHandle = indicatorWidth * 3 / 2;\n                left = cellWidth;\n                if (typeof button !== 'undefined' && button !== 0) {\n                    return;\n                }\n                if (!resizeHandle) {\n                    resizeHandle = this.resizeHandle = $('<div class=\"k-resize-handle\"><div class=\"k-resize-handle-inner\"></div></div>');\n                }\n                var cells = leafDataCells(th.closest('thead')).filter(':visible');\n                if (isRtl) {\n                    scrollLeft = kendo.scrollLeft(container);\n                    if (browser.mozilla || browser.webkit && browser.version >= 85) {\n                        scrollLeft = scrollLeft * -1;\n                    }\n                    leftBorderWidth = parseFloat(container.css('borderLeftWidth'));\n                    left = th.offset().left + scrollLeft - parseFloat(th.css('marginLeft')) - (container.offset().left + leftBorderWidth);\n                    rtlCorrection = left <= scrollLeft ? halfResizeHandle : 0;\n                    headerWrap = th.closest('.k-grid-header-wrap, .k-grid-header-locked');\n                    invisibleSpace = headerWrap[0].scrollWidth - headerWrap[0].offsetWidth;\n                    leftMargin = parseFloat(headerWrap.css('marginLeft'));\n                    ieCorrection = browser.msie ? 2 * kendo.scrollLeft(headerWrap) + leftBorderWidth - leftMargin - rtlCorrection : 0;\n                    webkitCorrection = browser.webkit && browser.version < 85 ? invisibleSpace - rtlCorrection - leftMargin + leftBorderWidth : -rtlCorrection;\n                    firefoxCorrection = browser.mozilla ? leftBorderWidth - leftMargin - rtlCorrection : 0;\n                    left -= webkitCorrection + firefoxCorrection + ieCorrection;\n                } else {\n                    for (var idx = 0; idx < cells.length; idx++) {\n                        if (cells[idx] == th[0]) {\n                            break;\n                        }\n                        left += cells[idx].offsetWidth;\n                    }\n                }\n                container.append(resizeHandle);\n                resizeHandle.show().css({\n                    top: position.top,\n                    left: left - halfResizeHandle,\n                    height: outerHeight(th),\n                    width: indicatorWidth * 3\n                }).data('th', th);\n                var that = this;\n                resizeHandle.off('dblclick' + NS).on('dblclick' + NS, function () {\n                    var index = th.index();\n                    if ($.contains(that.thead[0], th[0])) {\n                        index += grep(that.columns, function (val) {\n                            return val.locked && !val.hidden;\n                        }).length;\n                    }\n                    that.autoFitColumn(index);\n                });\n            },\n            autoFitColumn: function (column) {\n                var that = this, options = that.options, columns = that.columns, index, th, headerTable, isLocked, visibleLocked = that.lockedHeader ? leafDataCells(that.lockedHeader.find('>table>thead')).filter(isCellVisible).length : 0, col;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else if (isPlainObject(column)) {\n                    column = grep(columns, function (item) {\n                        return item === column;\n                    })[0];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                index = inArray(column, columns);\n                isLocked = column.locked;\n                if (isLocked) {\n                    headerTable = that.lockedHeader.children('table');\n                } else {\n                    headerTable = that.thead.parent();\n                }\n                th = headerTable.find('[data-index=\\'' + index + '\\']');\n                var contentTable = isLocked ? that.lockedTable : that.table, footer = that.footer || $();\n                if (that.footer && that.lockedContent) {\n                    footer = isLocked ? that.footer.children('.k-grid-footer-locked') : that.footer.children('.k-grid-footer-wrap');\n                }\n                var footerTable = footer.find('table').first();\n                if (that.lockedHeader && visibleLocked >= index && !isLocked) {\n                    index -= visibleLocked;\n                }\n                for (var j = 0; j < columns.length; j++) {\n                    if (columns[j] === column) {\n                        break;\n                    } else {\n                        if (columns[j].hidden) {\n                            index--;\n                        }\n                    }\n                }\n                if (options.scrollable) {\n                    col = headerTable.find('col:not(.k-group-col):not(.k-hierarchy-col)').eq(index).add(contentTable.children('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col)').eq(index)).add(footerTable.find('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col)').eq(index));\n                } else {\n                    col = contentTable.children('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col)').eq(index);\n                }\n                var tables = headerTable.add(contentTable).add(footerTable);\n                var oldColumnWidth = outerWidth(th);\n                col.width('');\n                tables.css('table-layout', 'fixed');\n                col.width('auto');\n                tables.addClass('k-autofitting');\n                tables.css('table-layout', '');\n                var newColumnWidth = Math.ceil(Math.max(outerWidth(th), outerWidth(contentTable.find('tr').eq(0).children('td:visible').eq(index)), outerWidth(footerTable.find('tr').eq(0).children('td:visible').eq(index))));\n                col.width(newColumnWidth);\n                column.width = newColumnWidth;\n                if (options.scrollable) {\n                    var cols = headerTable.find('col'), colWidth, totalWidth = 0;\n                    for (var idx = 0, length = cols.length; idx < length; idx += 1) {\n                        colWidth = cols[idx].style.width;\n                        if (colWidth && colWidth.indexOf('%') == -1) {\n                            totalWidth += parseInt(colWidth, 10);\n                        } else {\n                            totalWidth = 0;\n                            break;\n                        }\n                    }\n                    if (totalWidth) {\n                        tables.each(function () {\n                            this.style.width = totalWidth + 'px';\n                        });\n                    }\n                }\n                tables.removeClass('k-autofitting');\n                that.trigger(COLUMNRESIZE, {\n                    column: column,\n                    oldWidth: oldColumnWidth,\n                    newWidth: newColumnWidth\n                });\n                that._applyLockedContainersWidth();\n                that._syncLockedContentHeight();\n                that._syncLockedHeaderHeight();\n            },\n            _adjustLockedHorizontalScrollBar: function () {\n                var table = this.table, content = table.parent();\n                var scrollbar = table[0].offsetWidth > content[0].clientWidth ? kendo.support.scrollbar() : 0;\n                this.lockedContent.height(outerHeight(content) - scrollbar);\n            },\n            _syncLockedContentHeight: function () {\n                if (this.lockedTable) {\n                    if (!this._touchScroller) {\n                        this._adjustLockedHorizontalScrollBar();\n                    }\n                    this._adjustRowsHeight(this.table, this.lockedTable);\n                    this._syncLockedScroll();\n                }\n            },\n            _syncLockedHeaderHeight: function () {\n                if (this.lockedHeader) {\n                    var lockedTable = this.lockedHeader.children('table');\n                    var table = this.thead.parent();\n                    this._adjustRowsHeight(lockedTable, table);\n                    syncTableHeight(lockedTable, table);\n                }\n            },\n            _syncLockedScroll: function () {\n                if (!this.options.scrollable) {\n                    return;\n                }\n                this.lockedContent[0].scrollTop = this.content[0].scrollTop;\n            },\n            _resizable: function () {\n                if (!this.options.resizable) {\n                    return;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                }\n                var treelist = this;\n                $(this.lockedHeader).find('thead').add(this.thead).on('mousemove' + NS, 'tr:not(.k-filter-row) > th', $.proxy(this._positionResizeHandle, this));\n                this.resizable = new kendo.ui.Resizable(this.wrapper, {\n                    handle: '.k-resize-handle',\n                    start: function (e) {\n                        var th = $(e.currentTarget).data('th');\n                        var index = $.inArray(th[0], leafDataCells(th.closest('thead')).filter(':visible'));\n                        var header, contentTable;\n                        treelist.wrapper.addClass('k-grid-column-resizing');\n                        if (treelist.lockedHeader && $.contains(treelist.lockedHeader[0], th[0])) {\n                            header = treelist.lockedHeader;\n                            contentTable = treelist.lockedTable;\n                        } else {\n                            header = treelist.thead.parent();\n                            contentTable = treelist.table;\n                        }\n                        this.col = contentTable.children('colgroup').find('col').eq(index).add(header.find('col').eq(index));\n                        this.th = th;\n                        this.startLocation = e.x.location;\n                        this.columnWidth = outerWidth(th);\n                        this.table = this.col.closest('table');\n                        this.totalWidth = this.table.width();\n                    },\n                    resize: function (e) {\n                        var rtlModifier = isRtl ? -1 : 1;\n                        var minColumnWidth = 11;\n                        var delta = e.x.location * rtlModifier - this.startLocation * rtlModifier;\n                        if (this.columnWidth + delta < minColumnWidth) {\n                            delta = minColumnWidth - this.columnWidth;\n                        }\n                        this.table.width(this.totalWidth + delta);\n                        this.col.width(this.columnWidth + delta);\n                    },\n                    resizeend: function () {\n                        treelist.wrapper.removeClass('k-grid-column-resizing');\n                        var field = this.th.attr('data-field');\n                        var column = grep(leafColumns(treelist.columns), function (c) {\n                            return c.field == field;\n                        });\n                        var newWidth = Math.floor(outerWidth(this.th));\n                        column[0].width = newWidth;\n                        treelist._resize();\n                        treelist._syncLockedContentHeight();\n                        treelist._syncLockedHeaderHeight();\n                        treelist.trigger(COLUMNRESIZE, {\n                            column: column,\n                            oldWidth: this.columnWidth,\n                            newWidth: newWidth\n                        });\n                        this.table = this.col = this.th = null;\n                    }\n                });\n            },\n            _sortable: function () {\n                var columns;\n                var column;\n                var sortableInstance;\n                var cells;\n                var cell, idx, length;\n                var sortable = this.options.sortable;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (!sortable) {\n                    return;\n                }\n                if (hasMultiColumnHeaders) {\n                    if (this.lockedHeader) {\n                        cells = sortCells(leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead)));\n                    } else {\n                        cells = leafDataCells(this.thead);\n                    }\n                } else {\n                    cells = $(this.lockedHeader).add(this.thead).find('tr:not(.k-filter-row) th');\n                }\n                columns = leafColumns(this.columns);\n                for (idx = 0, length = cells.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.sortable !== false && !column.command && column.field && !column.selectable) {\n                        cell = cells.eq(idx);\n                        sortableInstance = cell.data('kendoColumnSorter');\n                        if (sortableInstance) {\n                            sortableInstance.destroy();\n                        }\n                        cell.kendoColumnSorter(extend({}, sortable, column.sortable, { dataSource: this.dataSource }));\n                    }\n                }\n            },\n            _filterable: function () {\n                var cells;\n                var filterable = this.options.filterable;\n                var idx;\n                var length;\n                var columns;\n                var column;\n                var cell;\n                var filterMenuInstance;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (!filterable || this.options.columnMenu) {\n                    return;\n                }\n                var filterInit = proxy(function (e) {\n                    this.trigger(FILTERMENUINIT, {\n                        field: e.field,\n                        container: e.container\n                    });\n                }, this);\n                var filterOpen = proxy(function (e) {\n                    this.trigger(FILTERMENUOPEN, {\n                        field: e.field,\n                        container: e.container\n                    });\n                }, this);\n                if (hasMultiColumnHeaders) {\n                    if (this.lockedHeader) {\n                        cells = leafDataCells(this.lockedHeader.find('>table>thead').add(this.thead));\n                    } else {\n                        cells = leafDataCells(this.thead);\n                    }\n                } else {\n                    cells = $(this.lockedHeader).add(this.thead).find('tr:not(.k-filter-row) th');\n                }\n                columns = leafColumns(this.columns);\n                if (filterable && typeof filterable.mode == STRING && filterable.mode.indexOf('menu') == -1) {\n                    filterable = false;\n                }\n                if (!filterable) {\n                    return;\n                }\n                for (idx = 0, length = cells.length; idx < length; idx++) {\n                    column = columns[idx];\n                    cell = cells.eq(idx);\n                    filterMenuInstance = cell.data('kendoFilterMenu');\n                    if (filterMenuInstance) {\n                        filterMenuInstance.destroy();\n                    }\n                    if (column.command || column.filterable === false || column.selectable) {\n                        continue;\n                    }\n                    cell.kendoFilterMenu(extend(true, {}, filterable, column.filterable, {\n                        dataSource: this.dataSource,\n                        init: filterInit,\n                        open: filterOpen,\n                        appendTo: DOT + classNames.headerCellInner\n                    }));\n                }\n            },\n            _filterRow: function () {\n                var that = this;\n                if (!that._hasFilterRow()) {\n                    return;\n                }\n                var settings;\n                var $angular = that.options.$angular;\n                var uidAttr = kendo.attr('uid');\n                var columns = leafColumns(that.columns), filterable = that.options.filterable, filterHandler = function (e) {\n                        if (that.trigger('filter', {\n                                filter: e.filter,\n                                field: e.field\n                            })) {\n                            e.preventDefault();\n                        }\n                    }, existingInstance;\n                for (var i = 0; i < columns.length; i++) {\n                    var suggestDataSource, col = columns[i], operators = that.options.filterable.operators, customDataSource = false, th = this.wrapper.find('.k-grid-header .k-filter-row th[' + uidAttr + '=\"' + col.headerAttributes.id + '\"]'), field = col.field, parentColumn = col.parentColumn;\n                    delete col.parentColumn;\n                    if (field && col.filterable !== false) {\n                        var cellOptions = col.filterable && col.filterable.cell || {};\n                        existingInstance = th.find('.k-filtercell').data('kendoFilterCell');\n                        if (existingInstance) {\n                            existingInstance.destroy();\n                            th.empty();\n                        }\n                        suggestDataSource = that.options.dataSource;\n                        if (suggestDataSource instanceof DataSource) {\n                            suggestDataSource = that.options.dataSource.options;\n                        }\n                        var messages = extend(true, {}, filterable.messages);\n                        if (col.filterable) {\n                            extend(true, messages, col.filterable.messages);\n                        }\n                        if (cellOptions.enabled === false) {\n                            th.html('&nbsp;');\n                            continue;\n                        }\n                        if (cellOptions.dataSource) {\n                            suggestDataSource = cellOptions.dataSource;\n                            customDataSource = true;\n                        }\n                        if (col.filterable && col.filterable.operators) {\n                            operators = col.filterable.operators;\n                        }\n                        settings = {\n                            column: col,\n                            dataSource: that.dataSource,\n                            suggestDataSource: suggestDataSource,\n                            customDataSource: customDataSource,\n                            field: field,\n                            messages: messages,\n                            values: col.values,\n                            template: cellOptions.template,\n                            delay: cellOptions.delay,\n                            inputWidth: cellOptions.inputWidth,\n                            suggestionOperator: cellOptions.suggestionOperator,\n                            minLength: cellOptions.minLength,\n                            dataTextField: cellOptions.dataTextField,\n                            operator: cellOptions.operator,\n                            operators: operators,\n                            showOperators: cellOptions.showOperators,\n                            change: filterHandler\n                        };\n                        if ($angular) {\n                            settings.$angular = $angular;\n                        }\n                        $('<span/>').attr(kendo.attr('field'), field).appendTo(th).kendoFilterCell(settings);\n                        col.parentColumn = parentColumn;\n                    } else {\n                        th.html('&nbsp;');\n                    }\n                }\n            },\n            _hasFilterRow: function () {\n                var filterable = this.options.filterable;\n                var hasFiltering = filterable && typeof filterable.mode == STRING && filterable.mode.indexOf('row') != -1;\n                var columns = this.columns;\n                var columnsWithoutFiltering = $.grep(columns, function (col) {\n                    return col.filterable === false;\n                });\n                if (columns.length && columnsWithoutFiltering.length == columns.length) {\n                    hasFiltering = false;\n                }\n                return hasFiltering;\n            },\n            _change: function () {\n                var that = this;\n                var selectedValues;\n                if (that._checkBoxSelection) {\n                    selectedValues = that.selectable.value();\n                    that._uncheckCheckBoxes();\n                    that._checkRows(selectedValues);\n                    if (selectedValues.length && selectedValues.length === that.items().length) {\n                        that._toggleHeaderCheckState(true);\n                    } else {\n                        that._toggleHeaderCheckState(false);\n                    }\n                }\n                this.trigger(CHANGE);\n            },\n            _isLocked: function () {\n                return this.lockedHeader !== null;\n            },\n            _selectable: function () {\n                var that = this;\n                var selectable = this.options.selectable;\n                var filter;\n                var element = this.table;\n                var useAllItems;\n                var isLocked = that._isLocked();\n                var multi;\n                var cell;\n                if (selectable) {\n                    selectable = kendo.ui.Selectable.parseOptions(selectable);\n                    if (this._hasLockedColumns) {\n                        element = element.add(this.lockedTable);\n                        useAllItems = selectable.multiple && selectable.cell;\n                    }\n                    filter = '>tbody>tr:not(.k-footer-template)';\n                    if (selectable.cell) {\n                        filter = filter + '>td';\n                    }\n                    this.selectable = new kendo.ui.Selectable(element, {\n                        filter: filter,\n                        aria: true,\n                        multiple: selectable.multiple,\n                        change: proxy(this._change, this),\n                        useAllItems: useAllItems,\n                        continuousItems: proxy(this._continuousItems, this, filter, selectable.cell),\n                        relatedTarget: !selectable.cell && this._hasLockedColumns ? proxy(this._selectableTarget, this) : undefined\n                    });\n                    if (that.options.navigatable) {\n                        multi = selectable.multiple;\n                        cell = selectable.cell;\n                        element.on('keydown' + NS, function (e) {\n                            var current = that.current();\n                            var target = e.target;\n                            if (e.keyCode === keys.SPACEBAR && !e.shiftKey && $.inArray(target, element) > -1 && !current.is('.k-header')) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                current = cell ? current : current.parent();\n                                if (isLocked && !cell) {\n                                    current = current.add(that._relatedRow(current));\n                                }\n                                if (multi) {\n                                    if (!e.ctrlKey) {\n                                        that.selectable.clear();\n                                    } else {\n                                        if (current.hasClass(classNames.selected)) {\n                                            current.removeClass(classNames.selected);\n                                            that.trigger(CHANGE);\n                                            return;\n                                        }\n                                    }\n                                } else {\n                                    that.selectable.clear();\n                                }\n                                if (!cell) {\n                                    that.selectable._lastActive = current;\n                                }\n                                that.selectable.value(current);\n                            } else if (!cell && (e.shiftKey && e.keyCode == keys.LEFT || e.shiftKey && e.keyCode == keys.RIGHT || e.shiftKey && e.keyCode == keys.UP || e.shiftKey && e.keyCode == keys.DOWN || e.keyCode === keys.SPACEBAR && e.shiftKey)) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                current = current.parent();\n                                if (isLocked) {\n                                    current = current.add(that._relatedRow(current));\n                                }\n                                if (multi) {\n                                    if (!that.selectable._lastActive) {\n                                        that.selectable._lastActive = current;\n                                    }\n                                    that.selectable.selectRange(that.selectable._firstSelectee(), current);\n                                } else {\n                                    that.selectable.clear();\n                                    that.selectable.value(current);\n                                }\n                            }\n                        });\n                    }\n                }\n            },\n            _continuousItems: function (filter, cell) {\n                if (!this.lockedContent) {\n                    return;\n                }\n                var lockedItems = $(filter, this.lockedTable);\n                var nonLockedItems = $(filter, this.table);\n                var columns = cell ? lockedColumns(this.columns).length : 1;\n                var nonLockedColumns = cell ? this.columns.length - columns : 1;\n                var result = [];\n                for (var idx = 0; idx < lockedItems.length; idx += columns) {\n                    push.apply(result, lockedItems.slice(idx, idx + columns));\n                    push.apply(result, nonLockedItems.splice(0, nonLockedColumns));\n                }\n                return result;\n            },\n            _selectableTarget: function (items) {\n                var related;\n                var result = $();\n                for (var idx = 0, length = items.length; idx < length; idx++) {\n                    related = this._relatedRow(items[idx]);\n                    if (inArray(related[0], items) < 0) {\n                        result = result.add(related);\n                    }\n                }\n                return result;\n            },\n            _relatedRow: function (row) {\n                var lockedTable = this.lockedTable;\n                row = $(row);\n                if (!lockedTable) {\n                    return row;\n                }\n                var table = row.closest(this.table.add(this.lockedTable));\n                var index = table.find('>tbody>tr').index(row);\n                table = table[0] === this.table[0] ? lockedTable : this.table;\n                return table.find('>tbody>tr').eq(index);\n            },\n            select: function (value) {\n                var that = this;\n                var selectable = this.selectable;\n                if (that._checkBoxSelection) {\n                    if (value) {\n                        that._checkRows(value);\n                        if (that.select().length === that.items().length) {\n                            that._toggleHeaderCheckState(true);\n                        }\n                    }\n                    return that.items().filter('.' + SELECTED);\n                }\n                if (!selectable) {\n                    return $();\n                }\n                if (typeof value !== 'undefined') {\n                    if (!selectable.options.multiple) {\n                        selectable.clear();\n                        value = value.first();\n                    }\n                    if (this._hasLockedColumns) {\n                        value = value.add($.map(value, proxy(this._relatedRow, this)));\n                    }\n                }\n                return selectable.value(value);\n            },\n            clearSelection: function () {\n                var that = this;\n                if (that.selectable && !that._checkBoxSelection) {\n                    that.selectable.clear();\n                }\n                if (that._checkBoxSelection) {\n                    that._deselectCheckRows(that.select(), true);\n                    return;\n                }\n            },\n            _uncheckCheckBoxes: function () {\n                var that = this;\n                var tables = that.table.add(that.lockedTable);\n                tables.find('tbody ' + CHECKBOXINPUT).attr('aria-checked', false).prop('checked', false).attr('aria-label', 'Select row');\n            },\n            _deselectCheckRows: function (items, preventChange) {\n                var that = this;\n                items = that.table.add(that.lockedTable).find(items);\n                if (that._isLocked()) {\n                    items = items.add(items.map(function () {\n                        return that._relatedRow(this);\n                    }));\n                }\n                items.each(function () {\n                    $(this).removeClass(SELECTED).find(CHECKBOXINPUT).attr('aria-checked', false).prop('checked', false).attr('aria-label', 'Select row');\n                });\n                that._toggleHeaderCheckState(false);\n                if (!preventChange) {\n                    that.trigger(CHANGE);\n                }\n            },\n            _headerCheckboxClick: function (e) {\n                var that = this, checkBox = $(e.target), checked = checkBox.prop('checked'), parentGrid = checkBox.closest('.k-grid.k-widget').getKendoTreeList();\n                if (that !== parentGrid) {\n                    return;\n                }\n                if (checked) {\n                    that.select(parentGrid.items());\n                } else {\n                    that.clearSelection();\n                }\n                that.trigger(CHANGE);\n            },\n            _checkboxClick: function (e) {\n                var that = this, row = $(e.target).closest('tr'), isSelecting = !row.hasClass(SELECTED), dataItem = that.dataItem(row), children = [], selector = '';\n                if (that !== row.closest('.k-grid.k-widget').getKendoTreeList()) {\n                    return;\n                }\n                if (that._includeChildren) {\n                    that.dataSource.allChildNodes(dataItem, children);\n                    for (var i = 0; i < children.length; i++) {\n                        selector += 'tr[data-uid=\\'' + children[i].uid + '\\'],';\n                    }\n                }\n                selector += 'tr[data-uid=\\'' + dataItem.uid + '\\']';\n                row = $(selector);\n                if (isSelecting) {\n                    that.select(row);\n                    that.trigger(CHANGE);\n                } else {\n                    that._deselectCheckRows(row);\n                }\n            },\n            _checkRows: function (items) {\n                items.each(function () {\n                    $(this).addClass(SELECTED).find(CHECKBOXINPUT).prop('checked', true).attr('aria-label', 'Deselect row').attr('aria-checked', true);\n                });\n            },\n            _toggleHeaderCheckState: function (checked) {\n                var that = this;\n                if (checked) {\n                    that.thead.add(that.lockedHeader).find('tr ' + CHECKBOXINPUT).prop('checked', true).attr('aria-checked', true).attr('aria-label', 'Deselect all rows');\n                } else {\n                    that.thead.add(that.lockedHeader).find('tr ' + CHECKBOXINPUT).prop('checked', false).attr('aria-checked', false).attr('aria-label', 'Select all rows');\n                }\n            },\n            _dataSource: function (dataSource) {\n                var that = this;\n                var ds = this.dataSource;\n                var pageable = that.options.pageable;\n                if (ds) {\n                    ds.unbind(CHANGE, this._refreshHandler);\n                    ds.unbind(ERROR, this._errorHandler);\n                    ds.unbind(SORT, this._sortHandler);\n                    ds.unbind(PROGRESS, this._progressHandler);\n                }\n                this._refreshHandler = proxy(this.refresh, this);\n                this._errorHandler = proxy(this._error, this);\n                this._sortHandler = proxy(this._clearSortClasses, this);\n                this._progressHandler = proxy(this._progress, this);\n                if (isPlainObject(dataSource)) {\n                    extend(dataSource, {\n                        table: that.table,\n                        fields: that.columns\n                    });\n                    if (isPlainObject(pageable) && pageable.pageSize !== undefined) {\n                        dataSource.pageSize = pageable.pageSize;\n                    }\n                }\n                ds = this.dataSource = TreeListDataSource.create(dataSource);\n                if (pageable) {\n                    ds._collapsedTotal = undefined;\n                }\n                ds.bind(CHANGE, this._refreshHandler);\n                ds.bind(ERROR, this._errorHandler);\n                ds.bind(SORT, this._sortHandler);\n                ds.bind(PROGRESS, this._progressHandler);\n                this._dataSourceFetchProxy = proxy(function () {\n                    this.dataSource.fetch();\n                }, this);\n            },\n            setDataSource: function (dataSource) {\n                this._dataSource(dataSource);\n                this._sortable();\n                this._filterable();\n                this._filterRow();\n                this._columnMenu();\n                this._pageable();\n                this._contentTree.render([]);\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            dataItem: function (element) {\n                if (element instanceof TreeListModel) {\n                    return element;\n                }\n                var row = $(element).closest('tr');\n                var uid = row.attr(kendo.attr('uid'));\n                var model = isUndefined(uid) ? null : this.dataSource.getByUid(uid);\n                return model;\n            },\n            editRow: function (row) {\n                var that = this;\n                var model;\n                if (this._isIncellEditable() || !this.options.editable) {\n                    return;\n                }\n                if (typeof row === STRING) {\n                    row = this.tbody.find(row);\n                }\n                if (that._isPageable() && that._isPopupEditable() && row instanceof TreeListModel) {\n                    model = row;\n                } else {\n                    model = this.dataItem(row);\n                }\n                if (!model) {\n                    return;\n                }\n                if (that.editor) {\n                    model._edit = true;\n                    this._render();\n                    this._cancelEditor();\n                } else {\n                    that._preventPageSizeRestore = false;\n                }\n                if (this._editMode() != 'popup') {\n                    model._edit = true;\n                }\n                if (this.trigger(BEFORE_EDIT, { model: model })) {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                    return;\n                }\n                this._render();\n                this._createEditor(model);\n                this.trigger(EDIT, {\n                    container: this.editor.wrapper,\n                    model: model\n                });\n            },\n            _cancelEdit: function (e) {\n                if (!this.editor) {\n                    return;\n                }\n                var currentIndex;\n                e = extend(e, {\n                    container: this.editor.wrapper,\n                    model: this.editor.model\n                });\n                if (this.trigger(CANCEL, e)) {\n                    return;\n                }\n                if (this.options.navigatable) {\n                    currentIndex = this.items().index($(this.current()).parent());\n                }\n                this.cancelRow();\n                if (this.options.navigatable) {\n                    this.current(this.items().eq(currentIndex).children().filter(NAVCELL).first());\n                    focusTable(this.table, true);\n                }\n            },\n            cancelRow: function () {\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                this._cancelEditor();\n                this._render();\n            },\n            saveRow: function () {\n                var editor = this.editor;\n                var args;\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                if (!editor) {\n                    return;\n                }\n                args = {\n                    model: editor.model,\n                    container: editor.wrapper\n                };\n                if (editor.end() && !this.trigger(SAVE, args)) {\n                    this.dataSource.sync();\n                }\n            },\n            addRow: function (parent) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var pageable = that._isPageable();\n                var incellEditing = that._isIncellEditable();\n                var inlineEditing = that._isInlineEditable();\n                var editor = this.editor;\n                var index = 0;\n                var model = {};\n                if (editor && !editor.end() || !this.options.editable) {\n                    return;\n                }\n                if (parent) {\n                    if (!(parent instanceof TreeListModel)) {\n                        parent = this.dataItem(parent);\n                    }\n                    model[parent.parentIdField] = parent.id;\n                    index = this.dataSource.indexOf(parent) + 1;\n                    this.expand(parent).then(function () {\n                        var showNewModelInView = pageable && dataSource._isLastItemInView(parent) && (incellEditing || inlineEditing);\n                        that._insertAt(model, index, showNewModelInView);\n                    });\n                    return;\n                }\n                this._insertAt(model, index);\n            },\n            _insertAt: function (model, index, showNewModelInView) {\n                var that = this;\n                var dataSource = that.dataSource;\n                model = that.dataSource.insert(index, model);\n                if (showNewModelInView) {\n                    dataSource._setAddChildPageSize();\n                }\n                var row = this._itemFor(model);\n                var cell;\n                if (that._isIncellEditable()) {\n                    cell = row.children('td').eq(that._firstEditableColumnIndex(row));\n                    that.editCell(cell);\n                } else if (row && row[0]) {\n                    that.editRow(row);\n                } else if (that._isPageable() && that._isPopupEditable()) {\n                    that.editRow(model);\n                }\n            },\n            _firstEditableColumnIndex: function (container) {\n                var that = this;\n                var model = that.dataItem(container);\n                var columns = leafColumns(that.columns);\n                var length = columns.length;\n                var column;\n                var idx;\n                for (idx = 0; idx < length; idx++) {\n                    column = columns[idx];\n                    if (model && (!model.editable || model.editable(column.field)) && !column.command && column.field && column.hidden !== true) {\n                        return idx;\n                    }\n                }\n                return -1;\n            },\n            removeRow: function (row) {\n                var model = this.dataItem(row);\n                var args = {\n                    model: model,\n                    row: row\n                };\n                if (this.options.editable && model && !this.trigger(REMOVE, args)) {\n                    if (document.activeElement === $(row).find('.k-grid-delete')[0]) {\n                        $(row).find('.k-grid-delete').trigger('blur');\n                    }\n                    this.dataSource.remove(model);\n                    if (!this._isIncellEditable()) {\n                        this.dataSource.sync();\n                    }\n                }\n            },\n            _cancelEditor: function () {\n                var that = this;\n                var model;\n                var editor = that.editor;\n                if (editor) {\n                    model = editor.model;\n                    that._destroyEditor();\n                    if (!that._isIncellEditable()) {\n                        that.dataSource.cancelChanges(model);\n                    } else if (that._shouldRestorePageSize()) {\n                        that.dataSource._restorePageSizeAfterAddChild();\n                    }\n                    model._edit = false;\n                }\n                that._preventPageSizeRestore = false;\n            },\n            _shouldRestorePageSize: function () {\n                var that = this;\n                return that._isPageable() && that._isIncellEditable() && !that._preventPageSizeRestore;\n            },\n            _destroyEditor: function () {\n                if (!this.editor) {\n                    return;\n                }\n                this.editor.close();\n                this.editor = null;\n            },\n            _createEditor: function (model) {\n                var row = this.itemFor(model);\n                var columns = leafColumns(this.columns);\n                var leafCols = [];\n                for (var idx = 0; idx < columns.length; idx++) {\n                    leafCols.push(extend({}, columns[idx]));\n                    delete leafCols[idx].parentColumn;\n                }\n                row = row.add(this._relatedRow(row));\n                var mode = this._editMode();\n                var options = {\n                    columns: leafCols,\n                    model: model,\n                    target: this,\n                    clearContainer: false,\n                    template: this.options.editable.template\n                };\n                if (mode == 'inline') {\n                    this.editor = new Editor(row, options);\n                } else {\n                    extend(options, {\n                        window: this.options.editable.window,\n                        commandRenderer: proxy(function () {\n                            return this._buildCommands([\n                                'update',\n                                'canceledit'\n                            ]);\n                        }, this),\n                        fieldRenderer: proxy(this._cellContent, this),\n                        save: proxy(this.saveRow, this),\n                        cancel: proxy(this._cancelEdit, this),\n                        appendTo: this.wrapper\n                    });\n                    this.editor = new PopupEditor(row, options);\n                }\n            },\n            _createIncellEditor: function (cell, options) {\n                var that = this;\n                var column = extend({}, options.columns[0]);\n                delete column.parentColumn;\n                return new IncellEditor(cell, extend({}, {\n                    fieldRenderer: proxy(that._cellContent, that),\n                    appendTo: that.wrapper,\n                    clearContainer: false,\n                    target: that,\n                    columns: [column],\n                    model: options.model,\n                    change: options.change\n                }));\n            },\n            editCell: function (cell) {\n                var that = this;\n                cell = $(cell);\n                var column = leafColumns(that.columns)[that.cellIndex(cell)];\n                var model = that.dataItem(cell);\n                if (that._isIncellEditable() && model && isColumnEditable(column, model)) {\n                    that._editCell(cell, column, model);\n                }\n            },\n            _editCell: function (cell, column, model) {\n                var that = this;\n                var editedCell;\n                if (that.trigger(BEFORE_EDIT, { model: model })) {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                    return;\n                }\n                that.closeCell();\n                model._edit = true;\n                that._cancelEditor();\n                that._render({\n                    editedColumn: column,\n                    editedColumnIndex: cell.index()\n                });\n                editedCell = that.table.add(that.lockedTable).find(DOT + classNames.editCell).first();\n                that.editor = that._createIncellEditor(editedCell, {\n                    columns: [column],\n                    model: model,\n                    change: function (e) {\n                        if (that.trigger(SAVE, {\n                                values: e.values,\n                                container: cell,\n                                model: model\n                            })) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n                that._current = editedCell;\n                that.trigger(EDIT, {\n                    container: cell,\n                    model: model\n                });\n            },\n            closeCell: function (isCancel) {\n                var that = this;\n                var cell = (that.editor || {}).element;\n                var tr;\n                var model;\n                if (!cell || !cell[0] || !that._isIncellEditable()) {\n                    return;\n                }\n                model = that.dataItem(cell);\n                if (isCancel && that.trigger(CANCEL, {\n                        container: cell,\n                        model: model\n                    })) {\n                    return;\n                }\n                that.trigger(CELL_CLOSE, {\n                    type: isCancel ? CANCEL : SAVE,\n                    model: model,\n                    container: cell\n                });\n                that._cancelEditor();\n                cell.removeClass(classNames.editCell);\n                tr = cell.parent().removeClass(classNames.editRow);\n                if (that.lockedContent) {\n                    that._relatedRow(tr).removeClass(classNames.editRow);\n                }\n                that._render();\n                that.trigger(ITEM_CHANGE, {\n                    item: tr,\n                    data: model,\n                    ns: ui\n                });\n                if (that.lockedContent) {\n                    adjustRowHeight(tr.css('height', '')[0], that._relatedRow(tr).css('height', '')[0]);\n                }\n            },\n            cancelChanges: function () {\n                this.dataSource.cancelChanges();\n            },\n            saveChanges: function () {\n                var that = this;\n                var editable = (that.editor || {}).editable;\n                var valid = editable && editable.end();\n                if ((valid || !editable) && !that.trigger(SAVE_CHANGES)) {\n                    that.dataSource.sync();\n                }\n            },\n            _editMode: function () {\n                var mode = 'inline', editable = this.options.editable;\n                if (editable !== true) {\n                    if (typeof editable == 'string') {\n                        mode = editable;\n                    } else {\n                        mode = editable.mode || mode;\n                    }\n                }\n                return mode.toLowerCase();\n            },\n            _isIncellEditable: function () {\n                return this._editMode() === INCELL;\n            },\n            _isInlineEditable: function () {\n                return this._editMode() === INLINE;\n            },\n            _isPopupEditable: function () {\n                return this._editMode() === POPUP;\n            },\n            hideColumn: function (column) {\n                this._toggleColumnVisibility(column, true);\n            },\n            showColumn: function (column) {\n                this._toggleColumnVisibility(column, false);\n            },\n            _toggleColumnVisibility: function (column, hidden) {\n                column = this._findColumn(column);\n                if (!column || column.hidden === hidden) {\n                    return;\n                }\n                column.hidden = hidden;\n                this._setParentsVisibility(column, !hidden);\n                this._ensureExpandableColumn();\n                this._clearColsCache();\n                this._renderCols();\n                this._renderHeader();\n                this._render();\n                this._adjustTablesWidth();\n                this.trigger(hidden ? COLUMNHIDE : COLUMNSHOW, { column: column });\n                if (!hidden && !column.width) {\n                    this.table.add(this.thead.closest('table')).width('');\n                }\n                this._updateFirstColumnClass();\n            },\n            _findColumn: function (column) {\n                if (typeof column == 'number') {\n                    column = this.columns[column];\n                } else if (isPlainObject(column)) {\n                    column = grep(leafColumns(this.columns), function (item) {\n                        return item === column;\n                    })[0];\n                } else {\n                    column = grep(leafColumns(this.columns), function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                return column;\n            },\n            _adjustTablesWidth: function () {\n                var idx, length;\n                var cols = this.thead.prev().children();\n                var colWidth, width = 0;\n                for (idx = 0, length = cols.length; idx < length; idx++) {\n                    colWidth = cols[idx].style.width;\n                    if (colWidth && colWidth.indexOf('%') == -1) {\n                        width += parseInt(colWidth, 10);\n                    } else {\n                        width = 0;\n                        break;\n                    }\n                }\n                if (width) {\n                    this.table.add(this.thead.closest('table')).width(width);\n                }\n            },\n            _reorderable: function () {\n                if (!this.options.reorderable) {\n                    return;\n                }\n                var scrollable = this.options.scrollable === true;\n                var selector = (scrollable ? '.k-grid-header:first ' : 'table:first>.k-grid-header ') + HEADERCELLS;\n                var that = this;\n                this._draggableInstance = new ui.Draggable(this.wrapper, {\n                    group: kendo.guid(),\n                    filter: selector,\n                    hint: function (target) {\n                        return $('<div class=\"k-reorder-clue k-drag-clue\" />').html(target.attr(kendo.attr('title')) || target.attr(kendo.attr('field')) || target.text()).prepend('<span class=\"k-icon k-drag-status k-i-cancel\" />');\n                    }\n                });\n                this.reorderable = new ui.Reorderable(this.wrapper, {\n                    draggable: this._draggableInstance,\n                    dragOverContainers: proxy(this._allowDragOverContainers, this),\n                    inSameContainer: function (e) {\n                        return $(e.source).parent()[0] === $(e.target).parent()[0] && targetParentContainerIndex(flatColumnsInDomOrder(that.columns), that.columns, e.sourceIndex, e.targetIndex) > -1;\n                    },\n                    change: function (e) {\n                        var columns = flatColumnsInDomOrder(that.columns);\n                        var column = columns[e.oldIndex];\n                        var newIndex = targetParentContainerIndex(columns, that.columns, e.oldIndex, e.newIndex);\n                        that.trigger(COLUMNREORDER, {\n                            newIndex: newIndex,\n                            oldIndex: inArray(column, columns),\n                            column: column\n                        });\n                        that.reorderColumn(newIndex, column, e.position === 'before');\n                    }\n                });\n            },\n            _allowDragOverContainers: function (sourceIndex, targetIndex) {\n                var columns = flatColumnsInDomOrder(this.columns);\n                return columns[sourceIndex].lockable !== false && targetParentContainerIndex(columns, this.columns, sourceIndex, targetIndex) > -1;\n            },\n            _reorderTrees: function (destSources, destContainer, destDomTree, sources, sourcesContainer, sourcesDomTree, before, depth) {\n                var ths = $();\n                var source = sourcesContainer.find('tr').eq(sources[0].rowIndex);\n                var sourceDOM = sourcesDomTree.children[sources[0].rowIndex];\n                var sourceChildren = source.children();\n                var destDomChildren;\n                var currentIndex;\n                var destColumn = before ? destSources[0] : destSources[destSources.length - 1];\n                var destRow;\n                var sourcesLeafs;\n                var destLeafs;\n                var reorderTaget;\n                var destThs;\n                for (var idx = 0; idx < sources.length; idx++) {\n                    currentIndex = sources[idx].cellIndex;\n                    ths = ths.add(sourceChildren.eq(currentIndex));\n                    destDomChildren = destDomTree.children[destColumn.rowIndex].children;\n                    if (destDomTree === sourcesDomTree && before) {\n                        currentIndex += idx;\n                    }\n                    destDomChildren.splice(before ? destColumn.cellIndex + idx : destColumn.cellIndex + 1 + idx, 0, sourceDOM.children[currentIndex]);\n                }\n                if (destDomTree === sourcesDomTree && before) {\n                    sourceDOM.children.splice(sources[0].cellIndex + sources.length, sources.length);\n                } else {\n                    sourceDOM.children.splice(sources[0].cellIndex, sources.length);\n                }\n                destRow = destContainer.find('tr').eq(destColumn.rowIndex);\n                destThs = destRow.find('>th.k-header').eq(destColumn.cellIndex);\n                if (destThs.length && ths[0] !== destThs[0]) {\n                    ths[before ? 'insertBefore' : 'insertAfter'](destThs);\n                }\n                if (depth >= sources[0].rowIndex + 1 && depth != 1) {\n                    sourcesLeafs = [];\n                    for (idx = 0; idx < sources.length; idx++) {\n                        if (sources[idx].columns) {\n                            sourcesLeafs = sourcesLeafs.concat(sources[idx].columns);\n                        }\n                    }\n                    if (!sourcesLeafs.length) {\n                        return;\n                    }\n                    destLeafs = [];\n                    for (idx = 0; idx < destSources.length; idx++) {\n                        if (destSources[idx].columns) {\n                            destLeafs = destLeafs.concat(destSources[idx].columns);\n                        }\n                    }\n                    if (!destLeafs.length && (destContainer !== sourcesContainer || (destColumn.cellIndex - sources[0].cellIndex > 1 || sources[0].cellIndex - destColumn.cellIndex > 1))) {\n                        reorderTaget = findReorderTarget(this.columns, destColumn, sources[0], before, this.columns);\n                        destLeafs = [reorderTaget];\n                        if (!reorderTaget && sourcesLeafs.length && destContainer.find('tr').length > sources[0].rowIndex + 1) {\n                            this._insertTree(sourcesLeafs, sourcesContainer, sourcesDomTree, destContainer, destDomTree);\n                            return;\n                        }\n                    }\n                    if (!destLeafs.length) {\n                        return;\n                    }\n                    this._reorderTrees(destLeafs, destContainer, destDomTree, sourcesLeafs, sourcesContainer, sourcesDomTree, before, depth);\n                }\n            },\n            _insertTree: function (columns, sourcesContainer, sourcesDomTree, destContainer, destDomTree) {\n                var leafs = [];\n                var row;\n                var ths = $();\n                var domTr;\n                row = sourcesContainer.find('tr').eq(columns[0].rowIndex);\n                domTr = sourcesDomTree.children[columns[0].rowIndex];\n                for (var idx = 0; idx < columns.length; idx++) {\n                    if (columns[idx].columns) {\n                        leafs = leafs.concat(columns[idx].columns);\n                    }\n                    destDomTree.children[columns[0].rowIndex].children.splice(idx, 0, domTr.children[columns[idx].rowIndex]);\n                    ths = ths.add(row.find('>th.k-header').eq(columns[idx].cellIndex));\n                }\n                sourcesDomTree.children[columns[0].rowIndex].children.splice(columns[0].cellIndex, columns.length);\n                destContainer.find('tr').eq(columns[0].rowIndex).append(ths);\n                if (leafs.length) {\n                    this._insertTree(leafs, sourcesContainer, sourcesDomTree, destContainer, destDomTree);\n                }\n            },\n            _reorderHeader: function (destColumn, column, before) {\n                var sourcesDepth = column.columns ? depth([column]) : 1;\n                var targetDepth = destColumn.columns ? depth([destColumn]) : 1;\n                var sourceLocked = isLocked(column);\n                var destLocked = isLocked(destColumn);\n                var destContainer = destLocked ? this.lockedHeader : this.thead;\n                var sourcesContainer = sourceLocked ? this.lockedHeader : this.thead;\n                var destDomTree = destLocked ? this._lockedHeaderTree : this._headerTree;\n                var sourcesDomTree = sourceLocked ? this._lockedHeaderTree : this._headerTree;\n                var rowsToAdd;\n                var destRows = destContainer.find('tr:not(.k-filter-row)');\n                var destTarget;\n                if (sourcesDepth === targetDepth || sourcesDepth < destRows.length) {\n                    this._reorderTrees([destColumn], destContainer, destDomTree, [column], sourcesContainer, sourcesDomTree, before, sourcesDepth);\n                    updateRowSpans(destContainer, destDomTree);\n                    removeEmptyRows(sourcesContainer, sourcesDomTree);\n                } else {\n                    if (destContainer !== sourcesContainer) {\n                        rowsToAdd = sourcesDepth - destRows.length;\n                        destRows.each(function (idx) {\n                            var cells = this.cells;\n                            for (var i = 0; i < cells.length; i++) {\n                                if (cells[i].colSpan <= 1 && cells[i].attributes.rowspan) {\n                                    destDomTree.children[idx].children[i].attr.rowSpan += rowsToAdd;\n                                    cells[i].rowSpan += rowsToAdd;\n                                }\n                            }\n                        });\n                        for (var j = 0; j < rowsToAdd; j++) {\n                            destDomTree.children.push(kendoDomElement('tr', { 'role': 'row' }));\n                            if (destContainer.is('thead')) {\n                                destTarget = destContainer;\n                            } else {\n                                destTarget = destContainer.find('thead');\n                            }\n                            if (this._hasFilterRow()) {\n                                $('<tr role=\\'row\\'></tr>').insertBefore(destTarget.find('tr.k-filter-row'));\n                            } else {\n                                destTarget.append('<tr role=\\'row\\'></tr>');\n                            }\n                        }\n                    }\n                    this._reorderTrees([destColumn], destContainer, destDomTree, [column], sourcesContainer, sourcesDomTree, before, sourcesDepth);\n                    removeEmptyRows(sourcesContainer, sourcesDomTree);\n                }\n            },\n            reorderColumn: function (destIndex, column, before) {\n                var lockChanged;\n                var parent = column.parentColumn;\n                var columns = parent ? parent.columns : this.columns;\n                var sourceIndex = inArray(column, columns);\n                var destColumn = columns[destIndex];\n                var isLocked = !!destColumn.locked;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                var nonLockedColumnsLength = nonLockedColumns(columns).length;\n                if (sourceIndex === destIndex) {\n                    return;\n                }\n                if (isLocked && !column.locked && nonLockedColumnsLength == 1) {\n                    return;\n                }\n                if (!isLocked && column.locked && columns.length - nonLockedColumnsLength == 1) {\n                    return;\n                }\n                if (before === undefined) {\n                    before = destIndex < sourceIndex;\n                }\n                if (hasMultiColumnHeaders) {\n                    this._reorderHeader(destColumn, column, before);\n                }\n                lockChanged = !!column.locked;\n                lockChanged = lockChanged != isLocked;\n                column.locked = isLocked;\n                columns.splice(before ? destIndex : destIndex + 1, 0, column);\n                columns.splice(sourceIndex < destIndex ? sourceIndex : sourceIndex + 1, 1);\n                this._setColumnDataIndexes(leafColumns(this.columns));\n                this._clearColsCache();\n                this._renderCols();\n                if (!hasMultiColumnHeaders) {\n                    var ths = $(this.lockedHeader).add(this.thead).find('tr:not(.k-filter-row) th');\n                    ths.eq(sourceIndex)[before ? 'insertBefore' : 'insertAfter'](ths.eq(destIndex));\n                    var dom = this._headerTree.children[0].children;\n                    if (this._hasLockedColumns) {\n                        dom = this._lockedHeaderTree.children[0].children.concat(dom);\n                    }\n                    dom.splice(before ? destIndex : destIndex + 1, 0, dom[sourceIndex]);\n                    dom.splice(sourceIndex < destIndex ? sourceIndex : sourceIndex + 1, 1);\n                    if (this._hasLockedColumns) {\n                        this._lockedHeaderTree.children[0].children = dom.splice(0, lockedColumns(columns).length);\n                        this._headerTree.children[0].children = dom;\n                    }\n                } else {\n                    if (this.lockedHeader) {\n                        columns = nonLockedColumns(this.columns);\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], columns);\n                        columns = lockedColumns(this.columns);\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], columns);\n                    } else {\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], this.columns);\n                    }\n                }\n                this._updateColumnCellIndex();\n                this._applyLockedContainersWidth();\n                this._syncLockedHeaderHeight();\n                this._updateFirstColumnClass();\n                if (this._hasFilterRow()) {\n                    this._updateFilterThs(before, column, destColumn);\n                }\n                this.refresh();\n                if (!lockChanged) {\n                    return;\n                }\n                if (isLocked) {\n                    this.trigger(COLUMNLOCK, { column: column });\n                } else {\n                    this.trigger(COLUMNUNLOCK, { column: column });\n                }\n            },\n            lockColumn: function (column) {\n                var columns = this.columns;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                var index = lockedColumns(columns).length - 1;\n                this.reorderColumn(index, column, false);\n            },\n            unlockColumn: function (column) {\n                var columns = this.columns;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                var index = lockedColumns(columns).length;\n                this.reorderColumn(index, column, true);\n            },\n            _columnMenu: function () {\n                var ths = $(this.lockedHeader).add(this.thead).find('th');\n                var columns = this.columns;\n                var options = this.options;\n                var columnMenu = options.columnMenu;\n                var column, menu, menuOptions, sortable, filterable;\n                var initHandler = proxy(this._columnMenuInit, this);\n                var openHandler = proxy(this._columnMenuOpen, this);\n                var hasLockableColumns = grep(this.columns, function (item) {\n                    return item.lockable !== false;\n                }).length > 0;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (hasMultiColumnHeaders) {\n                    columns = leafColumns(columns);\n                    if (this.lockedHeader) {\n                        ths = sortCells(leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead)));\n                    } else {\n                        ths = leafDataCells(this.thead);\n                    }\n                } else {\n                    ths = $(this.lockedHeader).add(this.thead).find('tr:not(.k-filter-row) th');\n                }\n                if (!columnMenu) {\n                    return;\n                }\n                if (typeof columnMenu == 'boolean') {\n                    columnMenu = {};\n                }\n                for (var i = 0; i < ths.length; i++) {\n                    column = columns[i];\n                    if (!column.field) {\n                        continue;\n                    }\n                    menu = ths.eq(i).data('kendoColumnMenu');\n                    if (menu) {\n                        menu.destroy();\n                    }\n                    sortable = false;\n                    if (column.sortable !== false && columnMenu.sortable !== false && options.sortable !== false) {\n                        sortable = extend({}, options.sortable, { compare: (column.sortable || {}).compare });\n                    }\n                    filterable = false;\n                    if (options.filterable && column.filterable !== false && columnMenu.filterable !== false) {\n                        filterable = extend({ pane: this.pane }, column.filterable, options.filterable);\n                    }\n                    menuOptions = {\n                        dataSource: this.dataSource,\n                        values: column.values,\n                        columns: columnMenu.columns,\n                        sortable: sortable,\n                        filterable: filterable,\n                        messages: columnMenu.messages,\n                        owner: this,\n                        closeCallback: $.noop,\n                        init: initHandler,\n                        open: openHandler,\n                        pane: this.pane,\n                        hasLockableColumns: lockedColumns(columns).length > 0 && hasLockableColumns && !hasMultiColumnHeaders,\n                        appendTo: DOT + classNames.headerCellInner\n                    };\n                    if (options.$angular) {\n                        menuOptions.$angular = options.$angular;\n                    }\n                    ths.eq(i).kendoColumnMenu(menuOptions);\n                }\n            },\n            _columnMenuInit: function (e) {\n                this.trigger(COLUMNMENUINIT, {\n                    field: e.field,\n                    container: e.container\n                });\n            },\n            _columnMenuOpen: function (e) {\n                this.trigger(COLUMNMENUOPEN, {\n                    field: e.field,\n                    container: e.container\n                });\n            },\n            _pageable: function () {\n                var that = this, wrapper, pageable = that.options.pageable;\n                if (pageable) {\n                    wrapper = that.wrapper.children('div.k-grid-pager');\n                    if (!wrapper.length) {\n                        wrapper = $('<div class=\"k-pager-wrap k-grid-pager\"/>').appendTo(that.wrapper);\n                    }\n                    that._destroyPager();\n                    if (typeof pageable === 'object' && pageable instanceof kendo.ui.TreeListPager) {\n                        that.pager = pageable;\n                    } else if (that.dataSource && !that.dataSource.options.serverPaging) {\n                        that._createPager(wrapper);\n                    }\n                    if (that.pager) {\n                        that.pager.bind(PAGE_CHANGE, function (e) {\n                            if (that.trigger(PAGE, { page: e.index })) {\n                                e.preventDefault();\n                            }\n                        });\n                    }\n                }\n            },\n            _createPager: function (element, options) {\n                var that = this;\n                that.pager = new TreeListPager(element, extend({}, that.options.pageable, {\n                    dataSource: that.dataSource,\n                    navigatable: that.options.navigatable\n                }, options));\n            },\n            _destroyPager: function () {\n                if (this.pager) {\n                    this.pager.destroy();\n                    this.pager = null;\n                }\n            },\n            _isPageable: function () {\n                var that = this;\n                return that.options.pageable && (!that.dataSource || that.dataSource && that.dataSource._isPageable());\n            },\n            _togglePagerVisibility: function () {\n                var that = this;\n                var pageable = that.options.pageable;\n                if (pageable && (isPlainObject(pageable) || pageable instanceof TreeListPager) && pageable.alwaysVisible === false) {\n                    that.wrapper.find('.k-grid-pager').toggle((that.dataSource.collapsedTotal() || 0) >= that.dataSource.pageSize());\n                }\n            }\n        });\n        function isInputElement(element) {\n            return $(element).is(':button,a,:input,a>.k-icon,textarea,span.k-select,span.k-icon,span.k-link,.k-input,.k-multiselect-wrap,.k-tool-icon');\n        }\n        function isLocked(column) {\n            if (!column.parentColumn) {\n                return !!column.locked;\n            }\n            return !!isLocked(column.parentColumn);\n        }\n        function findParentColumnWithChildren(columns, index, source, rtl) {\n            var target;\n            var locked = !!source.locked;\n            var targetLocked;\n            do {\n                target = columns[index];\n                index += rtl ? 1 : -1;\n                targetLocked = !!target.locked;\n            } while (target && index > -1 && index < columns.length && target != source && !target.columns && targetLocked === locked);\n            return target;\n        }\n        function findReorderTarget(columns, target, source, before, masterColumns) {\n            if (target.columns) {\n                target = target.columns;\n                return target[before ? 0 : target.length - 1];\n            } else {\n                var parent = columnParent(target, columns);\n                var parentColumns;\n                if (parent) {\n                    parentColumns = parent.columns;\n                } else {\n                    parentColumns = columns;\n                }\n                var index = inArray(target, parentColumns);\n                if (index === 0 && before && parentColumns.length !== 1) {\n                    index++;\n                } else if (index == parentColumns.length - 1 && !before && index !== 0) {\n                    index--;\n                } else if (index > 0 || index === 0 && !before && index !== 0) {\n                    index += before ? -1 : 1;\n                }\n                var sourceIndex = inArray(source, parentColumns);\n                target = findParentColumnWithChildren(parentColumns, index, source, sourceIndex > index);\n                var targetIndex = inArray(target, masterColumns);\n                if (target.columns && (!targetIndex || targetIndex === parentColumns.length - 1)) {\n                    return null;\n                }\n                if (target && target != source && target.columns) {\n                    return findReorderTarget(columns, target, source, before, masterColumns);\n                }\n            }\n            return null;\n        }\n        function leafColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (!columns[idx].columns) {\n                    result.push(columns[idx]);\n                    continue;\n                }\n                result = result.concat(leafColumns(columns[idx].columns));\n            }\n            return result;\n        }\n        function getColumnsFields(columns) {\n            var result = [];\n            columns = leafColumns(columns);\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (typeof columns[idx] === 'string') {\n                    result.push(columns[idx]);\n                } else if (columns[idx].field) {\n                    result.push(columns[idx].field);\n                }\n            }\n            return result;\n        }\n        function visibleChildColumns(columns) {\n            return grep(columns, function (column) {\n                return !column.hidden;\n            });\n        }\n        function isVisible(column) {\n            return visibleColumns([column]).length > 0;\n        }\n        function visibleColumns(columns) {\n            return grep(columns, function (column) {\n                var result = !column.hidden;\n                if (result && column.columns) {\n                    result = visibleColumns(column.columns).length > 0;\n                }\n                return result;\n            });\n        }\n        function normalizeColumns(columns, hide, parentIds) {\n            return map(columns, function (column) {\n                var hidden;\n                column.parentIds = parentIds;\n                if (!isVisible(column) || hide) {\n                    hidden = true;\n                }\n                var uid = kendo.guid();\n                column.headerAttributes = extend({ headers: parentIds }, column.headerAttributes);\n                if (!column.headerAttributes || !column.headerAttributes.id) {\n                    column.headerAttributes = extend({ id: uid }, column.headerAttributes);\n                } else {\n                    uid = column.headerAttributes.id;\n                }\n                if (column.columns) {\n                    column.columns = normalizeColumns(column.columns, hidden, parentIds ? parentIds + ' ' + uid : uid);\n                }\n                return extend({ hidden: hidden }, column);\n            });\n        }\n        function flatColumnsInDomOrder(columns) {\n            var result = flatColumns(lockedColumns(columns));\n            return result.concat(flatColumns(nonLockedColumns(columns)));\n        }\n        function targetParentContainerIndex(flatColumns, columns, sourceIndex, targetIndex) {\n            var column = flatColumns[sourceIndex];\n            var target = flatColumns[targetIndex];\n            var parent = columnParent(column, columns);\n            columns = parent ? parent.columns : columns;\n            return inArray(target, columns);\n        }\n        function parentColumnsCells(cell) {\n            var container = cell.closest('table');\n            var result = $().add(cell);\n            var row = cell.closest('tr');\n            var headerRows = container.find('tr');\n            var level = headerRows.index(row);\n            if (level > 0) {\n                var parent = headerRows.eq(level - 1);\n                var parentCellsWithChildren = parent.find('th').filter(function () {\n                    return !$(this).attr('rowspan');\n                });\n                var offset = 0;\n                var index = row.find('th').index(cell);\n                var prevCells = cell.prevAll().filter(function () {\n                    return this.colSpan > 1;\n                });\n                for (var idx = 0; idx < prevCells.length; idx++) {\n                    offset += prevCells[idx].colSpan || 1;\n                }\n                index += Math.max(offset - 1, 0);\n                offset = 0;\n                for (idx = 0; idx < parentCellsWithChildren.length; idx++) {\n                    var parentCell = parentCellsWithChildren.eq(idx);\n                    if (parentCell.attr('data-colspan')) {\n                        offset += parentCell[0].getAttribute('data-colspan');\n                    } else {\n                        offset += 1;\n                    }\n                    if (index >= idx && index < offset) {\n                        result = parentColumnsCells(parentCell).add(result);\n                        break;\n                    }\n                }\n            }\n            return result;\n        }\n        function childColumnsCells(cell) {\n            var container = cell.closest('thead');\n            var result = $().add(cell);\n            var row = cell.closest('tr');\n            var headerRows = container.find('tr');\n            var level = headerRows.index(row) + cell[0].rowSpan;\n            var colSpanAttr = kendo.attr('colspan');\n            if (level <= headerRows.length - 1) {\n                var child = row.next();\n                var prevCells = cell.prevAll();\n                var idx;\n                prevCells = prevCells.filter(function () {\n                    return !this.rowSpan || this.rowSpan === 1;\n                });\n                var offset = 0;\n                for (idx = 0; idx < prevCells.length; idx++) {\n                    offset += parseInt(prevCells.eq(idx).attr(colSpanAttr), 10) || 1;\n                }\n                var cells = child.find('th');\n                var colSpan = parseInt(cell.attr(colSpanAttr), 10) || 1;\n                idx = 0;\n                while (idx < colSpan) {\n                    child = cells.eq(idx + offset);\n                    result = result.add(childColumnsCells(child));\n                    var value = parseInt(child.attr(colSpanAttr), 10);\n                    if (value > 1) {\n                        colSpan -= value - 1;\n                    }\n                    idx++;\n                }\n            }\n            return result;\n        }\n        function columnParent(column, columns) {\n            var parents = [];\n            columnParents(column, columns, parents);\n            return parents[parents.length - 1];\n        }\n        function columnParents(column, columns, parents) {\n            parents = parents || [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (column === columns[idx]) {\n                    return true;\n                } else if (columns[idx].columns) {\n                    var inserted = parents.length;\n                    parents.push(columns[idx]);\n                    if (!columnParents(column, columns[idx].columns, parents)) {\n                        parents.splice(inserted, parents.length - inserted);\n                    } else {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        function flatColumns(columns) {\n            var result = [];\n            var children = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].columns) {\n                    children = children.concat(columns[idx].columns);\n                }\n            }\n            if (children.length) {\n                result = result.concat(flatColumns(children));\n            }\n            return result;\n        }\n        function columnPosition(column, columns, row, cellCounts) {\n            var result;\n            var idx;\n            row = row || 0;\n            cellCounts = cellCounts || {};\n            cellCounts[row] = cellCounts[row] || 0;\n            for (idx = 0; idx < columns.length; idx++) {\n                if (columns[idx] == column) {\n                    result = {\n                        cell: cellCounts[row],\n                        row: row\n                    };\n                    break;\n                } else if (columns[idx].columns) {\n                    result = columnPosition(column, columns[idx].columns, row + 1, cellCounts);\n                    if (result) {\n                        break;\n                    }\n                }\n                cellCounts[row]++;\n            }\n            return result;\n        }\n        function updateCellIndex(thead, columns, offset) {\n            offset = offset || 0;\n            var position;\n            var cell;\n            var allColumns = columns;\n            columns = leafColumns(columns);\n            var cells = {};\n            var rows = thead.find('>tr:not(.k-filter-row)');\n            var filter = function () {\n                var el = $(this);\n                return !el.hasClass('k-group-cell') && !el.hasClass('k-hierarchy-cell');\n            };\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                position = columnPosition(columns[idx], allColumns);\n                if (!cells[position.row]) {\n                    cells[position.row] = rows.eq(position.row).find('.k-header').filter(filter);\n                }\n                cell = cells[position.row].eq(position.cell);\n                cell.attr(kendo.attr('index'), offset + idx);\n            }\n            return columns.length;\n        }\n        function depth(columns) {\n            var result = 1;\n            var max = 0;\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (columns[idx].columns) {\n                    var temp = depth(columns[idx].columns);\n                    if (temp > max) {\n                        max = temp;\n                    }\n                }\n            }\n            return result + max;\n        }\n        function lockedColumns(columns) {\n            return grep(columns, is('locked'));\n        }\n        function nonLockedColumns(columns) {\n            return grep(columns, not(is('locked')));\n        }\n        function updateRowSpans(container, containerDOMtree) {\n            var rows = container.find('tr:not(.k-filter-row)');\n            var length = rows.length;\n            rows.each(function (idx) {\n                var cells = this.cells;\n                for (var i = 0; i < cells.length; i++) {\n                    if (cells[i].colSpan <= 1 && cells[i].attributes.rowspan) {\n                        containerDOMtree.children[idx].children[i].attr.rowSpan = length - idx;\n                        cells[i].rowSpan = length - idx;\n                    }\n                }\n            });\n        }\n        function removeEmptyRows(container, containerDOMtree) {\n            var rows = container.find('tr');\n            var emptyRows = [];\n            rows.filter(function (idx) {\n                var shouldRemove = !$(this).children().length;\n                if (shouldRemove) {\n                    emptyRows.push(idx);\n                }\n                return shouldRemove;\n            }).remove();\n            for (var i = emptyRows.length - 1; i >= 0; i--) {\n                containerDOMtree.children.splice(emptyRows[i], 1);\n            }\n            updateRowSpans(container, containerDOMtree);\n        }\n        function focusTable(table, direct) {\n            if (direct === true) {\n                table = $(table);\n                var scrollTop, scrollLeft;\n                scrollTop = table.parent().scrollTop();\n                scrollLeft = kendo.scrollLeft(table.parent());\n                kendo.focusElement(table);\n                kendo.scrollLeft(table.parent().scrollTop(scrollTop), scrollLeft);\n            } else {\n                $(table).one('focusin', function (e) {\n                    e.preventDefault();\n                }).trigger('focus');\n            }\n        }\n        function adjustRowHeight(row1, row2) {\n            var height;\n            var offsetHeight1 = row1.offsetHeight;\n            var offsetHeight2 = row2.offsetHeight;\n            if (offsetHeight1 > offsetHeight2) {\n                height = offsetHeight1 + 'px';\n            } else if (offsetHeight1 < offsetHeight2) {\n                height = offsetHeight2 + 'px';\n            }\n            if (height) {\n                row1.style.height = row2.style.height = height;\n            }\n        }\n        function isColumnEditable(column, model) {\n            if (!column || !model || !column.field || column.selectable || column.command || column.editable && !column.editable(model)) {\n                return false;\n            }\n            return column.field && model.editable && model.editable(column.field);\n        }\n        function isDirtyColumn(column, model) {\n            var field = (column || {}).field || '';\n            return model.dirty && model.dirtyFields && model.dirtyFields[field] && isColumnEditable(column, model);\n        }\n        function isUndefined(value) {\n            return typeof value === 'undefined';\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        if (kendo.ExcelMixin) {\n            kendo.ExcelMixin.extend(TreeList.prototype);\n        }\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(TreeList.prototype);\n            TreeList.prototype._drawPDF = function (progress) {\n                var treeList = this;\n                if (treeList.options.pdf.paperSize && treeList.options.pdf.paperSize != 'auto') {\n                    return treeList._drawPDF_autoPageBreak(progress);\n                }\n                var result = new $.Deferred();\n                var dataSource = treeList.dataSource;\n                var allPages = treeList.options.pdf.allPages;\n                this._initPDFProgress(progress);\n                var doc = new kendo.drawing.Group();\n                var startingPage = dataSource.page();\n                function resolve() {\n                    if (allPages && startingPage !== undefined) {\n                        dataSource.unbind('change', exportPage);\n                        dataSource.one('change', function () {\n                            result.resolve(doc);\n                        });\n                        dataSource.page(startingPage);\n                    } else {\n                        result.resolve(doc);\n                    }\n                }\n                function exportPage() {\n                    treeList._drawPDFShadow({ width: treeList.wrapper.width() }, { avoidLinks: treeList.options.pdf.avoidLinks }).done(function (group) {\n                        var pageNum = dataSource.page();\n                        var totalPages = allPages ? dataSource.totalPages() : 1;\n                        var args = {\n                            page: group,\n                            pageNumber: pageNum,\n                            progress: pageNum / totalPages,\n                            totalPages: totalPages\n                        };\n                        progress.notify(args);\n                        doc.append(args.page);\n                        if (pageNum < totalPages) {\n                            dataSource.page(pageNum + 1);\n                        } else {\n                            resolve();\n                        }\n                    }).fail(function (err) {\n                        result.reject(err);\n                    });\n                }\n                if (allPages) {\n                    dataSource.bind('change', exportPage);\n                    dataSource.page(1);\n                } else {\n                    exportPage();\n                }\n                return result.promise();\n            };\n            TreeList.prototype._initPDFProgress = function (deferred) {\n                var loading = $('<div class=\\'k-loading-pdf-mask\\'><div class=\\'k-loading-color\\'></div></div>');\n                loading.prepend(this.wrapper.clone().css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                }));\n                this.wrapper.append(loading);\n                var progressBar = $('<div class=\\'k-loading-pdf-progress\\'>').appendTo(loading).kendoProgressBar({\n                    type: 'chunk',\n                    chunkCount: 10,\n                    min: 0,\n                    max: 1,\n                    value: 0\n                }).data('kendoProgressBar');\n                deferred.progress(function (e) {\n                    progressBar.value(e.progress);\n                }).always(function () {\n                    kendo.destroy(loading);\n                    loading.remove();\n                });\n            };\n            TreeList.prototype._drawPDF_autoPageBreak = function (progress) {\n                var treeList = this;\n                var result = new $.Deferred();\n                var dataSource = treeList.dataSource;\n                var allPages = treeList.options.pdf.allPages;\n                var origBody = treeList.wrapper.find('table[role=\"treeList\"] > tbody');\n                var cont = $('<div>').css({\n                    position: 'absolute',\n                    left: -10000,\n                    top: -10000\n                });\n                var clone = treeList.wrapper.clone().css({\n                    height: 'auto',\n                    width: 'auto'\n                }).appendTo(cont);\n                clone.find('.k-grid-content').css({\n                    height: 'auto',\n                    width: 'auto',\n                    overflow: 'visible'\n                });\n                clone.find('table[role=\"treeList\"], .k-grid-footer table').css({\n                    height: 'auto',\n                    width: '100%',\n                    overflow: 'visible'\n                });\n                clone.find('.k-grid-pager, .k-grid-toolbar, .k-grouping-header').remove();\n                clone.find('.k-grid-header, .k-grid-footer').css({ paddingRight: 0 });\n                this._initPDFProgress(progress);\n                var body = clone.find('table[role=\"treeList\"] > tbody').empty();\n                var startingPage = dataSource.page();\n                function resolve() {\n                    if (allPages && startingPage !== undefined) {\n                        dataSource.one('change', draw);\n                        dataSource.page(startingPage);\n                    } else {\n                        treeList.refresh();\n                        draw();\n                    }\n                }\n                function draw() {\n                    cont.appendTo(document.body);\n                    var options = $.extend({}, treeList.options.pdf, {\n                        _destructive: true,\n                        progress: function (p) {\n                            progress.notify({\n                                page: p.page,\n                                pageNumber: p.pageNum,\n                                progress: 0.5 + p.pageNum / p.totalPages / 2,\n                                totalPages: p.totalPages\n                            });\n                        }\n                    });\n                    kendo.drawing.drawDOM(clone, options).always(function () {\n                        cont.remove();\n                    }).then(function (group) {\n                        result.resolve(group);\n                    }).fail(function (err) {\n                        result.reject(err);\n                    });\n                }\n                function renderPage() {\n                    var pageNum = dataSource.page();\n                    var totalPages = allPages ? dataSource.totalPages() : 1;\n                    body.append(origBody.find('tr'));\n                    if (pageNum < totalPages) {\n                        dataSource.page(pageNum + 1);\n                    } else {\n                        dataSource.unbind('change', renderPage);\n                        resolve();\n                    }\n                }\n                if (allPages) {\n                    dataSource.bind('change', renderPage);\n                    dataSource.page(1);\n                } else {\n                    renderPage();\n                }\n                return result.promise();\n            };\n        }\n        extend(true, kendo.data, {\n            TreeListDataSource: TreeListDataSource,\n            TreeListModel: TreeListModel\n        });\n        ui.plugin(TreeList);\n        ui.plugin(TreeListPager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}