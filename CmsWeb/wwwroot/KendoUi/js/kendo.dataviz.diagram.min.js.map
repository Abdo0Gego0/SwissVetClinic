{"version":3,"sources":["kendo.dataviz.diagram.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","undefined","Range","start","stop","step","rangeIntegerScale","x","k","range","j","Utils","sign","Infinity","Math","abs","findRadian","end","sngXComp","sngYComp","y","atan","PI","Easing","Ticker","diagram","dataviz","isArray","Array","EPSILON","isNearZero","num","isDefined","obj","isUndefined","isObject","Object","has","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","isNumber","isNaN","parseFloat","isFinite","isEmpty","simpleExtend","destination","source","name","initArray","array","serializePoints","points","p","res","deserializePoints","s","v","split","Point","parseInt","randomInteger","lower","upper","floor","random","DFT","el","func","item","childNodes","getMatrixAngle","m","d","atan2","b","getMatrixScaling","sX","sqrt","a","c","sY","number","findAngle","center","forEach","arr","iterator","thisRef","any","predicate","remove","what","ax","indexOf","splice","contains","inArray","fold","list","acc","context","initial","arguments","find","result","index","first","constraint","insert","element","position","all","clear","bisort","sortfunc","n","addRange","apply","easeInOut","pos","cos","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","trigger","caller","onStep","seekTo","to","seekFromTo","from","max","min","Date","getTime","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","movement","now","timePassed","ui","intersectLine","start1","end1","start2","end2","isSegment","num1","num2","r","tangensdiff","normalVariable","mean","deviation","log","randomId","chars","charAt","round","PathDefiner","Rect","Size","Intersect","RectAlign","Polar","Matrix","MatrixVector","Geometry","HashTable","Dictionary","Queue","Set","Node","Link","Graph","Point2D","isFunction","HITTESTAREA","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","halfpi","len","factor","isOnLine","temp","r1","r2","o1","u1","inflate","union","parse","tempStr","slice","xy","left","right","point","dx","dy","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","delta","scaled","thisCenter","zoom","overlaps","rectBottomRight","Empty","toRect","empty","fromPoints","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","container","align","content","alignment","alignValues","toLowerCase","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","e","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","nums","trim","substr","fromMatrix","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","p1","p2","minimum","Number","MAX_VALUE","_buckets","add","_createGetBucket","_bucketExists","set","containsKey","hashId","_hash","bucket","hashes","_hashes","ht","_hashString","_objectHashId","ch","id","_hashId","Observable","dictionary","that","_hashTable","Error","forEachValue","forEachKey","keys","enqueue","next","dequeue","resource","kv","toArray","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","child","level","root","found","getConnectedComponents","componentId","components","graph","componentIndex","setItemIndices","_collectConnectedNodes","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","remaining","levelCount","ni","cn","newLink","treeLevels","tree","_addNode","pop","addLink","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","foundSource","foundTarget","addExistingLink","getNode","addNode","removeAllLinks","t","hasLink","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","sourceStack","targetStack","intensity","targets","li","targetLink","sources","si","sourceLink","maxdiff","ri","ril","u","vertexOrder","kk","reversedEdges","unshift","concat","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","previous","g","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","connect","createDiagramFromGraph","doLayout","randomSize","opt","gli","sourceShape","targetShape","l","shi","clientWidth","clientHeight","color","SpringLayout","layoutGraph","limitToView","counter","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","diffNumericOptions","fields","field","elementOptions","hasChanges","sizeOptionsOrDefault","normalizeDrawingOptions","drawingOptions","getColor","TRANSPARENT","Color","toHex","lineAngle","xDiff","yDiff","deg","createSegment","Segment","toDrawingRect","Scale","Translation","Rotation","CompositeTransform","AutoSizeableMixin","Element","VisualBase","TextBlock","Rectangle","MarkerBase","CircleMarker","ArrowMarker","MarkerPathMixin","Path","Line","Polyline","Image","Group","Layout","Circle","Canvas","geometry","drawing","defined","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","toMatrix","format","invert","toMatrixVector","Length","ZERO","create","values","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","startPoint","_measured","_boundingBox","rawBBox","stroke","opacity","_fill","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","_textColor","_font","_initText","fontSize","fontFamily","Text","font","fontOptions","fontStyle","fontWeight","sizeChanged","textOptions","_initPath","_setPosition","_drawPath","closed","sizeOptions","elements","anchor","_transformToPath","path","transformCopy","positionMarker","targetSegment","_linePoints","endPoint","nextSegment","prevSegment","controlOut","controlIn","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","_markers","_createMarkers","_createMarker","markerType","append","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","_createElements","_setData","multipath","_updatePath","_pointsDiffer","currentPoints","differ","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","testKey","toUpperCase","hitToOppositeSide","hit","canDrag","editable","drag","hitTestShapeConnectors","connector","idx","connectors","HIT_TEST_DISTANCE","noMeta","meta","ctrlKey","altKey","shiftKey","PositionAdapter","LayoutUndoUnit","CompositeUnit","ConnectionEditUnit","ConnectionEditUndoUnit","DeleteConnectionUnit","DeleteShapeUnit","TransformUnit","AddConnectionUnit","AddShapeUnit","PanUndoUnit","RotateUnit","ToFrontUnit","ToBackUnit","UndoRedoService","EmptyTool","ScrollerTool","PointerTool","SelectionTool","ConnectionTool","ConnectionEditTool","ToolService","ConnectionRouterBase","LinearConnectionRouter","PolylineRouter","CascadingRouter","AdornerBase","ConnectionEditAdorner","ConnectorsAdorner","ResizingAdorner","Selector","ConnectorVisual","Movable","proxy","Cursors","arrow","grip","cross","select","south","east","west","north","rowresize","colresize","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","SOURCE","TARGET","HANDLE_NAMES","-1","1","layoutState","pusher","getShapeById","subjects","froms","tos","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","ticker","conn","units","undoUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","undoSource","undoTarget","targetConnector","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","deselect","initialPosition","finalPosition","finalPos","pan","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","items","initialIndices","_toIndex","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","toolService","tryActivate","getCursor","canvas","scroller","virtualScroll","tool","friction","support","mobileOS","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","dimension","makeVirtual","virtualSize","dimensions","disable","pannable","enabled","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","selectSingle","handle","_hitTest","_resizingAdorner","isDragHandle","connections","undoRedoService","_getCursor","selectable","multiple","selector","isSelected","selectArea","_createConnection","_c","connectionHandle","_connectionManipulation","_removeHover","activeConnection","_cachedTouchTarget","cachedTouchTarget","sourceConnector","Shape","getConnector","_syncConnectionChanges","_connectorsAdorner","isActive","handleName","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","suspendTracking","updateHovered","resumeTracking","keyDown","toRemove","metaKey","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","addToSelection","newConnection","cursor","css","disabledShape","isNew","selectedConnections","_visible","_selectedItems","Connection","_hitTestItems","_hitTestElements","mainLayer","shapeIdx","connectionIdx","shapeHit","connectionHit","hitTest","rec","getBounds","allPoints","route","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","MAX_NUM","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","horizontal","_adorners","sp","tp","_ts","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","radiusX","radiusY","sourcePointDistance","distanceTo","targetPointDistance","sourceHandle","targetHandle","modelToLayer","_refreshHandler","ctr","_clearVisual","_keepCachedTouchTarget","visualChildren","childrenCount","unbind","each","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","thr","newCenter","oldBounds","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","_truncateDistance","_displaceBounds","minWidth","minHeight","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","_diffStates","_syncShapeChanges","thumb","rotationThumb","_rotationThumbBounds","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","HyperTree","DEG_TO_RAD","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","boundingRect","currentHeight","currentWidth","moveToOffset","nodeBounds","newpoints","pt","deltax","deltay","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","newEdge","areConnectedAlready","adapter","finalNodeSet","LayoutState","initialTemperature","guessBounds","temperature","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","pow","_SquareForce","distance","av","squareSize","ratio","multiplier","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","startAngle","endAngle","previousRoot","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","pl","nl","col","basevalue","normalizeAngle","childNode","cp","childAngleFraction","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","sortedNodes","minLayer","layerMap","layerCount","shift","o2","o1layer","o2layer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","classNodes","rightSibling","D","neighbor","leftPos","placeLeft","POSITIVE_INFINITY","nodeLeftClass","upNodes","downNodes","intDiv","placeRightToLeft","rightClasses","leftSibling","rightPos","placeRight","NEGATIVE_INFINITY","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","ndsinl","vnode","wings","currentWing","wing","_nodesInLink","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","maximumHeight","ctx","MIN_VALUE","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","fromLayerIndex","reachedFinalLayerIndex","layerIncrement","_gridPositionComparer","dest","virtualStartIndex","virtualStart","sequence","virtualEnd","virtualEndIndex","_firstVirtualNode","_sequencer","nextVirtualNode","adjustDirections","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","clayer","j1","j2","getNeighborOnLayer","dir","_sequenceSingle","combineSequences","pair","rightHeap","leftRes","rightRes","leftHeap","_positionDescendingComparer","_positionAscendingComparer","leftClass","_getComposite","rightClass","maxLayoutIterations","it","gridPos","layoutLayer","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","o","oLayer","dLayer","oPos","dPos","upLayer","downLayer","depthOfDumminess","prevLink","dedum","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","inode","compareValue","n1BaryCenter","n2BaryCenter","compareByIndex","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","countLinksCrossingBetweenTwoLayers","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","n11gp","n12gp","n21gp","n22gp","crossings","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","GraphAdapter","mwDelta","origEvent","originalEvent","wheelDelta","math","detail","isAutoConnector","closestConnector","resCtr","minimumDistance","MAXINT","indicesOfItems","filterShapeDataItem","dataItem","filterConnectionDataItem","fromConnector","fromX","fromY","toConnector","toX","toY","connectionSelector","textField","model","dataSource","reader","idField","appendTo","kendoDropDownList","dataValueField","dataTextField","toJSON","optionLabel","valuePrimitive","InactiveItem","callbacks","InactiveItemsCollection","cloneDataItem","Model","_defaultId","splitDiagramElements","createModel","ObservableObject","clearField","copyDefaultOptions","mainOptions","translateToOrigin","bbox","preventDefault","defaultButtons","DiagramElement","Connector","Diagram","DiagramToolBar","Editor","PopupEditor","QuadRoot","QuadNode","ShapesQuadTree","geom","Widget","outerWidth","_outerWidth","outerHeight","_outerHeight","HierarchicalDataSource","isPlainObject","NS","CASCADING","CHANGE","CLICK","ERROR","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","DefaultConnectors","getPosition","imageClass","className","iconClass","extra","defaults","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_updateContentVisual","_createContentVisual","elementTemplate","template","paramName","_canSelect","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","modelOptions","redrawVisual","_isEditable","_redrawVisual","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","dataMap","_dataMap","connectionsDataSource","getByUid","uid","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","sourceConnectors","targetConnectors","_resolveAutoConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","_testRoutePoints","exclude","router","passRoute","_getRouteExclude","_shapesQuadTree","hitTestRect","_isPointInsideShape","boundsX","boundsY","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_interactionDefaults","_initCanvas","adornerLayer","_createHandlers","_clipboard","pauseMouseHandlers","_fetchFreshData","_createGlobalToolBar","_createOptionElements","theme","draggable","autoBind","tooltip","connectionDefaults","toolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","view","editor","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","connectionSelectorHandler","cancelEdit","shapeEditors","shapeTemplate","connectionEditors","connectionTemplate","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","userShapeDefaults","mobile","canvasContainer","viewPort","viewport","on","_wheel","_keydown","_userEvents","UserEvents","multiTouch","fastTap","tap","_tap","_dragStart","_drag","_dragEnd","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","doubleTap","_doubleTap","supportDoubleTap","_mouseover","_mouseout","_mouseMove","_mouseDown","_mouseUp","_syncHandler","_resizeHandler","onResize","event","_pauseMouseHandlers","_eventPositions","_meta","_createToolBar","ctrlPressed","focused","keyCode","touch","pageX","pageY","documentToModel","initialCenter","eventArgs","_gesture","_initialCenter","zoomedPoint","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","_panTransform","_updateAdorners","pointPosition","_kendoNode","srcElement","themeOptions","themeName","themes","SASS_THEMES","autoTheme","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","scrollHeight","load","setOptions","added","removed","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","val","viewportVector","raw","hideTooltip","_getPan","animatedScrollTo","scrollTo","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","getShapeByModelId","getShapeByModelUid","getConnectionByModelId","getConnectionByModelUid","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_addItem","preventClosing","padding","popupWidth","popupHeight","connectionBounds","singleToolBar","popupZIndex","closest","_popup","showAt","one","_normalizePointZoom","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_suspended","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","then","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","attributes","_setAttributes","open","newGroup","editTool","icon","showText","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","selectedElemens","rotateClockwise","rotateAnticlockwise","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","callback","deffered","Deferred","deferred","resolve","_add","_quadNode","_testRect","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","plugin"],"mappings":"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","file":"kendo.dataviz.diagram.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (typeof text === 'undefined' || text === null) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/utils', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram = {}, deepExtend = kendo.deepExtend, isArray = Array.isArray, EPSILON = 0.000001;\n        var Utils = {};\n        deepExtend(Utils, {\n            isNearZero: function (num) {\n                return Math.abs(num) < EPSILON;\n            },\n            isDefined: function (obj) {\n                return typeof obj !== 'undefined';\n            },\n            isUndefined: function (obj) {\n                return typeof obj === 'undefined' || obj === null;\n            },\n            isObject: function (obj) {\n                return obj === Object(obj);\n            },\n            has: function (obj, key) {\n                return Object.hasOwnProperty.call(obj, key);\n            },\n            isString: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object String]';\n            },\n            isBoolean: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object Boolean]';\n            },\n            isType: function (obj, type) {\n                return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n            },\n            isNumber: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n            isEmpty: function (obj) {\n                if (obj === null) {\n                    return true;\n                }\n                if (isArray(obj) || Utils.isString(obj)) {\n                    return obj.length === 0;\n                }\n                for (var key in obj) {\n                    if (Utils.has(obj, key)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            simpleExtend: function (destination, source) {\n                if (!Utils.isObject(source)) {\n                    return;\n                }\n                for (var name in source) {\n                    destination[name] = source[name];\n                }\n            },\n            initArray: function createIdArray(size, value) {\n                var array = [];\n                for (var i = 0; i < size; ++i) {\n                    array[i] = value;\n                }\n                return array;\n            },\n            serializePoints: function (points) {\n                var res = [];\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    res.push(p.x + ';' + p.y);\n                }\n                return res.join(';');\n            },\n            deserializePoints: function (s) {\n                var v = s.split(';'), points = [];\n                if (v.length % 2 !== 0) {\n                    throw 'Not an array of points.';\n                }\n                for (var i = 0; i < v.length; i += 2) {\n                    points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n                }\n                return points;\n            },\n            randomInteger: function (lower, upper) {\n                return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n            },\n            DFT: function (el, func) {\n                func(el);\n                if (el.childNodes) {\n                    for (var i = 0; i < el.childNodes.length; i++) {\n                        var item = el.childNodes[i];\n                        this.DFT(item, func);\n                    }\n                }\n            },\n            getMatrixAngle: function (m) {\n                if (m === null || m.d === 0) {\n                    return 0;\n                }\n                return Math.atan2(m.b, m.d) * 180 / Math.PI;\n            },\n            getMatrixScaling: function (m) {\n                var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n                var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n                return [\n                    sX,\n                    sY\n                ];\n            }\n        });\n        function Range(start, stop, step) {\n            if (typeof start == 'undefined' || typeof stop == 'undefined') {\n                return [];\n            }\n            if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n                throw 'The sign of the increment should allow to reach the stop-value.';\n            }\n            step = step || 1;\n            start = start || 0;\n            stop = stop || start;\n            if ((stop - start) / step === Infinity) {\n                throw 'Infinite range defined.';\n            }\n            var range = [], i = -1, j;\n            function rangeIntegerScale(x) {\n                var k = 1;\n                while (x * k % 1) {\n                    k *= 10;\n                }\n                return k;\n            }\n            var k = rangeIntegerScale(Math.abs(step));\n            start *= k;\n            stop *= k;\n            step *= k;\n            if (start > stop && step > 0) {\n                step = -step;\n            }\n            if (step < 0) {\n                while ((j = start + step * ++i) >= stop) {\n                    range.push(j / k);\n                }\n            } else {\n                while ((j = start + step * ++i) <= stop) {\n                    range.push(j / k);\n                }\n            }\n            return range;\n        }\n        function findRadian(start, end) {\n            if (start == end) {\n                return 0;\n            }\n            var sngXComp = end.x - start.x, sngYComp = start.y - end.y, atan = Math.atan(sngXComp / sngYComp);\n            if (sngYComp >= 0) {\n                return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n            }\n            return atan + Math.PI;\n        }\n        Utils.sign = function (number) {\n            return number ? number < 0 ? -1 : 1 : 0;\n        };\n        Utils.findAngle = function (center, end) {\n            return findRadian(center, end) * 180 / Math.PI;\n        };\n        Utils.forEach = function (arr, iterator, thisRef) {\n            for (var i = 0; i < arr.length; i++) {\n                iterator.call(thisRef, arr[i], i, arr);\n            }\n        };\n        Utils.any = function (arr, predicate) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (predicate(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        Utils.remove = function (arr, what) {\n            var ax;\n            while ((ax = Utils.indexOf(arr, what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n            return arr;\n        };\n        Utils.contains = function (arr, obj) {\n            return Utils.indexOf(arr, obj) !== -1;\n        };\n        Utils.indexOf = function (arr, what) {\n            return $.inArray(what, arr);\n        };\n        Utils.fold = function (list, iterator, acc, context) {\n            var initial = arguments.length > 2;\n            for (var i = 0; i < list.length; i++) {\n                var value = list[i];\n                if (!initial) {\n                    acc = value;\n                    initial = true;\n                } else {\n                    acc = iterator.call(context, acc, value, i, list);\n                }\n            }\n            if (!initial) {\n                throw 'Reduce of empty array with no initial value';\n            }\n            return acc;\n        };\n        Utils.find = function (arr, iterator, context) {\n            var result;\n            Utils.any(arr, function (value, index, list) {\n                if (iterator.call(context, value, index, list)) {\n                    result = value;\n                    return true;\n                }\n                return false;\n            });\n            return result;\n        };\n        Utils.first = function (arr, constraint, context) {\n            if (arr.length === 0) {\n                return null;\n            }\n            if (Utils.isUndefined(constraint)) {\n                return arr[0];\n            }\n            return Utils.find(arr, constraint, context);\n        };\n        Utils.insert = function (arr, element, position) {\n            arr.splice(position, 0, element);\n            return arr;\n        };\n        Utils.all = function (arr, iterator, context) {\n            var result = true;\n            var value;\n            for (var i = 0; i < arr.length; i++) {\n                value = arr[i];\n                result = result && iterator.call(context, value, i, arr);\n                if (!result) {\n                    break;\n                }\n            }\n            return result;\n        };\n        Utils.clear = function (arr) {\n            arr.splice(0, arr.length);\n        };\n        Utils.bisort = function (a, b, sortfunc) {\n            if (Utils.isUndefined(a)) {\n                throw 'First array is not specified.';\n            }\n            if (Utils.isUndefined(b)) {\n                throw 'Second array is not specified.';\n            }\n            if (a.length != b.length) {\n                throw 'The two arrays should have equal length';\n            }\n            var all = [], i;\n            for (i = 0; i < a.length; i++) {\n                all.push({\n                    'x': a[i],\n                    'y': b[i]\n                });\n            }\n            if (Utils.isUndefined(sortfunc)) {\n                all.sort(function (m, n) {\n                    return m.x - n.x;\n                });\n            } else {\n                all.sort(function (m, n) {\n                    return sortfunc(m.x, n.x);\n                });\n            }\n            Utils.clear(a);\n            Utils.clear(b);\n            for (i = 0; i < all.length; i++) {\n                a.push(all[i].x);\n                b.push(all[i].y);\n            }\n        };\n        Utils.addRange = function (arr, range) {\n            arr.push.apply(arr, range);\n        };\n        var Easing = {\n            easeInOut: function (pos) {\n                return -Math.cos(pos * Math.PI) / 2 + 0.5;\n            }\n        };\n        var Ticker = kendo.Class.extend({\n            init: function () {\n                this.adapters = [];\n                this.target = 0;\n                this.tick = 0;\n                this.interval = 20;\n                this.duration = 800;\n                this.lastTime = null;\n                this.handlers = [];\n                var _this = this;\n                this.transition = Easing.easeInOut;\n                this.timerDelegate = function () {\n                    _this.onTimerEvent();\n                };\n            },\n            addAdapter: function (a) {\n                this.adapters.push(a);\n            },\n            onComplete: function (handler) {\n                this.handlers.push(handler);\n            },\n            removeHandler: function (handler) {\n                this.handlers = $.grep(this.handlers, function (h) {\n                    return h !== handler;\n                });\n            },\n            trigger: function () {\n                var _this = this;\n                if (this.handlers) {\n                    Utils.forEach(this.handlers, function (h) {\n                        return h.call(_this.caller !== null ? _this.caller : _this);\n                    });\n                }\n            },\n            onStep: function () {\n            },\n            seekTo: function (to) {\n                this.seekFromTo(this.tick, to);\n            },\n            seekFromTo: function (from, to) {\n                this.target = Math.max(0, Math.min(1, to));\n                this.tick = Math.max(0, Math.min(1, from));\n                this.lastTime = new Date().getTime();\n                if (!this.intervalId) {\n                    this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n                }\n            },\n            stop: function () {\n                if (this.intervalId) {\n                    window.clearInterval(this.intervalId);\n                    this.intervalId = null;\n                    this.trigger();\n                }\n            },\n            play: function (origin) {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                if (origin !== null) {\n                    this.caller = origin;\n                }\n                this.initState();\n                this.seekFromTo(0, 1);\n            },\n            reverse: function () {\n                this.seekFromTo(1, 0);\n            },\n            initState: function () {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].initState();\n                }\n            },\n            propagate: function () {\n                var value = this.transition(this.tick);\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].update(value);\n                }\n            },\n            onTimerEvent: function () {\n                var now = new Date().getTime();\n                var timePassed = now - this.lastTime;\n                this.lastTime = now;\n                var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n                if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                    this.tick = this.target;\n                } else {\n                    this.tick += movement;\n                }\n                try {\n                    this.propagate();\n                } finally {\n                    this.onStep.call(this);\n                    if (this.target == this.tick) {\n                        this.stop();\n                    }\n                }\n            }\n        });\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Utils: Utils,\n            Range: Range,\n            Ticker: Ticker\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/math', [\n        'dataviz/diagram/utils',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, Utils = diagram.Utils, Point = dataviz.Point2D, isFunction = kendo.isFunction, contains = Utils.contains, map = $.map;\n        var HITTESTAREA = 3, EPSILON = 0.000001;\n        deepExtend(Point.fn, {\n            plus: function (p) {\n                return new Point(this.x + p.x, this.y + p.y);\n            },\n            minus: function (p) {\n                return new Point(this.x - p.x, this.y - p.y);\n            },\n            offset: function (value) {\n                return new Point(this.x - value, this.y - value);\n            },\n            times: function (s) {\n                return new Point(this.x * s, this.y * s);\n            },\n            normalize: function () {\n                if (this.length() === 0) {\n                    return new Point();\n                }\n                return this.times(1 / this.length());\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            toString: function () {\n                return '(' + this.x + ',' + this.y + ')';\n            },\n            lengthSquared: function () {\n                return this.x * this.x + this.y * this.y;\n            },\n            middleOf: function MiddleOf(p, q) {\n                return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n            },\n            toPolar: function (useDegrees) {\n                var factor = 1;\n                if (useDegrees) {\n                    factor = 180 / Math.PI;\n                }\n                var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n                var halfpi = Math.PI / 2;\n                var len = this.length();\n                if (this.x === 0) {\n                    if (this.y === 0) {\n                        return new Polar(0, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * halfpi);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * 3 * halfpi);\n                    }\n                } else if (this.x > 0) {\n                    if (this.y === 0) {\n                        return new Polar(len, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * a);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (4 * halfpi - a));\n                    }\n                } else {\n                    if (this.y === 0) {\n                        return new Polar(len, 2 * halfpi);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * (2 * halfpi - a));\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (2 * halfpi + a));\n                    }\n                }\n            },\n            isOnLine: function (from, to) {\n                if (from.x > to.x) {\n                    var temp = to;\n                    to = from;\n                    from = temp;\n                }\n                var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA), r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n                if (r1.union(r2).contains(this)) {\n                    if (from.x === to.x || from.y === to.y) {\n                        return true;\n                    } else if (from.y < to.y) {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - r1.y) / (r2.y - r1.y);\n                    } else {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - r1.y) / (r2.y - r1.y);\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                    }\n                    return this.x > o1 && this.x < u1;\n                }\n                return false;\n            }\n        });\n        deepExtend(Point, {\n            parse: function (str) {\n                var tempStr = str.slice(1, str.length - 1), xy = tempStr.split(','), x = parseInt(xy[0], 10), y = parseInt(xy[1], 10);\n                if (!isNaN(x) && !isNaN(y)) {\n                    return new Point(x, y);\n                }\n            }\n        });\n        var PathDefiner = Class.extend({\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        });\n        var Rect = Class.extend({\n            init: function (x, y, width, height) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.width = width || 0;\n                this.height = height || 0;\n            },\n            contains: function (point) {\n                return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n            },\n            inflate: function (dx, dy) {\n                if (dy === undefined) {\n                    dy = dx;\n                }\n                this.x -= dx;\n                this.y -= dy;\n                this.width += 2 * dx + 1;\n                this.height += 2 * dy + 1;\n                return this;\n            },\n            offset: function (dx, dy) {\n                var x = dx, y = dy;\n                if (dx instanceof Point) {\n                    x = dx.x;\n                    y = dx.y;\n                }\n                this.x += x;\n                this.y += y;\n                return this;\n            },\n            union: function (r) {\n                var x1 = Math.min(this.x, r.x);\n                var y1 = Math.min(this.y, r.y);\n                var x2 = Math.max(this.x + this.width, r.x + r.width);\n                var y2 = Math.max(this.y + this.height, r.y + r.height);\n                return new Rect(x1, y1, x2 - x1, y2 - y1);\n            },\n            center: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height / 2);\n            },\n            top: function () {\n                return new Point(this.x + this.width / 2, this.y);\n            },\n            right: function () {\n                return new Point(this.x + this.width, this.y + this.height / 2);\n            },\n            bottom: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height);\n            },\n            left: function () {\n                return new Point(this.x, this.y + this.height / 2);\n            },\n            topLeft: function () {\n                return new Point(this.x, this.y);\n            },\n            topRight: function () {\n                return new Point(this.x + this.width, this.y);\n            },\n            bottomLeft: function () {\n                return new Point(this.x, this.y + this.height);\n            },\n            bottomRight: function () {\n                return new Point(this.x + this.width, this.y + this.height);\n            },\n            clone: function () {\n                return new Rect(this.x, this.y, this.width, this.height);\n            },\n            isEmpty: function () {\n                return !this.width && !this.height;\n            },\n            equals: function (rect) {\n                return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n            },\n            rotatedBounds: function (angle) {\n                var rect = this.clone(), points = this.rotatedPoints(angle), tl = points[0], tr = points[1], br = points[2], bl = points[3];\n                rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n                rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n                rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n                rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n                return rect;\n            },\n            rotatedPoints: function (angle) {\n                var rect = this, c = rect.center(), br = rect.bottomRight().rotate(c, 360 - angle), tl = rect.topLeft().rotate(c, 360 - angle), tr = rect.topRight().rotate(c, 360 - angle), bl = rect.bottomLeft().rotate(c, 360 - angle);\n                return [\n                    tl,\n                    tr,\n                    br,\n                    bl\n                ];\n            },\n            toString: function (delimiter) {\n                delimiter = delimiter || ' ';\n                return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n            },\n            scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n                var tl = this.topLeft();\n                var thisCenter = this.center();\n                tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n                var delta = staicPoint.minus(tl);\n                var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n                var position = delta.minus(scaled);\n                tl = tl.plus(position);\n                tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n                this.x = tl.x;\n                this.y = tl.y;\n                this.width *= scaleX;\n                this.height *= scaleY;\n            },\n            zoom: function (zoom) {\n                this.x *= zoom;\n                this.y *= zoom;\n                this.width *= zoom;\n                this.height *= zoom;\n                return this;\n            },\n            overlaps: function (rect) {\n                var bottomRight = this.bottomRight();\n                var rectBottomRight = rect.bottomRight();\n                var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y || rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n                return overlaps;\n            }\n        });\n        var Size = Class.extend({\n            init: function (width, height) {\n                this.width = width;\n                this.height = height;\n            }\n        });\n        Size.prototype.Empty = new Size(0, 0);\n        Rect.toRect = function (rect) {\n            if (!(rect instanceof Rect)) {\n                rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            }\n            return rect;\n        };\n        Rect.empty = function () {\n            return new Rect(0, 0, 0, 0);\n        };\n        Rect.fromPoints = function (p, q) {\n            if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n                throw 'Some values are NaN.';\n            }\n            return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n        };\n        function isNearZero(num) {\n            return Math.abs(num) < EPSILON;\n        }\n        function intersectLine(start1, end1, start2, end2, isSegment) {\n            var tangensdiff = (end1.x - start1.x) * (end2.y - start2.y) - (end1.y - start1.y) * (end2.x - start2.x);\n            if (isNearZero(tangensdiff)) {\n                return;\n            }\n            var num1 = (start1.y - start2.y) * (end2.x - start2.x) - (start1.x - start2.x) * (end2.y - start2.y);\n            var num2 = (start1.y - start2.y) * (end1.x - start1.x) - (start1.x - start2.x) * (end1.y - start1.y);\n            var r = num1 / tangensdiff;\n            var s = num2 / tangensdiff;\n            if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n                return;\n            }\n            return new Point(start1.x + r * (end1.x - start1.x), start1.y + r * (end1.y - start1.y));\n        }\n        var Intersect = {\n            lines: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2);\n            },\n            segments: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2, true);\n            },\n            rectWithLine: function (rect, start, end) {\n                return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) || Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) || Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) || Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n            },\n            rects: function (rect1, rect2, angle) {\n                var tl = rect2.topLeft(), tr = rect2.topRight(), bl = rect2.bottomLeft(), br = rect2.bottomRight();\n                var center = rect2.center();\n                if (angle) {\n                    tl = tl.rotate(center, angle);\n                    tr = tr.rotate(center, angle);\n                    bl = bl.rotate(center, angle);\n                    br = br.rotate(center, angle);\n                }\n                var intersect = rect1.contains(tl) || rect1.contains(tr) || rect1.contains(bl) || rect1.contains(br) || Intersect.rectWithLine(rect1, tl, tr) || Intersect.rectWithLine(rect1, tl, bl) || Intersect.rectWithLine(rect1, tr, br) || Intersect.rectWithLine(rect1, bl, br);\n                if (!intersect) {\n                    tl = rect1.topLeft();\n                    tr = rect1.topRight();\n                    bl = rect1.bottomLeft();\n                    br = rect1.bottomRight();\n                    if (angle) {\n                        var reverseAngle = 360 - angle;\n                        tl = tl.rotate(center, reverseAngle);\n                        tr = tr.rotate(center, reverseAngle);\n                        bl = bl.rotate(center, reverseAngle);\n                        br = br.rotate(center, reverseAngle);\n                    }\n                    intersect = rect2.contains(tl) || rect2.contains(tr) || rect2.contains(bl) || rect2.contains(br);\n                }\n                return intersect;\n            }\n        };\n        var RectAlign = Class.extend({\n            init: function (container) {\n                this.container = Rect.toRect(container);\n            },\n            align: function (content, alignment) {\n                var alignValues = alignment.toLowerCase().split(' ');\n                for (var i = 0; i < alignValues.length; i++) {\n                    content = this._singleAlign(content, alignValues[i]);\n                }\n                return content;\n            },\n            _singleAlign: function (content, alignment) {\n                if (isFunction(this[alignment])) {\n                    return this[alignment](content);\n                } else {\n                    return content;\n                }\n            },\n            left: function (content) {\n                return this._align(content, this._left);\n            },\n            center: function (content) {\n                return this._align(content, this._center);\n            },\n            right: function (content) {\n                return this._align(content, this._right);\n            },\n            stretch: function (content) {\n                return this._align(content, this._stretch);\n            },\n            top: function (content) {\n                return this._align(content, this._top);\n            },\n            middle: function (content) {\n                return this._align(content, this._middle);\n            },\n            bottom: function (content) {\n                return this._align(content, this._bottom);\n            },\n            _left: function (container, content) {\n                content.x = container.x;\n            },\n            _center: function (container, content) {\n                content.x = (container.width - content.width) / 2 || 0;\n            },\n            _right: function (container, content) {\n                content.x = container.width - content.width;\n            },\n            _top: function (container, content) {\n                content.y = container.y;\n            },\n            _middle: function (container, content) {\n                content.y = (container.height - content.height) / 2 || 0;\n            },\n            _bottom: function (container, content) {\n                content.y = container.height - content.height;\n            },\n            _stretch: function (container, content) {\n                content.x = 0;\n                content.y = 0;\n                content.height = container.height;\n                content.width = container.width;\n            },\n            _align: function (content, alignCalc) {\n                content = Rect.toRect(content);\n                alignCalc(this.container, content);\n                return content;\n            }\n        });\n        var Polar = Class.extend({\n            init: function (r, a) {\n                this.r = r;\n                this.angle = a;\n            }\n        });\n        var Matrix = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            plus: function (m) {\n                this.a += m.a;\n                this.b += m.b;\n                this.c += m.c;\n                this.d += m.d;\n                this.e += m.e;\n                this.f += m.f;\n            },\n            minus: function (m) {\n                this.a -= m.a;\n                this.b -= m.b;\n                this.c -= m.c;\n                this.d -= m.d;\n                this.e -= m.e;\n                this.f -= m.f;\n            },\n            times: function (m) {\n                return new Matrix(this.a * m.a + this.c * m.b, this.b * m.a + this.d * m.b, this.a * m.c + this.c * m.d, this.b * m.c + this.d * m.d, this.a * m.e + this.c * m.f + this.e, this.b * m.e + this.d * m.f + this.f);\n            },\n            apply: function (p) {\n                return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n            },\n            applyRect: function (r) {\n                return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n            },\n            toString: function () {\n                return 'matrix(' + this.a + ' ' + this.b + ' ' + this.c + ' ' + this.d + ' ' + this.e + ' ' + this.f + ')';\n            }\n        });\n        deepExtend(Matrix, {\n            fromSVGMatrix: function (vm) {\n                var m = new Matrix();\n                m.a = vm.a;\n                m.b = vm.b;\n                m.c = vm.c;\n                m.d = vm.d;\n                m.e = vm.e;\n                m.f = vm.f;\n                return m;\n            },\n            fromMatrixVector: function (v) {\n                var m = new Matrix();\n                m.a = v.a;\n                m.b = v.b;\n                m.c = v.c;\n                m.d = v.d;\n                m.e = v.e;\n                m.f = v.f;\n                return m;\n            },\n            fromList: function (v) {\n                if (v.length !== 6) {\n                    throw 'The given list should consist of six elements.';\n                }\n                var m = new Matrix();\n                m.a = v[0];\n                m.b = v[1];\n                m.c = v[2];\n                m.d = v[3];\n                m.e = v[4];\n                m.f = v[5];\n                return m;\n            },\n            translation: function (x, y) {\n                var m = new Matrix();\n                m.a = 1;\n                m.b = 0;\n                m.c = 0;\n                m.d = 1;\n                m.e = x;\n                m.f = y;\n                return m;\n            },\n            unit: function () {\n                return new Matrix(1, 0, 0, 1, 0, 0);\n            },\n            rotation: function (angle, x, y) {\n                var m = new Matrix();\n                m.a = Math.cos(angle * Math.PI / 180);\n                m.b = Math.sin(angle * Math.PI / 180);\n                m.c = -m.b;\n                m.d = m.a;\n                m.e = x - x * m.a + y * m.b || 0;\n                m.f = y - y * m.a - x * m.b || 0;\n                return m;\n            },\n            scaling: function (scaleX, scaleY) {\n                var m = new Matrix();\n                m.a = scaleX;\n                m.b = 0;\n                m.c = 0;\n                m.d = scaleY;\n                m.e = 0;\n                m.f = 0;\n                return m;\n            },\n            parse: function (v) {\n                var parts, nums;\n                if (v) {\n                    v = v.trim();\n                    if (v.slice(0, 6).toLowerCase() === 'matrix') {\n                        nums = v.slice(7, v.length - 1).trim();\n                        parts = nums.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                        parts = nums.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.slice(0, 1) === '(' && v.slice(v.length - 1) === ')') {\n                        v = v.substr(1, v.length - 1);\n                    }\n                    if (v.indexOf(',') > 0) {\n                        parts = v.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.indexOf(' ') > 0) {\n                        parts = v.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                }\n                return parts;\n            }\n        });\n        var MatrixVector = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            fromMatrix: function FromMatrix(m) {\n                var v = new MatrixVector();\n                v.a = m.a;\n                v.b = m.b;\n                v.c = m.c;\n                v.d = m.d;\n                v.e = m.e;\n                v.f = m.f;\n                return v;\n            }\n        });\n        function normalVariable(mean, deviation) {\n            var x, y, r;\n            do {\n                x = Math.random() * 2 - 1;\n                y = Math.random() * 2 - 1;\n                r = x * x + y * y;\n            } while (!r || r > 1);\n            return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n        }\n        function randomId(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        }\n        var Geometry = {\n            _distanceToLineSquared: function (p, a, b) {\n                function d2(pt1, pt2) {\n                    return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n                }\n                if (a === b) {\n                    return d2(p, a);\n                }\n                var vx = b.x - a.x, vy = b.y - a.y, dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n                if (dot < 0) {\n                    return d2(a, p);\n                }\n                dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n                if (dot < 0) {\n                    return d2(b, p);\n                }\n                dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n                return dot * dot / (vx * vx + vy * vy);\n            },\n            distanceToLine: function (p, a, b) {\n                return Math.sqrt(this._distanceToLineSquared(p, a, b));\n            },\n            distanceToPolyline: function (p, points) {\n                var minimum = Number.MAX_VALUE;\n                if (Utils.isUndefined(points) || points.length === 0) {\n                    return Number.MAX_VALUE;\n                }\n                for (var s = 0; s < points.length - 1; s++) {\n                    var p1 = points[s];\n                    var p2 = points[s + 1];\n                    var d = this._distanceToLineSquared(p, p1, p2);\n                    if (d < minimum) {\n                        minimum = d;\n                    }\n                }\n                return Math.sqrt(minimum);\n            }\n        };\n        var HashTable = kendo.Class.extend({\n            init: function () {\n                this._buckets = [];\n                this.length = 0;\n            },\n            add: function (key, value) {\n                var obj = this._createGetBucket(key);\n                if (Utils.isDefined(value)) {\n                    obj.value = value;\n                }\n                return obj;\n            },\n            get: function (key) {\n                if (this._bucketExists(key)) {\n                    return this._createGetBucket(key);\n                }\n                return null;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            containsKey: function (key) {\n                return this._bucketExists(key);\n            },\n            remove: function (key) {\n                if (this._bucketExists(key)) {\n                    var hashId = this._hash(key);\n                    delete this._buckets[hashId];\n                    this.length--;\n                    return key;\n                }\n            },\n            forEach: function (func) {\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    func(bucket);\n                }\n            },\n            clone: function () {\n                var ht = new HashTable();\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    ht.add(bucket.key, bucket.value);\n                }\n                return ht;\n            },\n            _hashes: function () {\n                var hashes = [];\n                for (var hash in this._buckets) {\n                    if (this._buckets.hasOwnProperty(hash)) {\n                        hashes.push(hash);\n                    }\n                }\n                return hashes;\n            },\n            _bucketExists: function (key) {\n                var hashId = this._hash(key);\n                return Utils.isDefined(this._buckets[hashId]);\n            },\n            _createGetBucket: function (key) {\n                var hashId = this._hash(key);\n                var bucket = this._buckets[hashId];\n                if (Utils.isUndefined(bucket)) {\n                    bucket = { key: key };\n                    this._buckets[hashId] = bucket;\n                    this.length++;\n                }\n                return bucket;\n            },\n            _hash: function (key) {\n                if (Utils.isNumber(key)) {\n                    return key;\n                }\n                if (Utils.isString(key)) {\n                    return this._hashString(key);\n                }\n                if (Utils.isObject(key)) {\n                    return this._objectHashId(key);\n                }\n                throw 'Unsupported key type.';\n            },\n            _hashString: function (s) {\n                var result = 0;\n                if (s.length === 0) {\n                    return result;\n                }\n                for (var i = 0; i < s.length; i++) {\n                    var ch = s.charCodeAt(i);\n                    result = result * 32 - result + ch;\n                }\n                return result;\n            },\n            _objectHashId: function (key) {\n                var id = key._hashId;\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                    key._hashId = id;\n                }\n                return id;\n            }\n        });\n        var Dictionary = kendo.Observable.extend({\n            init: function (dictionary) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(dictionary)) {\n                    if (Array.isArray(dictionary)) {\n                        for (var i = 0; i < dictionary.length; i++) {\n                            this.add(dictionary[i]);\n                        }\n                    } else {\n                        dictionary.forEach(function (k, v) {\n                            this.add(k, v);\n                        }, this);\n                    }\n                }\n            },\n            add: function (key, value) {\n                var entry = this._hashTable.get(key);\n                if (!entry) {\n                    entry = this._hashTable.add(key);\n                    this.length++;\n                    this.trigger('changed');\n                }\n                entry.value = value;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            get: function (key) {\n                var entry = this._hashTable.get(key);\n                if (entry) {\n                    return entry.value;\n                }\n                throw new Error('Cannot find key ' + key);\n            },\n            containsKey: function (key) {\n                return this._hashTable.containsKey(key);\n            },\n            remove: function (key) {\n                if (this.containsKey(key)) {\n                    this.trigger('changed');\n                    this.length--;\n                    return this._hashTable.remove(key);\n                }\n            },\n            forEach: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key, entry.value);\n                });\n            },\n            forEachValue: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.value);\n                });\n            },\n            forEachKey: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key);\n                });\n            },\n            keys: function () {\n                var keys = [];\n                this.forEachKey(function (key) {\n                    keys.push(key);\n                });\n                return keys;\n            }\n        });\n        var Queue = kendo.Class.extend({\n            init: function () {\n                this._tail = null;\n                this._head = null;\n                this.length = 0;\n            },\n            enqueue: function (value) {\n                var entry = {\n                    value: value,\n                    next: null\n                };\n                if (!this._head) {\n                    this._head = entry;\n                    this._tail = this._head;\n                } else {\n                    this._tail.next = entry;\n                    this._tail = this._tail.next;\n                }\n                this.length++;\n            },\n            dequeue: function () {\n                if (this.length < 1) {\n                    throw new Error('The queue is empty.');\n                }\n                var value = this._head.value;\n                this._head = this._head.next;\n                this.length--;\n                return value;\n            },\n            contains: function (item) {\n                var current = this._head;\n                while (current) {\n                    if (current.value === item) {\n                        return true;\n                    }\n                    current = current.next;\n                }\n                return false;\n            }\n        });\n        var Set = kendo.Observable.extend({\n            init: function (resource) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(resource)) {\n                    if (resource instanceof HashTable) {\n                        resource.forEach(function (d) {\n                            this.add(d);\n                        });\n                    } else if (resource instanceof Dictionary) {\n                        resource.forEach(function (k, v) {\n                            this.add({\n                                key: k,\n                                value: v\n                            });\n                        }, this);\n                    }\n                }\n            },\n            contains: function (item) {\n                return this._hashTable.containsKey(item);\n            },\n            add: function (item) {\n                var entry = this._hashTable.get(item);\n                if (!entry) {\n                    this._hashTable.add(item, item);\n                    this.length++;\n                    this.trigger('changed');\n                }\n            },\n            get: function (item) {\n                if (this.contains(item)) {\n                    return this._hashTable.get(item).value;\n                } else {\n                    return null;\n                }\n            },\n            hash: function (item) {\n                return this._hashTable._hash(item);\n            },\n            remove: function (item) {\n                if (this.contains(item)) {\n                    this._hashTable.remove(item);\n                    this.length--;\n                    this.trigger('changed');\n                }\n            },\n            forEach: function (func, context) {\n                this._hashTable.forEach(function (kv) {\n                    func(kv.value);\n                }, context);\n            },\n            toArray: function () {\n                var r = [];\n                this.forEach(function (d) {\n                    r.push(d);\n                });\n                return r;\n            }\n        });\n        var Node = kendo.Class.extend({\n            init: function (id, shape) {\n                this.links = [];\n                this.outgoing = [];\n                this.incoming = [];\n                this.weight = 1;\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(shape)) {\n                    this.associatedShape = shape;\n                    var b = shape.bounds();\n                    this.width = b.width;\n                    this.height = b.height;\n                    this.x = b.x;\n                    this.y = b.y;\n                } else {\n                    this.associatedShape = null;\n                }\n                this.data = null;\n                this.type = 'Node';\n                this.shortForm = 'Node \\'' + this.id + '\\'';\n                this.isVirtual = false;\n            },\n            isIsolated: function () {\n                return Utils.isEmpty(this.links);\n            },\n            bounds: function (r) {\n                if (!Utils.isDefined(r)) {\n                    return new diagram.Rect(this.x, this.y, this.width, this.height);\n                }\n                this.x = r.x;\n                this.y = r.y;\n                this.width = r.width;\n                this.height = r.height;\n            },\n            isLinkedTo: function (node) {\n                var that = this;\n                return Utils.any(that.links, function (link) {\n                    return link.getComplement(that) === node;\n                });\n            },\n            getChildren: function () {\n                if (this.outgoing.length === 0) {\n                    return [];\n                }\n                var children = [];\n                for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                    var link = this.outgoing[i];\n                    children.push(link.getComplement(this));\n                }\n                return children;\n            },\n            getParents: function () {\n                if (this.incoming.length === 0) {\n                    return [];\n                }\n                var parents = [];\n                for (var i = 0, len = this.incoming.length; i < len; i++) {\n                    var link = this.incoming[i];\n                    parents.push(link.getComplement(this));\n                }\n                return parents;\n            },\n            clone: function () {\n                var copy = new Node();\n                if (Utils.isDefined(this.weight)) {\n                    copy.weight = this.weight;\n                }\n                if (Utils.isDefined(this.balance)) {\n                    copy.balance = this.balance;\n                }\n                if (Utils.isDefined(this.owner)) {\n                    copy.owner = this.owner;\n                }\n                copy.associatedShape = this.associatedShape;\n                copy.x = this.x;\n                copy.y = this.y;\n                copy.width = this.width;\n                copy.height = this.height;\n                return copy;\n            },\n            adjacentTo: function (node) {\n                return this.isLinkedTo(node) !== null;\n            },\n            removeLink: function (link) {\n                if (link.source === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.outgoing, link);\n                    link.source = null;\n                }\n                if (link.target === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.incoming, link);\n                    link.target = null;\n                }\n            },\n            hasLinkTo: function (node) {\n                return Utils.any(this.outgoing, function (link) {\n                    return link.target === node;\n                });\n            },\n            degree: function () {\n                return this.links.length;\n            },\n            incidentWith: function (link) {\n                return contains(this.links, link);\n            },\n            getLinksWith: function (node) {\n                return Utils.all(this.links, function (link) {\n                    return link.getComplement(this) === node;\n                }, this);\n            },\n            getNeighbors: function () {\n                var neighbors = [];\n                Utils.forEach(this.incoming, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                Utils.forEach(this.outgoing, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                return neighbors;\n            }\n        });\n        var Link = kendo.Class.extend({\n            init: function (source, target, id, connection) {\n                if (Utils.isUndefined(source)) {\n                    throw 'The source of the new link is not set.';\n                }\n                if (Utils.isUndefined(target)) {\n                    throw 'The target of the new link is not set.';\n                }\n                var sourceFound, targetFound;\n                if (Utils.isString(source)) {\n                    sourceFound = new Node(source);\n                } else {\n                    sourceFound = source;\n                }\n                if (Utils.isString(target)) {\n                    targetFound = new Node(target);\n                } else {\n                    targetFound = target;\n                }\n                this.source = sourceFound;\n                this.target = targetFound;\n                this.source.links.push(this);\n                this.target.links.push(this);\n                this.source.outgoing.push(this);\n                this.target.incoming.push(this);\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(connection)) {\n                    this.associatedConnection = connection;\n                } else {\n                    this.associatedConnection = null;\n                }\n                this.type = 'Link';\n                this.shortForm = 'Link \\'' + this.source.id + '->' + this.target.id + '\\'';\n            },\n            getComplement: function (node) {\n                if (this.source !== node && this.target !== node) {\n                    throw 'The given node is not incident with this link.';\n                }\n                return this.source === node ? this.target : this.source;\n            },\n            getCommonNode: function (link) {\n                if (this.source === link.source || this.source === link.target) {\n                    return this.source;\n                }\n                if (this.target === link.source || this.target === link.target) {\n                    return this.target;\n                }\n                return null;\n            },\n            isBridging: function (v1, v2) {\n                return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n            },\n            getNodes: function () {\n                return [\n                    this.source,\n                    this.target\n                ];\n            },\n            incidentWith: function (node) {\n                return this.source === node || this.target === node;\n            },\n            adjacentTo: function (link) {\n                return contains(this.source.links, link) || contains(this.target.links, link);\n            },\n            changeSource: function (node) {\n                Utils.remove(this.source.links, this);\n                Utils.remove(this.source.outgoing, this);\n                node.links.push(this);\n                node.outgoing.push(this);\n                this.source = node;\n            },\n            changeTarget: function (node) {\n                Utils.remove(this.target.links, this);\n                Utils.remove(this.target.incoming, this);\n                node.links.push(this);\n                node.incoming.push(this);\n                this.target = node;\n            },\n            changesNodes: function (v, w) {\n                if (this.source === v) {\n                    this.changeSource(w);\n                } else if (this.target === v) {\n                    this.changeTarget(w);\n                }\n            },\n            reverse: function () {\n                var oldSource = this.source;\n                var oldTarget = this.target;\n                this.source = oldTarget;\n                Utils.remove(oldSource.outgoing, this);\n                this.source.outgoing.push(this);\n                this.target = oldSource;\n                Utils.remove(oldTarget.incoming, this);\n                this.target.incoming.push(this);\n                return this;\n            },\n            directTo: function (target) {\n                if (this.source !== target && this.target !== target) {\n                    throw 'The given node is not incident with this link.';\n                }\n                if (this.target !== target) {\n                    this.reverse();\n                }\n            },\n            createReverseEdge: function () {\n                var r = this.clone();\n                r.reverse();\n                r.reversed = true;\n                return r;\n            },\n            clone: function () {\n                var clone = new Link(this.source, this.target);\n                return clone;\n            }\n        });\n        var Graph = kendo.Class.extend({\n            init: function (idOrDiagram) {\n                this.links = [];\n                this.nodes = [];\n                this._nodeMap = new Dictionary();\n                this.diagram = null;\n                this._root = null;\n                if (Utils.isDefined(idOrDiagram)) {\n                    if (Utils.isString(idOrDiagram)) {\n                        this.id = idOrDiagram;\n                    } else {\n                        this.diagram = idOrDiagram;\n                        this.id = idOrDiagram.id;\n                    }\n                } else {\n                    this.id = randomId();\n                }\n                this.bounds = new Rect();\n                this._hasCachedRelationships = false;\n                this.type = 'Graph';\n            },\n            cacheRelationships: function (forceRebuild) {\n                if (Utils.isUndefined(forceRebuild)) {\n                    forceRebuild = false;\n                }\n                if (this._hasCachedRelationships && !forceRebuild) {\n                    return;\n                }\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    node.children = this.getChildren(node);\n                    node.parents = this.getParents(node);\n                }\n                this._hasCachedRelationships = true;\n            },\n            assignLevels: function (startNode, offset, visited) {\n                if (!startNode) {\n                    throw 'Start node not specified.';\n                }\n                if (Utils.isUndefined(offset)) {\n                    offset = 0;\n                }\n                this.cacheRelationships();\n                if (Utils.isUndefined(visited)) {\n                    visited = new Dictionary();\n                    Utils.forEach(this.nodes, function (n) {\n                        visited.add(n, false);\n                    });\n                }\n                visited.set(startNode, true);\n                startNode.level = offset;\n                var children = startNode.children;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (!child || visited.get(child)) {\n                        continue;\n                    }\n                    this.assignLevels(child, offset + 1, visited);\n                }\n            },\n            root: function (value) {\n                if (Utils.isUndefined(value)) {\n                    if (!this._root) {\n                        var found = Utils.first(this.nodes, function (n) {\n                            return n.incoming.length === 0;\n                        });\n                        if (found) {\n                            return found;\n                        }\n                        return Utils.first(this.nodes);\n                    } else {\n                        return this._root;\n                    }\n                } else {\n                    this._root = value;\n                }\n            },\n            getConnectedComponents: function () {\n                this.componentIndex = 0;\n                this.setItemIndices();\n                var componentId = Utils.initArray(this.nodes.length, -1);\n                for (var v = 0; v < this.nodes.length; v++) {\n                    if (componentId[v] === -1) {\n                        this._collectConnectedNodes(componentId, v);\n                        this.componentIndex++;\n                    }\n                }\n                var components = [], i;\n                for (i = 0; i < this.componentIndex; ++i) {\n                    components[i] = new Graph();\n                }\n                for (i = 0; i < componentId.length; ++i) {\n                    var graph = components[componentId[i]];\n                    graph.addNodeAndOutgoings(this.nodes[i]);\n                }\n                components.sort(function (a, b) {\n                    return b.nodes.length - a.nodes.length;\n                });\n                return components;\n            },\n            _collectConnectedNodes: function (setIds, nodeIndex) {\n                setIds[nodeIndex] = this.componentIndex;\n                var node = this.nodes[nodeIndex];\n                Utils.forEach(node.links, function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n            },\n            calcBounds: function () {\n                if (this.isEmpty()) {\n                    this.bounds = new Rect();\n                    return this.bounds;\n                }\n                var b = null;\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (!b) {\n                        b = node.bounds();\n                    } else {\n                        b = b.union(node.bounds());\n                    }\n                }\n                this.bounds = b;\n                return this.bounds;\n            },\n            getSpanningTree: function (root) {\n                var tree = new Graph();\n                var map = new Dictionary(), source, target;\n                tree.root = root.clone();\n                tree.root.level = 0;\n                tree.root.id = root.id;\n                map.add(root, tree.root);\n                root.level = 0;\n                var visited = [];\n                var remaining = [];\n                tree._addNode(tree.root);\n                visited.push(root);\n                remaining.push(root);\n                var levelCount = 1;\n                while (remaining.length > 0) {\n                    var next = remaining.pop();\n                    for (var ni = 0; ni < next.links.length; ni++) {\n                        var link = next.links[ni];\n                        var cn = link.getComplement(next);\n                        if (contains(visited, cn)) {\n                            continue;\n                        }\n                        cn.level = next.level + 1;\n                        if (levelCount < cn.level + 1) {\n                            levelCount = cn.level + 1;\n                        }\n                        if (!contains(remaining, cn)) {\n                            remaining.push(cn);\n                        }\n                        if (!contains(visited, cn)) {\n                            visited.push(cn);\n                        }\n                        if (map.containsKey(next)) {\n                            source = map.get(next);\n                        } else {\n                            source = next.clone();\n                            source.level = next.level;\n                            source.id = next.id;\n                            map.add(next, source);\n                        }\n                        if (map.containsKey(cn)) {\n                            target = map.get(cn);\n                        } else {\n                            target = cn.clone();\n                            target.level = cn.level;\n                            target.id = cn.id;\n                            map.add(cn, target);\n                        }\n                        var newLink = new Link(source, target);\n                        tree.addLink(newLink);\n                    }\n                }\n                var treeLevels = [];\n                for (var i = 0; i < levelCount; i++) {\n                    treeLevels.push([]);\n                }\n                Utils.forEach(tree.nodes, function (node) {\n                    treeLevels[node.level].push(node);\n                });\n                tree.treeLevels = treeLevels;\n                tree.cacheRelationships();\n                return tree;\n            },\n            takeRandomNode: function (excludedNodes, incidenceLessThan) {\n                if (Utils.isUndefined(excludedNodes)) {\n                    excludedNodes = [];\n                }\n                if (Utils.isUndefined(incidenceLessThan)) {\n                    incidenceLessThan = 4;\n                }\n                if (this.nodes.length === 0) {\n                    return null;\n                }\n                if (this.nodes.length === 1) {\n                    return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n                }\n                var pool = $.grep(this.nodes, function (node) {\n                    return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n                });\n                if (Utils.isEmpty(pool)) {\n                    return null;\n                }\n                return pool[Utils.randomInteger(0, pool.length)];\n            },\n            isEmpty: function () {\n                return Utils.isEmpty(this.nodes);\n            },\n            isHealthy: function () {\n                return Utils.all(this.links, function (link) {\n                    return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n                }, this);\n            },\n            getParents: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getParents();\n            },\n            getChildren: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getChildren();\n            },\n            addLink: function (sourceOrLink, target, owner) {\n                if (Utils.isUndefined(sourceOrLink)) {\n                    throw 'The source of the link is not defined.';\n                }\n                if (Utils.isUndefined(target)) {\n                    if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === 'Link') {\n                        this.addExistingLink(sourceOrLink);\n                        return;\n                    } else {\n                        throw 'The target of the link is not defined.';\n                    }\n                }\n                var foundSource = this.getNode(sourceOrLink);\n                if (Utils.isUndefined(foundSource)) {\n                    foundSource = this.addNode(sourceOrLink);\n                }\n                var foundTarget = this.getNode(target);\n                if (Utils.isUndefined(foundTarget)) {\n                    foundTarget = this.addNode(target);\n                }\n                var newLink = new Link(foundSource, foundTarget);\n                if (Utils.isDefined(owner)) {\n                    newLink.owner = owner;\n                }\n                this.links.push(newLink);\n                return newLink;\n            },\n            removeAllLinks: function () {\n                while (this.links.length > 0) {\n                    var link = this.links[0];\n                    this.removeLink(link);\n                }\n            },\n            addExistingLink: function (link) {\n                if (this.hasLink(link)) {\n                    return;\n                }\n                this.links.push(link);\n                if (this.hasNode(link.source.id)) {\n                    var s = this.getNode(link.source.id);\n                    link.changeSource(s);\n                } else {\n                    this.addNode(link.source);\n                }\n                if (this.hasNode(link.target.id)) {\n                    var t = this.getNode(link.target.id);\n                    link.changeTarget(t);\n                } else {\n                    this.addNode(link.target);\n                }\n            },\n            hasLink: function (linkOrId) {\n                if (Utils.isString(linkOrId)) {\n                    return Utils.any(this.links, function (link) {\n                        return link.id === linkOrId;\n                    });\n                }\n                if (linkOrId.type === 'Link') {\n                    return contains(this.links, linkOrId);\n                }\n                throw 'The given object is neither an identifier nor a Link.';\n            },\n            getNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                if (this._nodeMap.containsKey(id)) {\n                    return this._nodeMap.get(id);\n                }\n            },\n            hasNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                return this._nodeMap.containsKey(id);\n            },\n            _addNode: function (node) {\n                this.nodes.push(node);\n                this._nodeMap.add(node.id, node);\n            },\n            _removeNode: function (node) {\n                Utils.remove(this.nodes, node);\n                this._nodeMap.remove(node.id);\n            },\n            removeNode: function (nodeOrId) {\n                var n = nodeOrId;\n                if (Utils.isString(nodeOrId)) {\n                    n = this.getNode(nodeOrId);\n                }\n                if (Utils.isDefined(n)) {\n                    var links = n.links;\n                    n.links = [];\n                    for (var i = 0, len = links.length; i < len; i++) {\n                        var link = links[i];\n                        this.removeLink(link);\n                    }\n                    this._removeNode(n);\n                } else {\n                    throw 'The identifier should be a Node or the Id (string) of a node.';\n                }\n            },\n            areConnected: function (n1, n2) {\n                return Utils.any(this.links, function (link) {\n                    return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n                });\n            },\n            removeLink: function (link) {\n                Utils.remove(this.links, link);\n                Utils.remove(link.source.outgoing, link);\n                Utils.remove(link.source.links, link);\n                Utils.remove(link.target.incoming, link);\n                Utils.remove(link.target.links, link);\n            },\n            addNode: function (nodeOrId, layoutRect, owner) {\n                var newNode = null;\n                if (!Utils.isDefined(nodeOrId)) {\n                    throw 'No Node or identifier for a new Node is given.';\n                }\n                if (Utils.isString(nodeOrId)) {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = new Node(nodeOrId);\n                } else {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = nodeOrId;\n                }\n                if (Utils.isDefined(layoutRect)) {\n                    newNode.bounds(layoutRect);\n                }\n                if (Utils.isDefined(owner)) {\n                    newNode.owner = owner;\n                }\n                this._addNode(newNode);\n                return newNode;\n            },\n            addNodeAndOutgoings: function (node) {\n                if (!this.hasNode(node)) {\n                    this._addNode(node);\n                }\n                var newLinks = node.outgoing;\n                node.outgoing = [];\n                Utils.forEach(newLinks, function (link) {\n                    this.addExistingLink(link);\n                }, this);\n            },\n            setItemIndices: function () {\n                var i;\n                for (i = 0; i < this.nodes.length; ++i) {\n                    this.nodes[i].index = i;\n                }\n                for (i = 0; i < this.links.length; ++i) {\n                    this.links[i].index = i;\n                }\n            },\n            clone: function (saveMapping) {\n                var copy = new Graph();\n                var save = Utils.isDefined(saveMapping) && saveMapping === true;\n                if (save) {\n                    copy.nodeMap = new Dictionary();\n                    copy.linkMap = new Dictionary();\n                }\n                var map = new Dictionary();\n                Utils.forEach(this.nodes, function (nOriginal) {\n                    var nCopy = nOriginal.clone();\n                    map.set(nOriginal, nCopy);\n                    copy._addNode(nCopy);\n                    if (save) {\n                        copy.nodeMap.set(nCopy, nOriginal);\n                    }\n                });\n                Utils.forEach(this.links, function (linkOriginal) {\n                    if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                        var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                        if (save) {\n                            copy.linkMap.set(linkCopy, linkOriginal);\n                        }\n                    }\n                });\n                return copy;\n            },\n            linearize: function (addIds) {\n                return Graph.Utils.linearize(this, addIds);\n            },\n            depthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var visited = [];\n                this._dftIterator(foundNode, action, visited);\n            },\n            _dftIterator: function (node, action, visited) {\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child)) {\n                        continue;\n                    }\n                    this._dftIterator(child, action, visited);\n                }\n            },\n            breadthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var queue = new Queue();\n                var visited = [];\n                queue.enqueue(foundNode);\n                while (queue.length > 0) {\n                    var node = queue.dequeue();\n                    action(node);\n                    visited.push(node);\n                    var children = node.getChildren();\n                    for (var i = 0, len = children.length; i < len; i++) {\n                        var child = children[i];\n                        if (contains(visited, child) || contains(queue, child)) {\n                            continue;\n                        }\n                        queue.enqueue(child);\n                    }\n                }\n            },\n            _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n                indices.add(node, index);\n                lowLinks.add(node, index);\n                index++;\n                stack.push(node);\n                var children = node.getChildren(), next;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    next = children[i];\n                    if (!indices.containsKey(next)) {\n                        this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                        lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                    } else if (contains(stack, next)) {\n                        lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                    }\n                }\n                if (lowLinks.get(node) === indices.get(node)) {\n                    var component = [];\n                    do {\n                        next = stack.pop();\n                        component.push(next);\n                    } while (next !== node);\n                    if (!excludeSingleItems || component.length > 1) {\n                        connected.push(component);\n                    }\n                }\n            },\n            findCycles: function (excludeSingleItems) {\n                if (Utils.isUndefined(excludeSingleItems)) {\n                    excludeSingleItems = true;\n                }\n                var indices = new Dictionary();\n                var lowLinks = new Dictionary();\n                var connected = [];\n                var stack = [];\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (indices.containsKey(node)) {\n                        continue;\n                    }\n                    this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n                }\n                return connected;\n            },\n            isAcyclic: function () {\n                return Utils.isEmpty(this.findCycles());\n            },\n            isSubGraph: function (other) {\n                var otherArray = other.linearize();\n                var thisArray = this.linearize();\n                return Utils.all(otherArray, function (s) {\n                    return contains(thisArray, s);\n                });\n            },\n            makeAcyclic: function () {\n                if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                    return [];\n                }\n                if (this.nodes.length == 2) {\n                    var result = [];\n                    if (this.links.length > 1) {\n                        var oneLink = this.links[0];\n                        var oneNode = oneLink.source;\n                        for (var i = 0, len = this.links.length; i < len; i++) {\n                            var link = this.links[i];\n                            if (link.source == oneNode) {\n                                continue;\n                            }\n                            var rev = link.reverse();\n                            result.push(rev);\n                        }\n                    }\n                    return result;\n                }\n                var copy = this.clone(true);\n                var N = this.nodes.length;\n                var intensityCatalog = new Dictionary();\n                var flowIntensity = function (node) {\n                    if (node.outgoing.length === 0) {\n                        return 2 - N;\n                    } else if (node.incoming.length === 0) {\n                        return N - 2;\n                    } else {\n                        return node.outgoing.length - node.incoming.length;\n                    }\n                };\n                var catalogEqualIntensity = function (node, intensityCatalog) {\n                    var intensity = flowIntensity(node, N);\n                    if (!intensityCatalog.containsKey(intensity)) {\n                        intensityCatalog.set(intensity, []);\n                    }\n                    intensityCatalog.get(intensity).push(node);\n                };\n                Utils.forEach(copy.nodes, function (v) {\n                    catalogEqualIntensity(v, intensityCatalog);\n                });\n                var sourceStack = [];\n                var targetStack = [];\n                while (copy.nodes.length > 0) {\n                    var source, target, intensity;\n                    if (intensityCatalog.containsKey(2 - N)) {\n                        var targets = intensityCatalog.get(2 - N);\n                        while (targets.length > 0) {\n                            target = targets.pop();\n                            for (var li = 0; li < target.links.length; li++) {\n                                var targetLink = target.links[li];\n                                source = targetLink.getComplement(target);\n                                intensity = flowIntensity(source, N);\n                                Utils.remove(intensityCatalog.get(intensity), source);\n                                source.removeLink(targetLink);\n                                catalogEqualIntensity(source, intensityCatalog);\n                            }\n                            copy._removeNode(target);\n                            targetStack.unshift(target);\n                        }\n                    }\n                    if (intensityCatalog.containsKey(N - 2)) {\n                        var sources = intensityCatalog.get(N - 2);\n                        while (sources.length > 0) {\n                            source = sources.pop();\n                            for (var si = 0; si < source.links.length; si++) {\n                                var sourceLink = source.links[si];\n                                target = sourceLink.getComplement(source);\n                                intensity = flowIntensity(target, N);\n                                Utils.remove(intensityCatalog.get(intensity), target);\n                                target.removeLink(sourceLink);\n                                catalogEqualIntensity(target, intensityCatalog);\n                            }\n                            sourceStack.push(source);\n                            copy._removeNode(source);\n                        }\n                    }\n                    if (copy.nodes.length > 0) {\n                        for (var k = N - 3; k > 2 - N; k--) {\n                            if (intensityCatalog.containsKey(k) && intensityCatalog.get(k).length > 0) {\n                                var maxdiff = intensityCatalog.get(k);\n                                var v = maxdiff.pop();\n                                for (var ri = 0; ri < v.links.length; ri++) {\n                                    var ril = v.links[ri];\n                                    var u = ril.getComplement(v);\n                                    intensity = flowIntensity(u, N);\n                                    Utils.remove(intensityCatalog.get(intensity), u);\n                                    u.removeLink(ril);\n                                    catalogEqualIntensity(u, intensityCatalog);\n                                }\n                                sourceStack.push(v);\n                                copy._removeNode(v);\n                                break;\n                            }\n                        }\n                    }\n                }\n                sourceStack = sourceStack.concat(targetStack);\n                var vertexOrder = new Dictionary();\n                for (var kk = 0; kk < this.nodes.length; kk++) {\n                    vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n                }\n                var reversedEdges = [];\n                Utils.forEach(this.links, function (link) {\n                    if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                        link.reverse();\n                        reversedEdges.push(link);\n                    }\n                });\n                return reversedEdges;\n            }\n        });\n        Graph.Predefined = {\n            EightGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->4',\n                    '4->1',\n                    '3->5',\n                    '5->6',\n                    '6->7',\n                    '7->3'\n                ]);\n            },\n            Mindmap: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '0->2',\n                    '0->3',\n                    '0->4',\n                    '0->5',\n                    '1->6',\n                    '1->7',\n                    '7->8',\n                    '2->9',\n                    '9->10',\n                    '9->11',\n                    '3->12',\n                    '12->13',\n                    '13->14',\n                    '4->15',\n                    '4->16',\n                    '15->17',\n                    '15->18',\n                    '18->19',\n                    '18->20',\n                    '14->21',\n                    '14->22',\n                    '5->23',\n                    '23->24',\n                    '23->25',\n                    '6->26'\n                ]);\n            },\n            ThreeGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->1'\n                ]);\n            },\n            BinaryTree: function (levels) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 5;\n                }\n                return Graph.Utils.createBalancedTree(levels, 2);\n            },\n            Linear: function (length) {\n                if (Utils.isUndefined(length)) {\n                    length = 10;\n                }\n                return Graph.Utils.createBalancedTree(length, 1);\n            },\n            Tree: function (levels, siblingsCount) {\n                return Graph.Utils.createBalancedTree(levels, siblingsCount);\n            },\n            Forest: function (levels, siblingsCount, trees) {\n                return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n            },\n            Workflow: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '1->2',\n                    '2->3',\n                    '1->4',\n                    '4->3',\n                    '3->5',\n                    '5->6',\n                    '6->3',\n                    '6->7',\n                    '5->4'\n                ]);\n            },\n            Grid: function (n, m) {\n                var g = new diagram.Graph();\n                if (n <= 0 && m <= 0) {\n                    return g;\n                }\n                for (var i = 0; i < n + 1; i++) {\n                    var previous = null;\n                    for (var j = 0; j < m + 1; j++) {\n                        var node = new Node(i.toString() + '.' + j.toString());\n                        g.addNode(node);\n                        if (previous) {\n                            g.addLink(previous, node);\n                        }\n                        if (i > 0) {\n                            var left = g.getNode((i - 1).toString() + '.' + j.toString());\n                            g.addLink(left, node);\n                        }\n                        previous = node;\n                    }\n                }\n                return g;\n            }\n        };\n        Graph.Utils = {\n            parse: function (graphString) {\n                var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n                for (var i = 0, len = parts.length; i < len; i++) {\n                    var part = parts[i];\n                    if (Utils.isString(part)) {\n                        if (part.indexOf('->') < 0) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        var p = part.split('->');\n                        if (p.length != 2) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        previousLink = new Link(p[0], p[1]);\n                        graph.addLink(previousLink);\n                    }\n                    if (Utils.isObject(part)) {\n                        if (!previousLink) {\n                            throw 'Specification found before Link definition.';\n                        }\n                        kendo.deepExtend(previousLink, part);\n                    }\n                }\n                return graph;\n            },\n            linearize: function (graph, addIds) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'Expected an instance of a Graph object in slot one.';\n                }\n                if (Utils.isUndefined(addIds)) {\n                    addIds = false;\n                }\n                var lin = [];\n                for (var i = 0, len = graph.links.length; i < len; i++) {\n                    var link = graph.links[i];\n                    lin.push(link.source.id + '->' + link.target.id);\n                    if (addIds) {\n                        lin.push({ id: link.id });\n                    }\n                }\n                return lin;\n            },\n            _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n                if (Utils.isUndefined(p)) {\n                    p = new diagram.Point(0, 0);\n                }\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                }\n                shapeDefaults = kendo.deepExtend({\n                    width: 20,\n                    height: 20,\n                    id: id,\n                    radius: 10,\n                    fill: '#778899',\n                    data: 'circle',\n                    undoable: false,\n                    x: p.x,\n                    y: p.y\n                }, shapeDefaults);\n                return kendoDiagram.addShape(shapeDefaults);\n            },\n            _addConnection: function (diagram, from, to, options) {\n                return diagram.connect(from, to, options);\n            },\n            createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'The diagram surface is undefined.';\n                }\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph specification defined.';\n                }\n                if (Utils.isUndefined(doLayout)) {\n                    doLayout = true;\n                }\n                if (Utils.isUndefined(randomSize)) {\n                    randomSize = false;\n                }\n                var width = diagram.element.clientWidth || 200;\n                var height = diagram.element.clientHeight || 200;\n                var map = [], node, shape;\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    node = graph.nodes[i];\n                    var p = node.position;\n                    if (Utils.isUndefined(p)) {\n                        if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                            p = new Point(node.x, node.y);\n                        } else {\n                            p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                        }\n                    }\n                    var opt = {};\n                    if (node.id === '0') {\n                    } else if (randomSize) {\n                        kendo.deepExtend(opt, {\n                            width: Math.random() * 150 + 20,\n                            height: Math.random() * 80 + 50,\n                            data: 'rectangle',\n                            fill: { color: '#778899' }\n                        });\n                    }\n                    shape = this._addShape(diagram, p, node.id, opt);\n                    var bounds = shape.bounds();\n                    if (Utils.isDefined(bounds)) {\n                        node.x = bounds.x;\n                        node.y = bounds.y;\n                        node.width = bounds.width;\n                        node.height = bounds.height;\n                    }\n                    map[node.id] = shape;\n                }\n                for (var gli = 0; gli < graph.links.length; gli++) {\n                    var link = graph.links[gli];\n                    var sourceShape = map[link.source.id];\n                    if (Utils.isUndefined(sourceShape)) {\n                        continue;\n                    }\n                    var targetShape = map[link.target.id];\n                    if (Utils.isUndefined(targetShape)) {\n                        continue;\n                    }\n                    this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n                }\n                if (doLayout) {\n                    var l = new diagram.SpringLayout(diagram);\n                    l.layoutGraph(graph, { limitToView: false });\n                    for (var shi = 0; shi < graph.nodes.length; shi++) {\n                        node = graph.nodes[shi];\n                        shape = map[node.id];\n                        shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            },\n            createBalancedTree: function (levels, siblingsCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                g.root = root;\n                lastAdded.push(root);\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n                return g;\n            },\n            createBalancedForest: function (levels, siblingsCount, treeCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                if (Utils.isUndefined(treeCount)) {\n                    treeCount = 5;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                    return g;\n                }\n                for (var t = 0; t < treeCount; t++) {\n                    var root = new Node((++counter).toString());\n                    g.addNode(root);\n                    lastAdded = [root];\n                    for (var i = 0; i < levels; i++) {\n                        news = [];\n                        for (var j = 0; j < lastAdded.length; j++) {\n                            var parent = lastAdded[j];\n                            for (var k = 0; k < siblingsCount; k++) {\n                                var item = new Node((++counter).toString());\n                                g.addLink(parent, item);\n                                news.push(item);\n                            }\n                        }\n                        lastAdded = news;\n                    }\n                }\n                return g;\n            },\n            createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n                if (Utils.isUndefined(nodeCount)) {\n                    nodeCount = 40;\n                }\n                if (Utils.isUndefined(maxIncidence)) {\n                    maxIncidence = 4;\n                }\n                if (Utils.isUndefined(isTree)) {\n                    isTree = false;\n                }\n                var g = new diagram.Graph(), counter = -1;\n                if (nodeCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                if (nodeCount === 1) {\n                    return g;\n                }\n                if (nodeCount > 1) {\n                    for (var i = 1; i < nodeCount; i++) {\n                        var poolNode = g.takeRandomNode([], maxIncidence);\n                        if (!poolNode) {\n                            break;\n                        }\n                        var newNode = g.addNode(i.toString());\n                        g.addLink(poolNode, newNode);\n                    }\n                    if (!isTree && nodeCount > 1) {\n                        var randomAdditions = Utils.randomInteger(1, nodeCount);\n                        for (var ri = 0; ri < randomAdditions; ri++) {\n                            var n1 = g.takeRandomNode([], maxIncidence);\n                            var n2 = g.takeRandomNode([], maxIncidence);\n                            if (n1 && n2 && !g.areConnected(n1, n2)) {\n                                g.addLink(n1, n2);\n                            }\n                        }\n                    }\n                    return g;\n                }\n            },\n            randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n                var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n                Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n            }\n        };\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Point: Point,\n            Intersect: Intersect,\n            Geometry: Geometry,\n            Rect: Rect,\n            Size: Size,\n            RectAlign: RectAlign,\n            Matrix: Matrix,\n            MatrixVector: MatrixVector,\n            normalVariable: normalVariable,\n            randomId: randomId,\n            Dictionary: Dictionary,\n            HashTable: HashTable,\n            Queue: Queue,\n            Set: Set,\n            Node: Node,\n            Link: Link,\n            Graph: Graph,\n            PathDefiner: PathDefiner\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/svg', [\n        'kendo.drawing',\n        'dataviz/diagram/math'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, Point = diagram.Point, Rect = diagram.Rect, Matrix = diagram.Matrix, Utils = diagram.Utils, isNumber = Utils.isNumber, isString = Utils.isString, MatrixVector = diagram.MatrixVector, g = kendo.geometry, d = kendo.drawing, defined = d.util.defined, inArray = $.inArray;\n        var TRANSPARENT = 'transparent', Markers = {\n                none: 'none',\n                arrowStart: 'ArrowStart',\n                filledCircle: 'FilledCircle',\n                arrowEnd: 'ArrowEnd'\n            }, FULL_CIRCLE_ANGLE = 360, START = 'start', END = 'end', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y';\n        diagram.Markers = Markers;\n        function diffNumericOptions(options, fields) {\n            var elementOptions = this.options;\n            var hasChanges = false;\n            var value, field;\n            for (var i = 0; i < fields.length; i++) {\n                field = fields[i];\n                value = options[field];\n                if (isNumber(value) && elementOptions[field] !== value) {\n                    elementOptions[field] = value;\n                    hasChanges = true;\n                }\n            }\n            return hasChanges;\n        }\n        var Scale = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrix: function () {\n                return Matrix.scaling(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('scale({0},{1})', this.x, this.y);\n            },\n            invert: function () {\n                return new Scale(1 / this.x, 1 / this.y);\n            }\n        });\n        var Translation = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrixVector: function () {\n                return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n            },\n            toMatrix: function () {\n                return Matrix.translation(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('translate({0},{1})', this.x, this.y);\n            },\n            plus: function (delta) {\n                this.x += delta.x;\n                this.y += delta.y;\n            },\n            times: function (factor) {\n                this.x *= factor;\n                this.y *= factor;\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            normalize: function () {\n                if (this.Length === 0) {\n                    return;\n                }\n                this.times(1 / this.length());\n            },\n            invert: function () {\n                return new Translation(-this.x, -this.y);\n            }\n        });\n        var Rotation = Class.extend({\n            init: function (angle, x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.angle = angle;\n            },\n            toString: function () {\n                if (this.x && this.y) {\n                    return kendo.format('rotate({0},{1},{2})', this.angle, this.x, this.y);\n                } else {\n                    return kendo.format('rotate({0})', this.angle);\n                }\n            },\n            toMatrix: function () {\n                return Matrix.rotation(this.angle, this.x, this.y);\n            },\n            center: function () {\n                return new Point(this.x, this.y);\n            },\n            invert: function () {\n                return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n            }\n        });\n        Rotation.ZERO = new Rotation(0);\n        Rotation.create = function (rotation) {\n            return new Rotation(rotation.angle, rotation.x, rotation.y);\n        };\n        Rotation.parse = function (str) {\n            var values = str.slice(1, str.length - 1).split(','), angle = values[0], x = values[1], y = values[2];\n            var rotation = new Rotation(angle, x, y);\n            return rotation;\n        };\n        var CompositeTransform = Class.extend({\n            init: function (x, y, scaleX, scaleY, angle, center) {\n                this.translate = new Translation(x, y);\n                if (scaleX !== undefined && scaleY !== undefined) {\n                    this.scale = new Scale(scaleX, scaleY);\n                }\n                if (angle !== undefined) {\n                    this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n                }\n            },\n            toString: function () {\n                var toString = function (transform) {\n                    return transform ? transform.toString() : '';\n                };\n                return toString(this.translate) + toString(this.rotate) + toString(this.scale);\n            },\n            render: function (visual) {\n                visual._transform = this;\n                visual._renderTransform();\n            },\n            toMatrix: function () {\n                var m = Matrix.unit();\n                if (this.translate) {\n                    m = m.times(this.translate.toMatrix());\n                }\n                if (this.rotate) {\n                    m = m.times(this.rotate.toMatrix());\n                }\n                if (this.scale) {\n                    m = m.times(this.scale.toMatrix());\n                }\n                return m;\n            },\n            invert: function () {\n                var rotate = this.rotate ? this.rotate.invert() : undefined, rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(), scale = this.scale ? this.scale.invert() : undefined, scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n                var translatePoint = new Point(-this.translate.x, -this.translate.y);\n                translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n                var translate = new Translation(translatePoint.x, translatePoint.y);\n                var transform = new CompositeTransform();\n                transform.translate = translate;\n                transform.rotate = rotate;\n                transform.scale = scale;\n                return transform;\n            }\n        });\n        var AutoSizeableMixin = {\n            _setScale: function () {\n                var options = this.options;\n                var originWidth = this._originWidth;\n                var originHeight = this._originHeight;\n                var scaleX = options.width / originWidth;\n                var scaleY = options.height / originHeight;\n                if (!isNumber(scaleX)) {\n                    scaleX = 1;\n                }\n                if (!isNumber(scaleY)) {\n                    scaleY = 1;\n                }\n                this._transform.scale = new Scale(scaleX, scaleY);\n            },\n            _setTranslate: function () {\n                var options = this.options;\n                var x = options.x || 0;\n                var y = options.y || 0;\n                this._transform.translate = new Translation(x, y);\n            },\n            _initSize: function () {\n                var options = this.options;\n                var transform = false;\n                if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                    this._measure(true);\n                    this._setScale();\n                    transform = true;\n                }\n                if (defined(options.x) || defined(options.y)) {\n                    this._setTranslate();\n                    transform = true;\n                }\n                if (transform) {\n                    this._renderTransform();\n                }\n            },\n            _updateSize: function (options) {\n                var update = false;\n                if (this.options.autoSize !== false && this._diffNumericOptions(options, [\n                        WIDTH,\n                        HEIGHT\n                    ])) {\n                    update = true;\n                    this._measure(true);\n                    this._setScale();\n                }\n                if (this._diffNumericOptions(options, [\n                        X,\n                        Y\n                    ])) {\n                    update = true;\n                    this._setTranslate();\n                }\n                if (update) {\n                    this._renderTransform();\n                }\n                return update;\n            }\n        };\n        var Element = Class.extend({\n            init: function (options) {\n                var element = this;\n                element.options = deepExtend({}, element.options, options);\n                element.id = element.options.id;\n                element._originSize = Rect.empty();\n                element._transform = new CompositeTransform();\n            },\n            visible: function (value) {\n                return this.drawingContainer().visible(value);\n            },\n            redraw: function (options) {\n                if (options && options.id) {\n                    this.id = options.id;\n                }\n            },\n            position: function (x, y) {\n                var options = this.options;\n                if (!defined(x)) {\n                    return new Point(options.x, options.y);\n                }\n                if (defined(y)) {\n                    options.x = x;\n                    options.y = y;\n                } else if (x instanceof Point) {\n                    options.x = x.x;\n                    options.y = x.y;\n                }\n                this._transform.translate = new Translation(options.x, options.y);\n                this._renderTransform();\n            },\n            rotate: function (angle, center) {\n                if (defined(angle)) {\n                    this._transform.rotate = new Rotation(angle, center.x, center.y);\n                    this._renderTransform();\n                }\n                return this._transform.rotate || Rotation.ZERO;\n            },\n            drawingContainer: function () {\n                return this.drawingElement;\n            },\n            _renderTransform: function () {\n                var matrix = this._transform.toMatrix();\n                this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n            },\n            _hover: function () {\n            },\n            _diffNumericOptions: diffNumericOptions,\n            _measure: function (force) {\n                var rect;\n                if (!this._measured || force) {\n                    var box = this._boundingBox() || new g.Rect();\n                    var startPoint = box.topLeft();\n                    rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                    this._originSize = rect;\n                    this._originWidth = rect.width;\n                    this._originHeight = rect.height;\n                    this._measured = true;\n                } else {\n                    rect = this._originSize;\n                }\n                return rect;\n            },\n            _boundingBox: function () {\n                return this.drawingElement.rawBBox();\n            }\n        });\n        var VisualBase = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                options = this.options;\n                options.fill = normalizeDrawingOptions(options.fill);\n                options.stroke = normalizeDrawingOptions(options.stroke);\n            },\n            options: {\n                stroke: {\n                    color: 'gray',\n                    width: 1\n                },\n                fill: { color: TRANSPARENT }\n            },\n            fill: function (color, opacity) {\n                this._fill({\n                    color: getColor(color),\n                    opacity: opacity\n                });\n            },\n            stroke: function (color, width, opacity) {\n                this._stroke({\n                    color: getColor(color),\n                    width: width,\n                    opacity: opacity\n                });\n            },\n            redraw: function (options) {\n                if (options) {\n                    var stroke = options.stroke;\n                    var fill = options.fill;\n                    if (stroke) {\n                        this._stroke(normalizeDrawingOptions(stroke));\n                    }\n                    if (fill) {\n                        this._fill(normalizeDrawingOptions(fill));\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _hover: function (show) {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var hover = options.hover;\n                if (hover && hover.fill) {\n                    var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                    drawingElement.fill(fill.color, fill.opacity);\n                }\n            },\n            _stroke: function (strokeOptions) {\n                var options = this.options;\n                deepExtend(options, { stroke: strokeOptions });\n                strokeOptions = options.stroke;\n                var stroke = null;\n                if (strokeOptions.width > 0) {\n                    stroke = {\n                        color: strokeOptions.color,\n                        width: strokeOptions.width,\n                        opacity: strokeOptions.opacity,\n                        dashType: strokeOptions.dashType\n                    };\n                }\n                this.drawingElement.options.set('stroke', stroke);\n            },\n            _fill: function (fillOptions) {\n                var options = this.options;\n                deepExtend(options, { fill: fillOptions || {} });\n                var fill = options.fill;\n                if (fill.gradient) {\n                    var gradient = fill.gradient;\n                    var GradientClass = gradient.type === 'radial' ? d.RadialGradient : d.LinearGradient;\n                    this.drawingElement.fill(new GradientClass(gradient));\n                } else {\n                    this.drawingElement.fill(fill.color, fill.opacity);\n                }\n            }\n        });\n        var TextBlock = VisualBase.extend({\n            init: function (options) {\n                options = this._textColor(options);\n                VisualBase.fn.init.call(this, options);\n                this._font();\n                this._initText();\n                this._initSize();\n            },\n            options: {\n                fontSize: 15,\n                fontFamily: 'sans-serif',\n                stroke: { width: 0 },\n                fill: { color: 'black' },\n                autoSize: true\n            },\n            _initText: function () {\n                var options = this.options;\n                this.drawingElement = new d.Text(defined(options.text) ? options.text : '', new g.Point(), { font: options.font });\n                this._fill();\n                this._stroke();\n            },\n            _textColor: function (options) {\n                if (options && options.color) {\n                    options = deepExtend({}, options, { fill: { color: options.color } });\n                }\n                return options;\n            },\n            _font: function () {\n                var options = this.options;\n                if (options.fontFamily && defined(options.fontSize)) {\n                    var fontOptions = [];\n                    if (options.fontStyle) {\n                        fontOptions.push(options.fontStyle);\n                    }\n                    if (options.fontWeight) {\n                        fontOptions.push(options.fontWeight);\n                    }\n                    fontOptions.push(options.fontSize + (isNumber(options.fontSize) ? 'px' : ''));\n                    fontOptions.push(options.fontFamily);\n                    options.font = fontOptions.join(' ');\n                } else {\n                    delete options.font;\n                }\n            },\n            content: function (text) {\n                return this.drawingElement.content(text);\n            },\n            redraw: function (options) {\n                if (options) {\n                    var sizeChanged = false;\n                    var textOptions = this.options;\n                    options = this._textColor(options);\n                    VisualBase.fn.redraw.call(this, options);\n                    if (options.fontFamily || defined(options.fontSize) || options.fontStyle || options.fontWeight) {\n                        deepExtend(textOptions, {\n                            fontFamily: options.fontFamily,\n                            fontSize: options.fontSize,\n                            fontStyle: options.fontStyle,\n                            fontWeight: options.fontWeight\n                        });\n                        this._font();\n                        this.drawingElement.options.set('font', textOptions.font);\n                        sizeChanged = true;\n                    }\n                    if (options.text) {\n                        this.content(options.text);\n                        sizeChanged = true;\n                    }\n                    if (!this._updateSize(options) && sizeChanged) {\n                        this._initSize();\n                    }\n                }\n            }\n        });\n        deepExtend(TextBlock.fn, AutoSizeableMixin);\n        var Rectangle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initPath();\n                this._setPosition();\n            },\n            _setPosition: function () {\n                var options = this.options;\n                var x = options.x;\n                var y = options.y;\n                if (defined(x) || defined(y)) {\n                    this.position(x || 0, y || 0);\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT\n                        ])) {\n                        this._drawPath();\n                    }\n                    if (this._diffNumericOptions(options, [\n                            X,\n                            Y\n                        ])) {\n                        this._setPosition();\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({\n                    stroke: options.stroke,\n                    closed: true\n                });\n                this._fill();\n                this._drawPath();\n            },\n            _drawPath: function () {\n                var drawingElement = this.drawingElement;\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var width = sizeOptions.width;\n                var height = sizeOptions.height;\n                drawingElement.segments.elements([\n                    createSegment(0, 0),\n                    createSegment(width, 0),\n                    createSegment(width, height),\n                    createSegment(0, height)\n                ]);\n            }\n        });\n        var MarkerBase = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                var anchor = this.options.anchor;\n                this.anchor = new g.Point(anchor.x, anchor.y);\n                this.createElement();\n            },\n            options: {\n                stroke: {\n                    color: TRANSPARENT,\n                    width: 0\n                },\n                fill: { color: 'black' }\n            },\n            _transformToPath: function (point, path) {\n                var transform = path.transform();\n                if (point && transform) {\n                    point = point.transformCopy(transform);\n                }\n                return point;\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.position) {\n                        this.options.position = options.position;\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            }\n        });\n        var CircleMarker = MarkerBase.extend({\n            options: {\n                radius: 4,\n                anchor: {\n                    x: 0,\n                    y: 0\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var options = this.options;\n                var position = options.position;\n                var segments = path.segments;\n                var targetSegment;\n                var point;\n                if (position == START) {\n                    targetSegment = segments[0];\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                }\n                if (targetSegment) {\n                    point = this._transformToPath(targetSegment.anchor(), path);\n                    this.drawingElement.transform(g.transform().translate(point.x, point.y));\n                }\n            }\n        });\n        var ArrowMarker = MarkerBase.extend({\n            options: {\n                path: 'M 0 0 L 10 5 L 0 10 L 3 5 z',\n                anchor: {\n                    x: 10,\n                    y: 5\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.path, {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var points = this._linePoints(path);\n                var start = points.start;\n                var end = points.end;\n                var transform = g.transform();\n                if (start) {\n                    transform.rotate(lineAngle(start, end), end);\n                }\n                if (end) {\n                    var anchor = this.anchor;\n                    var translate = end.clone().translate(-anchor.x, -anchor.y);\n                    transform.translate(translate.x, translate.y);\n                }\n                this.drawingElement.transform(transform);\n            },\n            _linePoints: function (path) {\n                var options = this.options;\n                var segments = path.segments;\n                var startPoint, endPoint, targetSegment;\n                if (options.position == START) {\n                    targetSegment = segments[0];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlOut();\n                        var nextSegment = segments[1];\n                        if (!startPoint && nextSegment) {\n                            startPoint = nextSegment.anchor();\n                        }\n                    }\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlIn();\n                        var prevSegment = segments[segments.length - 2];\n                        if (!startPoint && prevSegment) {\n                            startPoint = prevSegment.anchor();\n                        }\n                    }\n                }\n                if (endPoint) {\n                    return {\n                        start: this._transformToPath(startPoint, path),\n                        end: this._transformToPath(endPoint, path)\n                    };\n                }\n            }\n        });\n        var MarkerPathMixin = {\n            _getPath: function (position) {\n                var path = this.drawingElement;\n                if (path instanceof d.MultiPath) {\n                    if (position == START) {\n                        path = path.paths[0];\n                    } else {\n                        path = path.paths[path.paths.length - 1];\n                    }\n                }\n                if (path && path.segments.length) {\n                    return path;\n                }\n            },\n            _normalizeMarkerOptions: function (options) {\n                var startCap = options.startCap;\n                var endCap = options.endCap;\n                if (isString(startCap)) {\n                    options.startCap = { type: startCap };\n                }\n                if (isString(endCap)) {\n                    options.endCap = { type: endCap };\n                }\n            },\n            _removeMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    this.drawingContainer().remove(marker.drawingElement);\n                    delete this._markers[position];\n                }\n            },\n            _createMarkers: function () {\n                var options = this.options;\n                this._normalizeMarkerOptions(options);\n                this._markers = {};\n                this._markers[START] = this._createMarker(options.startCap, START);\n                this._markers[END] = this._createMarker(options.endCap, END);\n            },\n            _createMarker: function (options, position) {\n                var type = (options || {}).type;\n                var path = this._getPath(position);\n                var markerType, marker;\n                if (!path) {\n                    this._removeMarker(position);\n                    return;\n                }\n                if (type == Markers.filledCircle) {\n                    markerType = CircleMarker;\n                } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                    markerType = ArrowMarker;\n                } else {\n                    this._removeMarker(position);\n                }\n                if (markerType) {\n                    marker = new markerType(deepExtend({}, options, { position: position }));\n                    marker.positionMarker(path);\n                    this.drawingContainer().append(marker.drawingElement);\n                    return marker;\n                }\n            },\n            _positionMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    var path = this._getPath(position);\n                    if (path) {\n                        marker.positionMarker(path);\n                    } else {\n                        this._removeMarker(position);\n                    }\n                }\n            },\n            _capMap: {\n                start: 'startCap',\n                end: 'endCap'\n            },\n            _redrawMarker: function (pathChange, position, options) {\n                this._normalizeMarkerOptions(options);\n                var pathOptions = this.options;\n                var cap = this._capMap[position];\n                var pathCapType = (pathOptions[cap] || {}).type;\n                var optionsCap = options[cap];\n                var created = false;\n                if (optionsCap) {\n                    pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                    if (optionsCap.type && pathCapType != optionsCap.type) {\n                        this._removeMarker(position);\n                        this._markers[position] = this._createMarker(pathOptions[cap], position);\n                        created = true;\n                    } else if (this._markers[position]) {\n                        this._markers[position].redraw(optionsCap);\n                    }\n                } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                }\n                return created;\n            },\n            _redrawMarkers: function (pathChange, options) {\n                if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                    this._positionMarker(START);\n                }\n                if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                    this._positionMarker(END);\n                }\n            }\n        };\n        var Path = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._createElements();\n                this._initSize();\n            },\n            options: { autoSize: true },\n            drawingContainer: function () {\n                return this.container;\n            },\n            data: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (options.data != value) {\n                        options.data = value;\n                        this._setData(value);\n                        this._initSize();\n                        this._redrawMarkers(true, {});\n                    }\n                } else {\n                    return options.data;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    var pathOptions = this.options;\n                    var data = options.data;\n                    if (defined(data) && pathOptions.data != data) {\n                        pathOptions.data = data;\n                        this._setData(data);\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._updateSize(options);\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _createElements: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.data || '', { stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                this._createMarkers();\n            },\n            _setData: function (data) {\n                var drawingElement = this.drawingElement;\n                var multipath = d.Path.parse(data || '');\n                var paths = multipath.paths.slice(0);\n                multipath.paths.elements([]);\n                drawingElement.paths.elements(paths);\n            }\n        });\n        deepExtend(Path.fn, AutoSizeableMixin);\n        deepExtend(Path.fn, MarkerPathMixin);\n        var Line = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            redraw: function (options) {\n                if (options) {\n                    options = options || {};\n                    var from = options.from;\n                    var to = options.to;\n                    if (from) {\n                        this.options.from = from;\n                    }\n                    if (to) {\n                        this.options.to = to;\n                    }\n                    if (from || to) {\n                        this._drawPath();\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this._drawPath();\n                this.container.append(drawingElement);\n            },\n            _drawPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement;\n                var from = options.from || new Point();\n                var to = options.to || new Point();\n                drawingElement.segments.elements([\n                    createSegment(from.x, from.y),\n                    createSegment(to.x, to.y)\n                ]);\n            }\n        });\n        deepExtend(Line.fn, MarkerPathMixin);\n        var Polyline = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            points: function (points) {\n                var options = this.options;\n                if (points) {\n                    options.points = points;\n                    this._updatePath();\n                } else {\n                    return options.points;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    var points = options.points;\n                    VisualBase.fn.redraw.call(this, options);\n                    if (points && this._pointsDiffer(points)) {\n                        this.points(points);\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                if (options.points) {\n                    this._updatePath();\n                }\n            },\n            _pointsDiffer: function (points) {\n                var currentPoints = this.options.points;\n                var differ = currentPoints.length !== points.length;\n                if (!differ) {\n                    for (var i = 0; i < points.length; i++) {\n                        if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                            differ = true;\n                            break;\n                        }\n                    }\n                }\n                return differ;\n            },\n            _updatePath: function () {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var points = options.points;\n                var segments = [];\n                var point;\n                for (var i = 0; i < points.length; i++) {\n                    point = points[i];\n                    segments.push(createSegment(point.x, point.y));\n                }\n                drawingElement.segments.elements(segments);\n            },\n            options: { points: [] }\n        });\n        deepExtend(Polyline.fn, MarkerPathMixin);\n        var Image = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                this._initImage();\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.source) {\n                        this.drawingElement.src(options.source);\n                    }\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.drawingElement.rect(this._rect());\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _initImage: function () {\n                var options = this.options;\n                var rect = this._rect();\n                this.drawingElement = new d.Image(options.source, rect, {});\n            },\n            _rect: function () {\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n                var size = new g.Size(sizeOptions.width, sizeOptions.height);\n                return new g.Rect(origin, size);\n            }\n        });\n        var Group = Element.extend({\n            init: function (options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Group();\n                this._initSize();\n            },\n            options: { autoSize: false },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                this.children.push(visual);\n                this._childrenChange = true;\n            },\n            remove: function (visual) {\n                if (this._remove(visual)) {\n                    this._childrenChange = true;\n                }\n            },\n            _remove: function (visual) {\n                var index = inArray(visual, this.children);\n                if (index >= 0) {\n                    this.drawingElement.removeAt(index);\n                    this.children.splice(index, 1);\n                    return true;\n                }\n            },\n            clear: function () {\n                this.drawingElement.clear();\n                this.children = [];\n                this._childrenChange = true;\n            },\n            toFront: function (visuals) {\n                var visual;\n                for (var i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    if (this._remove(visual)) {\n                        this.append(visual);\n                    }\n                }\n            },\n            toBack: function (visuals) {\n                this._reorderChildren(visuals, 0);\n            },\n            toIndex: function (visuals, indices) {\n                this._reorderChildren(visuals, indices);\n            },\n            _reorderChildren: function (visuals, indices) {\n                var group = this.drawingElement;\n                var drawingChildren = group.children.slice(0);\n                var children = this.children;\n                var fixedPosition = isNumber(indices);\n                var i, index, toIndex, drawingElement, visual;\n                for (i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    drawingElement = visual.drawingContainer();\n                    index = inArray(visual, children);\n                    if (index >= 0) {\n                        drawingChildren.splice(index, 1);\n                        children.splice(index, 1);\n                        toIndex = fixedPosition ? indices : indices[i];\n                        drawingChildren.splice(toIndex, 0, drawingElement);\n                        children.splice(toIndex, 0, visual);\n                    }\n                }\n                group.clear();\n                group.append.apply(group, drawingChildren);\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (this._childrenChange) {\n                        this._childrenChange = false;\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                    } else {\n                        this._updateSize(options);\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _boundingBox: function () {\n                var children = this.children;\n                var boundingBox;\n                var visual, childBoundingBox;\n                for (var i = 0; i < children.length; i++) {\n                    visual = children[i];\n                    if (visual.visible() && visual._includeInBBox !== false) {\n                        childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                        if (childBoundingBox) {\n                            if (boundingBox) {\n                                boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                            } else {\n                                boundingBox = childBoundingBox;\n                            }\n                        }\n                    }\n                }\n                return boundingBox;\n            }\n        });\n        deepExtend(Group.fn, AutoSizeableMixin);\n        var Layout = Group.extend({\n            init: function (rect, options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n                this._initSize();\n            },\n            rect: function (rect) {\n                if (rect) {\n                    this.drawingElement.rect(toDrawingRect(rect));\n                } else {\n                    var drawingRect = this.drawingElement.rect();\n                    if (drawingRect) {\n                        return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                    }\n                }\n            },\n            reflow: function () {\n                this.drawingElement.reflow();\n            },\n            redraw: function (options) {\n                kendo.deepExtend(this.drawingElement.options, options);\n                Group.fn.redraw.call(this, options);\n            }\n        });\n        var Circle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initCircle();\n                this._initSize();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var circleOptions = this.options;\n                    if (options.center) {\n                        deepExtend(circleOptions, { center: options.center });\n                        this._center.move(circleOptions.center.x, circleOptions.center.y);\n                    }\n                    if (this._diffNumericOptions(options, ['radius'])) {\n                        this._circle.setRadius(circleOptions.radius);\n                    }\n                    this._updateSize(options);\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initCircle: function () {\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var radius = options.radius;\n                if (!defined(radius)) {\n                    if (!defined(width)) {\n                        width = height;\n                    }\n                    if (!defined(height)) {\n                        height = width;\n                    }\n                    options.radius = radius = Math.min(width, height) / 2;\n                }\n                var center = options.center || {\n                    x: radius,\n                    y: radius\n                };\n                this._center = new g.Point(center.x, center.y);\n                this._circle = new g.Circle(this._center, radius);\n                this.drawingElement = new d.Circle(this._circle, { stroke: options.stroke });\n                this._fill();\n            }\n        });\n        deepExtend(Circle.fn, AutoSizeableMixin);\n        var Canvas = Class.extend({\n            init: function (element, options) {\n                options = options || {};\n                this.element = element;\n                this.surface = d.Surface.create(element, options);\n                if (kendo.isFunction(this.surface.translate)) {\n                    this.translate = this._translate;\n                }\n                this.drawingElement = new d.Group();\n                this._viewBox = new Rect(0, 0, options.width, options.height);\n                this.size(this._viewBox);\n            },\n            bounds: function () {\n                var box = this.drawingElement.clippedBBox();\n                return new Rect(0, 0, box.width(), box.height());\n            },\n            size: function (size) {\n                var viewBox = this._viewBox;\n                if (defined(size)) {\n                    viewBox.width = size.width;\n                    viewBox.height = size.height;\n                    this.surface.setSize(size);\n                }\n                return {\n                    width: viewBox.width,\n                    height: viewBox.height\n                };\n            },\n            _translate: function (x, y) {\n                var viewBox = this._viewBox;\n                if (defined(x) && defined(y)) {\n                    viewBox.x = x;\n                    viewBox.y = y;\n                    this.surface.translate({\n                        x: x,\n                        y: y\n                    });\n                }\n                return {\n                    x: viewBox.x,\n                    y: viewBox.y\n                };\n            },\n            draw: function () {\n                this.surface.draw(this.drawingElement);\n            },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                return this;\n            },\n            remove: function (visual) {\n                this.drawingElement.remove(visual.drawingContainer());\n            },\n            insertBefore: function () {\n            },\n            clear: function () {\n                this.drawingElement.clear();\n            },\n            destroy: function (clearHtml) {\n                this.surface.destroy();\n                if (clearHtml) {\n                    $(this.element).remove();\n                }\n            }\n        });\n        function sizeOptionsOrDefault(options) {\n            return {\n                x: options.x || 0,\n                y: options.y || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n        }\n        function normalizeDrawingOptions(options) {\n            if (options) {\n                var drawingOptions = options;\n                if (isString(drawingOptions)) {\n                    drawingOptions = { color: drawingOptions };\n                }\n                if (drawingOptions.color) {\n                    drawingOptions.color = getColor(drawingOptions.color);\n                }\n                return drawingOptions;\n            }\n        }\n        function getColor(value) {\n            var color;\n            if (value != TRANSPARENT) {\n                color = new d.Color(value).toHex();\n            } else {\n                color = value;\n            }\n            return color;\n        }\n        function lineAngle(p1, p2) {\n            var xDiff = p2.x - p1.x;\n            var yDiff = p2.y - p1.y;\n            var angle = d.util.deg(Math.atan2(yDiff, xDiff));\n            return angle;\n        }\n        function createSegment(x, y) {\n            return new d.Segment(new g.Point(x, y));\n        }\n        function toDrawingRect(rect) {\n            if (rect) {\n                return new g.Rect([\n                    rect.x,\n                    rect.y\n                ], [\n                    rect.width,\n                    rect.height\n                ]);\n            }\n        }\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            diffNumericOptions: diffNumericOptions,\n            Element: Element,\n            Scale: Scale,\n            Translation: Translation,\n            Rotation: Rotation,\n            Circle: Circle,\n            Group: Group,\n            Rectangle: Rectangle,\n            Canvas: Canvas,\n            Path: Path,\n            Layout: Layout,\n            Line: Line,\n            MarkerBase: MarkerBase,\n            ArrowMarker: ArrowMarker,\n            CircleMarker: CircleMarker,\n            Polyline: Polyline,\n            CompositeTransform: CompositeTransform,\n            TextBlock: TextBlock,\n            Image: Image,\n            VisualBase: VisualBase\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/services', [\n        'kendo.drawing',\n        'dataviz/diagram/svg'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, dataviz = kendo.dataviz, diagram = dataviz.diagram, Class = kendo.Class, Group = diagram.Group, Rect = diagram.Rect, Rectangle = diagram.Rectangle, Utils = diagram.Utils, isUndefined = Utils.isUndefined, Point = diagram.Point, Circle = diagram.Circle, Ticker = diagram.Ticker, deepExtend = kendo.deepExtend, Movable = kendo.ui.Movable, util = kendo.drawing.util, defined = util.defined, inArray = $.inArray, proxy = $.proxy;\n        var Cursors = {\n                arrow: 'default',\n                grip: 'pointer',\n                cross: 'pointer',\n                add: 'pointer',\n                move: 'move',\n                select: 'pointer',\n                south: 's-resize',\n                east: 'e-resize',\n                west: 'w-resize',\n                north: 'n-resize',\n                rowresize: 'row-resize',\n                colresize: 'col-resize'\n            }, HIT_TEST_DISTANCE = 10, AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', DEFAULT_SNAP_SIZE = 10, DEFAULT_SNAP_ANGLE = 10, DRAG_START = 'dragStart', DRAG = 'drag', DRAG_END = 'dragEnd', ITEMROTATE = 'itemRotate', ITEMBOUNDSCHANGE = 'itemBoundsChange', MIN_SNAP_SIZE = 5, MIN_SNAP_ANGLE = 5, MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', SCROLL_MIN = -20000, SCROLL_MAX = 20000, FRICTION = 0.9, FRICTION_MOBILE = 0.93, VELOCITY_MULTIPLIER = 5, TRANSPARENT = 'transparent', PAN = 'pan', ROTATED = 'rotated', SOURCE = 'source', TARGET = 'target', HANDLE_NAMES = {\n                '-1': SOURCE,\n                '1': TARGET\n            };\n        diagram.Cursors = Cursors;\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    this.subjects[i].position(new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick));\n                }\n            }\n        });\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                } else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = 'Diagram layout';\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        conn.visible(false);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(function (id) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(true);\n                        });\n                    });\n                    ticker.play();\n                } else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                }\n            }\n        });\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = 'Composite unit';\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, 'source');\n                }\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, 'target');\n                }\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, 'source');\n                }\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, 'target');\n                }\n                this.item.updateModel();\n            }\n        });\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, 'source');\n                this.item._updateConnector(this._undoTarget, 'target');\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, 'source');\n                this.item._updateConnector(this._redoTarget, 'target');\n                this.item.updateModel();\n            }\n        });\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = 'Delete connection';\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = 'Deletion';\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = 'Transformation';\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = 'New connection';\n            },\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = 'New shape';\n            },\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = 'Pan Unit';\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = 'Rotation';\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n            events: [\n                'undone',\n                'redone'\n            ],\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n            cancel: function () {\n                this.composite = undefined;\n            },\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n            pop: function () {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n            count: function () {\n                return this.stack.length;\n            },\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger('undone');\n                }\n            },\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger('redone');\n                }\n            },\n            _restart: function (composite, execute) {\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity;\n                }\n            },\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n                var diagram = tool.toolService.diagram, canvas = diagram.canvas;\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data('kendoMobileScroller');\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n                if (defined(options.key)) {\n                    if (!options.key || options.key == 'none') {\n                        enabled = noMeta(meta) && !defined(toolService.hoveredItem);\n                    } else {\n                        enabled = meta[options.key + 'Key'];\n                    }\n                }\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },\n            _move: function (args) {\n                var tool = this, diagram = tool.toolService.diagram, canvas = diagram.canvas, scrollPos = new Point(args.scrollLeft, args.scrollTop);\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, hoveredItem = toolService.hoveredItem;\n                if (hoveredItem) {\n                    toolService.selectSingle(hoveredItem, meta);\n                    if (hoveredItem.adorner) {\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        });\n                    }\n                }\n            },\n            end: function () {\n                var diagram = this.toolService.diagram, adorner = this.adorner, unit;\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, {\n                            shapes: adorner.shapes,\n                            connections: []\n                        })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var selectable = toolService.diagram.options.selectable;\n                var enabled = selectable && selectable.multiple !== false;\n                if (enabled) {\n                    if (selectable.key && selectable.key != 'none') {\n                        enabled = meta[selectable.key + 'Key'];\n                    } else {\n                        enabled = noMeta(meta);\n                    }\n                }\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function () {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, connector = toolService._hoveredConnector, connection = diagram._createConnection({}, connector._c, p);\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    }) && diagram._addConnection(connection)) {\n                    toolService._connectionManipulation(connection, connector._c.shape, true);\n                    toolService._removeHover();\n                    toolService.selectSingle(toolService.activeConnection, meta);\n                    if (meta.type == 'touchmove') {\n                        diagram._cachedTouchTarget = connector.visual;\n                    }\n                } else {\n                    connection.source(null);\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, {\n                    shapes: [],\n                    connections: [connection],\n                    connectionHandle: TARGET\n                });\n                return true;\n            },\n            end: function (p) {\n                var toolService = this.toolService, d = toolService.diagram, connection = toolService.activeConnection, hoveredItem = toolService.hoveredItem, connector = toolService._hoveredConnector, target, cachedTouchTarget = d._cachedTouchTarget;\n                if (!connection) {\n                    return;\n                }\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n                connection.target(target);\n                if (!d.trigger(DRAG_END, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n                if (cachedTouchTarget) {\n                    d._connectorsAdorner.visual.remove(cachedTouchTarget);\n                    d._cachedTouchTarget = null;\n                }\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, selectable = diagram.options.selectable, item = toolService.hoveredItem, isActive = selectable !== false && item && item.path && !(item.isSelected && meta.ctrlKey);\n                if (isActive) {\n                    this._c = item;\n                }\n                return isActive;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService;\n                var connection = this._c;\n                toolService.selectSingle(connection, meta);\n                var adorner = connection.adorner;\n                var handle, name;\n                if (adorner) {\n                    handle = adorner._hitTest(p);\n                    name = HANDLE_NAMES[handle];\n                }\n                if (canDrag(connection) && adorner && !toolService.diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: name\n                    })) {\n                    this.handle = handle;\n                    this.handleName = name;\n                    adorner.start(p);\n                } else {\n                    toolService.startPoint = p;\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, {\n                        shapes: [],\n                        connections: [this._c],\n                        connectionHandle: this.handleName\n                    });\n                    return true;\n                }\n            },\n            end: function (p) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n                if (adorner) {\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, {\n                                shapes: [],\n                                connections: [connection],\n                                connectionHandle: this.handleName\n                            })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ];\n                this.activeTool = undefined;\n            },\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.diagram.canvas.surface.suspendTracking();\n                this.startPoint = p;\n                return true;\n            },\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.diagram.canvas.surface.resumeTracking();\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {\n                    if (testKey(key, 'a')) {\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'z')) {\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'y')) {\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'c')) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'x')) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'v')) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'l')) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'd')) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n                    return true;\n                } else if (key === 27) {\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram, delta = meta.delta, z = diagram.zoom(), options = diagram.options, zoomRate = options.zoomRate, zoomOptions = {\n                        point: p,\n                        meta: meta,\n                        zoom: z\n                    };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n            selectSingle: function (item, meta) {\n                var diagram = this.diagram;\n                var selectable = diagram.options.selectable;\n                if (selectable && !item.isSelected && item.options.selectable !== false) {\n                    var addToSelection = meta.ctrlKey && selectable.multiple !== false;\n                    diagram.select(item, { addToSelection: addToSelection });\n                }\n            },\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break;\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow;\n                element.css({ cursor: cursor });\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n                        this.hoveredItem = hit;\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) {\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n                if (!this.activeTool || this.activeTool.type !== 'ConnectionTool') {\n                    var selectedConnections = [];\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n                return hit || this._hitTestElements(point);\n            },\n            _hitTestElements: function (point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n                if ((!this.activeTool || this.activeTool.type != 'ConnectionTool') && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n        });\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n            getBounds: function () {\n                var points = this.connection.allPoints(), s = points[0], e = points[points.length - 1], right = Math.max(s.x, e.x), left = Math.min(s.x, e.x), top = Math.min(s.y, e.y), bottom = Math.max(s.y, e.y);\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n            }\n        });\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            routePoints: function (start, end, sourceConnector, targetConnector) {\n                var result;\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n            _connectorSides: [\n                {\n                    name: 'Top',\n                    axis: 'y',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Left',\n                    axis: 'x',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Bottom',\n                    axis: 'y',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                },\n                {\n                    name: 'Right',\n                    axis: 'x',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                }\n            ],\n            _connectorSide: function (connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min && (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n            _sameSideDistance: function (connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n            _connectorPoints: function (start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(start.x, pointY),\n                                new Point(end.x, pointY)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x, start.y + deltaY / 2),\n                                new Point(end.x, start.y + deltaY / 2)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(pointX, start.y),\n                                new Point(pointX, end.y)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x + deltaX / 2, start.y),\n                                new Point(start.x + deltaX / 2, start.y + deltaY)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n            _floatingPoints: function (start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [\n                    start,\n                    start,\n                    end,\n                    end\n                ];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        } else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    } else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        } else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                idx--;\n                if (cascadeStartHorizontal && idx % 2 !== 0 || !cascadeStartHorizontal && idx % 2 === 0) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n                return [\n                    points[1],\n                    points[2]\n                ];\n            },\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n                return horizontal;\n            }\n        });\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n            }\n        });\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n            options: { handles: {} },\n            _getCursor: function () {\n                return Cursors.move;\n            },\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                case -1:\n                    if (this.connection.targetConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                    }\n                    break;\n                case 1:\n                    if (this.connection.sourceConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                    }\n                    break;\n                }\n            },\n            move: function (handle, p) {\n                switch (handle) {\n                case -1:\n                    this.connection.source(p);\n                    break;\n                case 1:\n                    this.connection.target(p);\n                    break;\n                default:\n                    var delta = p.minus(this.startPoint);\n                    this.startPoint = p;\n                    if (!this.connection.sourceConnector) {\n                        this.connection.source(this.connection.sourcePoint().plus(delta));\n                    }\n                    if (!this.connection.targetConnector) {\n                        this.connection.target(this.connection.targetPoint().plus(delta));\n                    }\n                    break;\n                }\n                this.refresh();\n                return true;\n            },\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n            _hitTest: function (point) {\n                var sourcePoint = this.connection.sourcePoint();\n                var targetPoint = this.connection.targetPoint();\n                var radiusX = this.options.handles.width / 2 + HIT_TEST_DISTANCE;\n                var radiusY = this.options.handles.height / 2 + HIT_TEST_DISTANCE;\n                var sourcePointDistance = sourcePoint.distanceTo(point);\n                var targetPointDistance = targetPoint.distanceTo(point);\n                var sourceHandle = new Rect(sourcePoint.x, sourcePoint.y).inflate(radiusX, radiusY).contains(point);\n                var targetHandle = new Rect(targetPoint.x, targetPoint.y).inflate(radiusX, radiusY).contains(point);\n                var handle = 0;\n                if (sourceHandle && (!targetHandle || sourcePointDistance < targetPointDistance)) {\n                    handle = -1;\n                } else if (targetHandle && (!sourceHandle || targetPointDistance < sourcePointDistance)) {\n                    handle = 1;\n                }\n                return handle;\n            },\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that._clearVisual();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n            _clearVisual: function () {\n                var that = this;\n                if (that.diagram._cachedTouchTarget) {\n                    that._keepCachedTouchTarget();\n                } else {\n                    that.visual.clear();\n                }\n            },\n            _keepCachedTouchTarget: function () {\n                var that = this, visualChildren = that.visual.children;\n                var childrenCount = visualChildren.length;\n                var index = inArray(that.diagram._cachedTouchTarget, visualChildren);\n                for (var i = childrenCount - 1; i >= 0; i--) {\n                    if (i == index) {\n                        continue;\n                    }\n                    that.visual.remove(visualChildren[i]);\n                }\n            },\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                    bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n            return result;\n        }\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind('select', function (e) {\n                    that._initialize(e.selected);\n                });\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n            options: {\n                handles: {\n                    fill: { color: '#fff' },\n                    stroke: { color: '#282828' },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: { color: '#282828' },\n                        stroke: { color: '#282828' }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: '#778899',\n                        width: 1,\n                        dashType: 'dash'\n                    },\n                    fill: { color: TRANSPARENT }\n                },\n                offset: 10\n            },\n            _initSelection: function () {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n            _resizable: function () {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n            _handleOptions: function () {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n            _createHandles: function () {\n                var handles, item, y, x;\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if (x !== 0 || y !== 0) {\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({\n                                    x: x,\n                                    y: y,\n                                    visual: item\n                                });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p), i, hit, handleBounds, handlesCount = this.map.length, handle;\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit);\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(), w = handles.width, h = handles.height, r = new Rect(0, 0, w, h);\n                    if (p.x < 0) {\n                        r.x = -w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1 - w / 2;\n                    }\n                    if (p.y < 0) {\n                        r.y = -h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1 - h / 2;\n                    }\n                    return r;\n                }\n            },\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && hit.x >= -1 && hit.x <= 1 && hit.y >= -1 && hit.y <= 1 && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n                    if (hit.x == -1 && hit.y == -1) {\n                        return 'nw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return 'se-resize';\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return 'sw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return 'ne-resize';\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return 'n-resize';\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return 's-resize';\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return 'e-resize';\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return 'w-resize';\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n            _initialize: function () {\n                var that = this, i, item, items = that.diagram.select();\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n            _hover: function (value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(), hover = handleOptions.hover, stroke = handleOptions.stroke, fill = handleOptions.fill;\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n            redraw: function () {\n                var i, handle, visibleHandles = this._resizable();\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n            angle: function (value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n                return this._angle;\n            },\n            rotate: function () {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n            move: function (handle, p) {\n                var delta, dragging, dtl = new Point(), dbr = new Point(), bounds, center, shape, i, angle, newBounds, changed = 0, staticPoint, scaleX, scaleY;\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty('layout')) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta;\n                        dragging = true;\n                    } else {\n                        if (this._angle) {\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center();\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) {\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty('layout')) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle);\n                            }\n                            changed += 1;\n                        }\n                    }\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n                    this._positions();\n                }\n                this._cp = p;\n            },\n            isDragHandle: function (handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n            cancel: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor(a % 360 / snapAngle) * snapAngle : a % 360;\n            },\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n            snapOptions: function () {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n            shouldSnap: function () {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl), br = bounds.bottomRight().plus(dbr), newBounds = Rect.fromPoints(tl, br), newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n            _diffStates: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ? this.shapes[0].bounds().clone() : this.diagram.boundingBox(this.shapes, true);\n                this.bounds(bounds);\n            },\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({\n                        width: bounds.width,\n                        height: bounds.height\n                    });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: '#778899',\n                    width: 1,\n                    dashType: 'dash'\n                },\n                fill: { color: TRANSPARENT }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({\n                        height: visualBounds.height + 1,\n                        width: visualBounds.width + 1\n                    });\n                }\n            }\n        });\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()), relative = p.minus(this._c.shape.bounds('transformed').topLeft()), value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/layout', ['dataviz/diagram/math'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Graph = diagram.Graph, Node = diagram.Node, Link = diagram.Link, deepExtend = kendo.deepExtend, Size = diagram.Size, Rect = diagram.Rect, Dictionary = diagram.Dictionary, Set = diagram.Set, HyperTree = diagram.Graph, Utils = diagram.Utils, Point = diagram.Point, EPSILON = 0.000001, DEG_TO_RAD = Math.PI / 180, contains = Utils.contains, grep = $.grep;\n        var LayoutBase = kendo.Class.extend({\n            defaultOptions: {\n                type: 'Tree',\n                subtype: 'Down',\n                roots: null,\n                animate: false,\n                limitToView: false,\n                friction: 0.9,\n                nodeDistance: 50,\n                iterations: 300,\n                horizontalSeparation: 90,\n                verticalSeparation: 50,\n                underneathVerticalTopOffset: 15,\n                underneathHorizontalOffset: 15,\n                underneathVerticalSeparation: 15,\n                grid: {\n                    width: 1500,\n                    offsetX: 50,\n                    offsetY: 50,\n                    componentSpacingX: 20,\n                    componentSpacingY: 20\n                },\n                layerSeparation: 50,\n                layeredIterations: 2,\n                startRadialAngle: 0,\n                endRadialAngle: 360,\n                radialSeparation: 150,\n                radialFirstLevelSeparation: 200,\n                keepComponentsInOneRadialLayout: false,\n                ignoreContainers: true,\n                layoutContainerChildren: false,\n                ignoreInvisible: true,\n                animateTransitions: false\n            },\n            init: function () {\n            },\n            gridLayoutComponents: function (components) {\n                if (!components) {\n                    throw 'No components supplied.';\n                }\n                Utils.forEach(components, function (c) {\n                    c.calcBounds();\n                });\n                components.sort(function (a, b) {\n                    return b.bounds.width - a.bounds.width;\n                });\n                var maxWidth = this.options.grid.width, offsetX = this.options.grid.componentSpacingX, offsetY = this.options.grid.componentSpacingY, height = 0, startX = this.options.grid.offsetX, startY = this.options.grid.offsetY, x = startX, y = startY, i, resultLinkSet = [], resultNodeSet = [];\n                while (components.length > 0) {\n                    if (x >= maxWidth) {\n                        x = startX;\n                        y += height + offsetY;\n                        height = 0;\n                    }\n                    var component = components.pop();\n                    this.moveToOffset(component, new Point(x, y));\n                    for (i = 0; i < component.nodes.length; i++) {\n                        resultNodeSet.push(component.nodes[i]);\n                    }\n                    for (i = 0; i < component.links.length; i++) {\n                        resultLinkSet.push(component.links[i]);\n                    }\n                    var boundingRect = component.bounds;\n                    var currentHeight = boundingRect.height;\n                    if (currentHeight <= 0 || isNaN(currentHeight)) {\n                        currentHeight = 0;\n                    }\n                    var currentWidth = boundingRect.width;\n                    if (currentWidth <= 0 || isNaN(currentWidth)) {\n                        currentWidth = 0;\n                    }\n                    if (currentHeight >= height) {\n                        height = currentHeight;\n                    }\n                    x += currentWidth + offsetX;\n                }\n                return {\n                    nodes: resultNodeSet,\n                    links: resultLinkSet\n                };\n            },\n            moveToOffset: function (component, p) {\n                var i, j, bounds = component.bounds, deltax = p.x - bounds.x, deltay = p.y - bounds.y;\n                for (i = 0; i < component.nodes.length; i++) {\n                    var node = component.nodes[i];\n                    var nodeBounds = node.bounds();\n                    if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                        nodeBounds = new Rect(0, 0, 0, 0);\n                    }\n                    nodeBounds.x += deltax;\n                    nodeBounds.y += deltay;\n                    node.bounds(nodeBounds);\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    var link = component.links[i];\n                    if (link.points) {\n                        var newpoints = [];\n                        var points = link.points;\n                        for (j = 0; j < points.length; j++) {\n                            var pt = points[j];\n                            pt.x += deltax;\n                            pt.y += deltay;\n                            newpoints.push(pt);\n                        }\n                        link.points = newpoints;\n                    }\n                }\n                this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n                return new Point(deltax, deltay);\n            },\n            transferOptions: function (options) {\n                this.options = kendo.deepExtend({}, this.defaultOptions);\n                if (Utils.isUndefined(options)) {\n                    return;\n                }\n                this.options = kendo.deepExtend(this.options, options || {});\n            }\n        });\n        var DiagramToHyperTreeAdapter = kendo.Class.extend({\n            init: function (diagram) {\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.finalNodes = [];\n                this.finalLinks = [];\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.hyperMap = new Dictionary();\n                this.hyperTree = new Graph();\n                this.finalGraph = null;\n                this.diagram = diagram;\n            },\n            convert: function (options) {\n                if (Utils.isUndefined(this.diagram)) {\n                    throw 'No diagram to convert.';\n                }\n                this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                }, options || {});\n                this.clear();\n                this._renormalizeShapes();\n                this._renormalizeConnections();\n                this.finalNodes = new Dictionary(this.nodes);\n                this.finalLinks = new Dictionary(this.edges);\n                this.finalGraph = new Graph();\n                this.finalNodes.forEach(function (n) {\n                    this.finalGraph.addNode(n);\n                }, this);\n                this.finalLinks.forEach(function (l) {\n                    this.finalGraph.addExistingLink(l);\n                }, this);\n                return this.finalGraph;\n            },\n            mapConnection: function (connection) {\n                return this.edgeMap.get(connection.id);\n            },\n            mapShape: function (shape) {\n                return this.nodeMap.get(shape.id);\n            },\n            getEdge: function (a, b) {\n                return Utils.first(a.links, function (link) {\n                    return link.getComplement(a) === b;\n                });\n            },\n            clear: function () {\n                this.finalGraph = null;\n                this.hyperTree = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new HyperTree() : null;\n                this.hyperMap = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new Dictionary() : null;\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.finalNodes = [];\n                this.finalLinks = [];\n            },\n            listToRoot: function (containerGraph) {\n                var list = [];\n                var s = containerGraph.container;\n                if (!s) {\n                    return list;\n                }\n                list.push(s);\n                while (s.parentContainer) {\n                    s = s.parentContainer;\n                    list.push(s);\n                }\n                list.reverse();\n                return list;\n            },\n            firstNonIgnorableContainer: function (shape) {\n                if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                    return shape;\n                }\n                return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n            },\n            isContainerConnection: function (a, b) {\n                if (a.isContainer && this.isDescendantOf(a, b)) {\n                    return true;\n                }\n                return b.isContainer && this.isDescendantOf(b, a);\n            },\n            isDescendantOf: function (scope, a) {\n                if (!scope.isContainer) {\n                    throw 'Expecting a container.';\n                }\n                if (scope === a) {\n                    return false;\n                }\n                if (contains(scope.children, a)) {\n                    return true;\n                }\n                var containers = [];\n                for (var i = 0, len = scope.children.length; i < len; i++) {\n                    var c = scope.children[i];\n                    if (c.isContainer && this.isDescendantOf(c, a)) {\n                        containers.push(c);\n                    }\n                }\n                return containers.length > 0;\n            },\n            isIgnorableItem: function (shape) {\n                if (this.options.ignoreInvisible) {\n                    if (shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    if (!shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    return true;\n                } else {\n                    return shape.isCollapsed && !this._isTop(shape);\n                }\n            },\n            isShapeMapped: function (shape) {\n                return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n            },\n            leastCommonAncestor: function (a, b) {\n                if (!a) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!b) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!this.hyperTree) {\n                    throw 'No hypertree available.';\n                }\n                var al = this.listToRoot(a);\n                var bl = this.listToRoot(b);\n                var found = null;\n                if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                    return this.hyperTree.root.data;\n                }\n                var xa = al[0];\n                var xb = bl[0];\n                var i = 0;\n                while (xa === xb) {\n                    found = al[i];\n                    i++;\n                    if (i >= al.length || i >= bl.length) {\n                        break;\n                    }\n                    xa = al[i];\n                    xb = bl[i];\n                }\n                if (!found) {\n                    return this.hyperTree.root.data;\n                } else {\n                    return grep(this.hyperTree.nodes, function (n) {\n                        return n.data.container === found;\n                    });\n                }\n            },\n            _isTop: function (item) {\n                return !item.parentContainer;\n            },\n            _isVisible: function (shape) {\n                if (!shape.visible()) {\n                    return false;\n                }\n                return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n            },\n            _isCollapsed: function (shape) {\n                if (shape.isContainer && shape.isCollapsed) {\n                    return true;\n                }\n                return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n            },\n            _renormalizeShapes: function () {\n                if (this.options.ignoreContainers) {\n                    for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                        var shape = this.diagram.shapes[i];\n                        if (this.options.ignoreInvisible && !this._isVisible(shape) || shape.isContainer) {\n                            this.ignoredShapes.push(shape);\n                            continue;\n                        }\n                        var node = new Node(shape.id, shape);\n                        node.isVirtual = false;\n                        this.nodeMap.add(shape.id, node);\n                        this.nodes.push(node);\n                    }\n                } else {\n                    throw 'Containers are not supported yet, but stay tuned.';\n                }\n            },\n            _renormalizeConnections: function () {\n                if (this.diagram.connections.length === 0) {\n                    return;\n                }\n                for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                    var conn = this.diagram.connections[i];\n                    if (this.isIgnorableItem(conn)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                    var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n                    if (!source || !sink) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (this.shapeMap.containsKey(source)) {\n                        source = this.shapeMap[source];\n                    }\n                    if (this.shapeMap.containsKey(sink)) {\n                        sink = this.shapeMap[sink];\n                    }\n                    var sourceNode = this.mapShape(source);\n                    var sinkNode = this.mapShape(sink);\n                    if (sourceNode === sinkNode || this.areConnectedAlready(sourceNode, sinkNode)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (sourceNode === null || sinkNode === null) {\n                        throw 'A shape was not mapped to a node.';\n                    }\n                    if (this.options.ignoreContainers) {\n                        if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                            this.ignoredConnections.push(conn);\n                            continue;\n                        }\n                        var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n                        this.edgeMap.add(conn.id, newEdge);\n                        this.edges.push(newEdge);\n                    } else {\n                        throw 'Containers are not supported yet, but stay tuned.';\n                    }\n                }\n            },\n            areConnectedAlready: function (n, m) {\n                return Utils.any(this.edges, function (l) {\n                    return l.source === n && l.target === m || l.source === m && l.target === n;\n                });\n            }\n        });\n        var SpringLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                var initialTemperature = this.options.nodeDistance * 9;\n                this.temperature = initialTemperature;\n                var guessBounds = this._expectedBounds();\n                this.width = guessBounds.width;\n                this.height = guessBounds.height;\n                for (var step = 0; step < this.options.iterations; step++) {\n                    this.refineStage = step >= this.options.iterations * 5 / 6;\n                    this.tick();\n                    this.temperature = this.refineStage ? initialTemperature / 30 : initialTemperature * (1 - step / (2 * this.options.iterations));\n                }\n            },\n            tick: function () {\n                var i;\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    this._repulsion(this.graph.nodes[i]);\n                }\n                for (i = 0; i < this.graph.links.length; i++) {\n                    this._attraction(this.graph.links[i]);\n                }\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    var node = this.graph.nodes[i];\n                    var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                    if (offset === 0) {\n                        return;\n                    }\n                    node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                    node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                    if (this.options.limitToView) {\n                        node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                        node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                    }\n                }\n            },\n            _shake: function (node) {\n                var rho = Math.random() * this.options.nodeDistance / 4;\n                var alpha = Math.random() * 2 * Math.PI;\n                node.x += rho * Math.cos(alpha);\n                node.y -= rho * Math.sin(alpha);\n            },\n            _InverseSquareForce: function (d, n, m) {\n                var force;\n                if (!this.refineStage) {\n                    force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n                } else {\n                    var deltax = n.x - m.x;\n                    var deltay = n.y - m.y;\n                    var wn = n.width / 2;\n                    var hn = n.height / 2;\n                    var wm = m.width / 2;\n                    var hm = m.height / 2;\n                    force = Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2) + Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2);\n                }\n                return force * 4 / 3;\n            },\n            _SquareForce: function (d, n, m) {\n                return 1 / this._InverseSquareForce(d, n, m);\n            },\n            _repulsion: function (n) {\n                n.dx = 0;\n                n.dy = 0;\n                Utils.forEach(this.graph.nodes, function (m) {\n                    if (m === n) {\n                        return;\n                    }\n                    while (n.x === m.x && n.y === m.y) {\n                        this._shake(m);\n                    }\n                    var vx = n.x - m.x;\n                    var vy = n.y - m.y;\n                    var distance = Math.sqrt(vx * vx + vy * vy);\n                    var r = this._SquareForce(distance, n, m) * 2;\n                    n.dx += vx / distance * r;\n                    n.dy += vy / distance * r;\n                }, this);\n            },\n            _attraction: function (link) {\n                var t = link.target;\n                var s = link.source;\n                if (s === t) {\n                    return;\n                }\n                while (s.x === t.x && s.y === t.y) {\n                    this._shake(t);\n                }\n                var vx = s.x - t.x;\n                var vy = s.y - t.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var a = this._InverseSquareForce(distance, s, t) * 5;\n                var dx = vx / distance * a;\n                var dy = vy / distance * a;\n                t.dx += dx;\n                t.dy += dy;\n                s.dx -= dx;\n                s.dy -= dy;\n            },\n            _expectedBounds: function () {\n                var size, N = this.graph.nodes.length, ratio = 1.5, multiplier = 4;\n                if (N === 0) {\n                    return size;\n                }\n                size = Utils.fold(this.graph.nodes, function (s, node) {\n                    var area = node.width * node.height;\n                    if (area > 0) {\n                        s += Math.sqrt(area);\n                        return s;\n                    }\n                    return 0;\n                }, 0, this);\n                var av = size / N;\n                var squareSize = av * Math.ceil(Math.sqrt(N));\n                var width = squareSize * Math.sqrt(ratio);\n                var height = squareSize / Math.sqrt(ratio);\n                return {\n                    width: width * multiplier,\n                    height: height * multiplier\n                };\n            }\n        });\n        var TreeLayoutProcessor = kendo.Class.extend({\n            init: function (options) {\n                this.center = null;\n                this.options = options;\n            },\n            layout: function (treeGraph, root) {\n                this.graph = treeGraph;\n                if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                    return;\n                }\n                if (!contains(this.graph.nodes, root)) {\n                    throw 'The given root is not in the graph.';\n                }\n                this.center = root;\n                this.graph.cacheRelationships();\n                this.layoutSwitch();\n            },\n            layoutLeft: function (left) {\n                this.setChildrenDirection(this.center, 'Left', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    node.TreeDirection = 'Left';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x - this.options.horizontalSeparation;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    var p = new Point(x - node.Size.width, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutRight: function (right) {\n                this.setChildrenDirection(this.center, 'Right', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    node.TreeDirection = 'Right';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutUp: function (up) {\n                this.setChildrenDirection(this.center, 'Up', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y, node, i;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    node.TreeDirection = 'Up';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutDown: function (down) {\n                var node, i;\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.treeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutRadialTree: function () {\n                this.setChildrenDirection(this.center, 'Radial', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.previousRoot = null;\n                var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n                var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n                if (endAngle <= startAngle) {\n                    throw 'Final angle should not be less than the start angle.';\n                }\n                this.maxDepth = 0;\n                this.origin = new Point(this.center.x, this.center.y);\n                this.calculateAngularWidth(this.center, 0);\n                if (this.maxDepth > 0) {\n                    this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n                }\n                this.center.Angle = endAngle - startAngle;\n            },\n            tipOverTree: function (down, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.setChildrenLayout(this.center, 'Underneath', false, startFromLevel);\n                var w = 0, y, node, i;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.TreeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                w -= down[down.length - 1].width;\n                w += down[down.length - 1].associatedShape.bounds().width;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            calculateAngularWidth: function (n, d) {\n                if (d > this.maxDepth) {\n                    this.maxDepth = d;\n                }\n                var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt(w * w + h * h) / d;\n                if (n.children.length > 0) {\n                    for (var i = 0, len = n.children.length; i < len; i++) {\n                        var child = n.children[i];\n                        aw += this.calculateAngularWidth(child, d + 1);\n                    }\n                    aw = Math.max(diameter, aw);\n                } else {\n                    aw = diameter;\n                }\n                n.sectorAngle = aw;\n                return aw;\n            },\n            sortChildren: function (n) {\n                var basevalue = 0, i;\n                if (n.parents.length > 1) {\n                    throw 'Node is not part of a tree.';\n                }\n                var p = n.parents[0];\n                if (p) {\n                    var pl = new Point(p.x, p.y);\n                    var nl = new Point(n.x, n.y);\n                    basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n                }\n                var count = n.children.length;\n                if (count === 0) {\n                    return null;\n                }\n                var angle = [];\n                var idx = [];\n                for (i = 0; i < count; ++i) {\n                    var c = n.children[i];\n                    var l = new Point(c.x, c.y);\n                    idx[i] = i;\n                    angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n                }\n                Utils.bisort(angle, idx);\n                var col = [];\n                var children = n.children;\n                for (i = 0; i < count; ++i) {\n                    col.push(children[idx[i]]);\n                }\n                return col;\n            },\n            normalizeAngle: function (angle) {\n                while (angle > Math.PI * 2) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < 0) {\n                    angle += Math.PI * 2;\n                }\n                return angle;\n            },\n            radialLayout: function (node, radius, startAngle, endAngle) {\n                var deltaTheta = endAngle - startAngle;\n                var deltaThetaHalf = deltaTheta / 2;\n                var parentSector = node.sectorAngle;\n                var fraction = 0;\n                var sorted = this.sortChildren(node);\n                for (var i = 0, len = sorted.length; i < len; i++) {\n                    var childNode = sorted[i];\n                    var cp = childNode;\n                    var childAngleFraction = cp.sectorAngle / parentSector;\n                    if (childNode.children.length > 0) {\n                        this.radialLayout(childNode, radius + this.options.radialSeparation, startAngle + fraction * deltaTheta, startAngle + (fraction + childAngleFraction) * deltaTheta);\n                    }\n                    this.setPolarLocation(childNode, radius, startAngle + fraction * deltaTheta + childAngleFraction * deltaThetaHalf);\n                    cp.angle = childAngleFraction * deltaTheta;\n                    fraction += childAngleFraction;\n                }\n            },\n            setPolarLocation: function (node, radius, angle) {\n                node.x = this.origin.x + radius * Math.cos(angle);\n                node.y = this.origin.y + radius * Math.sin(angle);\n                node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n            },\n            setChildrenDirection: function (node, direction, includeStart) {\n                var rootDirection = node.treeDirection;\n                this.graph.depthFirstTraversal(node, function (n) {\n                    n.treeDirection = direction;\n                });\n                if (!includeStart) {\n                    node.treeDirection = rootDirection;\n                }\n            },\n            setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                var rootLayout = node.childrenLayout;\n                if (startFromLevel > 0) {\n                    this.graph.assignLevels(node);\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    });\n                } else {\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        s.childrenLayout = layout;\n                    });\n                    if (!includeStart) {\n                        node.childrenLayout = rootLayout;\n                    }\n                }\n            },\n            measure: function (node, givenSize) {\n                var w = 0, h = 0, s;\n                var result = new Size(0, 0);\n                if (!node) {\n                    throw '';\n                }\n                var b = node.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (node.parents.length !== 1) {\n                    throw 'Node not in a spanning tree.';\n                }\n                var parent = node.parents[0];\n                if (node.treeDirection === 'Undefined') {\n                    node.treeDirection = parent.treeDirection;\n                }\n                if (Utils.isEmpty(node.children)) {\n                    result = new Size(Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth, Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n                } else if (node.children.length === 1) {\n                    switch (node.treeDirection) {\n                    case 'Radial':\n                        s = this.measure(node.children[0], givenSize);\n                        w = shapeWidth + this.options.radialSeparation * Math.cos(node.AngleToParent) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                            break;\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + this.options.horizontalSeparation + s.width;\n                            h = Math.max(shapeHeight, s.height);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Radial layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            h = shapeHeight + this.options.verticalSeparation + s.height;\n                            w = Math.max(shapeWidth, s.width);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                } else {\n                    var i, childNode;\n                    switch (node.treeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = shapeWidth;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                h += s.height + this.options.verticalSeparation;\n                            }\n                            h -= this.options.verticalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Right layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = 0;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w += s.width + this.options.horizontalSeparation;\n                                h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                            }\n                            w -= this.options.horizontalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                }\n                node.SectorAngle = Math.sqrt(w * w / 4 + h * h / 4);\n                node.Size = result;\n                return result;\n            },\n            arrange: function (n, p) {\n                var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (Utils.isEmpty(n.children)) {\n                    n.x = p.x;\n                    n.y = p.y;\n                    n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n                } else {\n                    var x, y;\n                    var selfLocation;\n                    switch (n.treeDirection) {\n                    case 'Left':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                node = node.children[i];\n                                x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = selfLocation.x - this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x - node.Size.width, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Right':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Up':\n                        selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + (shapeWidth - childrenwidth) / 2;\n                        } else {\n                            x = p.x;\n                        }\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n                    case 'Down':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                childrenwidth = 0;\n                                for (i = 0; i < n.children.length; i++) {\n                                    child = n.children[i];\n                                    childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                }\n                                childrenwidth -= this.options.horizontalSeparation;\n                                x = p.x + (shapeWidth - childrenwidth) / 2;\n                            } else {\n                                x = p.x;\n                            }\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                x += node.Size.width + this.options.horizontalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'None':\n                        break;\n                    default:\n                        throw 'Unsupported TreeDirection';\n                    }\n                }\n            },\n            layoutSwitch: function () {\n                if (!this.center) {\n                    return;\n                }\n                if (Utils.isEmpty(this.center.children)) {\n                    return;\n                }\n                var type = this.options.subtype;\n                if (Utils.isUndefined(type)) {\n                    type = 'Down';\n                }\n                var single, male, female, leftcount;\n                var children = this.center.children;\n                switch (type.toLowerCase()) {\n                case 'radial':\n                case 'radialtree':\n                    this.layoutRadialTree();\n                    break;\n                case 'mindmaphorizontal':\n                case 'mindmap':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n                case 'mindmapvertical':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n                case 'right':\n                    this.layoutRight(this.center.children);\n                    break;\n                case 'left':\n                    this.layoutLeft(this.center.children);\n                    break;\n                case 'up':\n                case 'bottom':\n                    this.layoutUp(this.center.children);\n                    break;\n                case 'down':\n                case 'top':\n                    this.layoutDown(this.center.children);\n                    break;\n                case 'tipover':\n                case 'tipovertree':\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw 'The tip-over level should be a positive integer.';\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n                case 'undefined':\n                case 'none':\n                    break;\n                }\n            }\n        });\n        var TreeLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                this.graph = adapter.convert();\n                var finalNodeSet = this.layoutComponents();\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutComponents: function () {\n                if (this.graph.isEmpty()) {\n                    return;\n                }\n                var components = this.graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                var layout = new TreeLayoutProcessor(this.options);\n                var trees = [];\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    var treeGraph = this.getTree(component);\n                    if (!treeGraph) {\n                        throw 'Failed to find a spanning tree for the component.';\n                    }\n                    var root = treeGraph.root;\n                    var tree = treeGraph.tree;\n                    layout.layout(tree, root);\n                    trees.push(tree);\n                }\n                return this.gridLayoutComponents(trees);\n            },\n            getTree: function (graph) {\n                var root = null;\n                if (this.options.roots && this.options.roots.length > 0) {\n                    for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                        var node = graph.nodes[i];\n                        for (var j = 0; j < this.options.roots.length; j++) {\n                            var givenRootShape = this.options.roots[j];\n                            if (givenRootShape === node.associatedShape) {\n                                root = node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!root) {\n                    root = graph.root();\n                    if (!root) {\n                        throw 'Unable to find a root for the tree.';\n                    }\n                }\n                return this.getTreeForRoot(graph, root);\n            },\n            getTreeForRoot: function (graph, root) {\n                var tree = graph.getSpanningTree(root);\n                if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                    return null;\n                }\n                return {\n                    tree: tree,\n                    root: tree.root\n                };\n            }\n        });\n        var LayeredLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            _initRuntimeProperties: function () {\n                for (var k = 0; k < this.graph.nodes.length; k++) {\n                    var node = this.graph.nodes[k];\n                    node.layer = -1;\n                    node.downstreamLinkCount = 0;\n                    node.upstreamLinkCount = 0;\n                    node.isVirtual = false;\n                    node.uBaryCenter = 0;\n                    node.dBaryCenter = 0;\n                    node.upstreamPriority = 0;\n                    node.downstreamPriority = 0;\n                    node.gridPosition = 0;\n                }\n            },\n            _prepare: function (graph) {\n                var current = [], i, l, link;\n                var layerMap = new Dictionary();\n                var layerCount = 0;\n                var targetLayer, next, target;\n                Utils.forEach(graph.nodes, function (node) {\n                    if (node.incoming.length === 0) {\n                        layerMap.set(node, 0);\n                        current.push(node);\n                    }\n                });\n                while (current.length > 0) {\n                    next = current.shift();\n                    for (i = 0; i < next.outgoing.length; i++) {\n                        link = next.outgoing[i];\n                        target = link.target;\n                        if (layerMap.containsKey(target)) {\n                            targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                        } else {\n                            targetLayer = layerMap.get(next) + 1;\n                        }\n                        layerMap.set(target, targetLayer);\n                        if (targetLayer > layerCount) {\n                            layerCount = targetLayer;\n                        }\n                        if (!contains(current, target)) {\n                            current.push(target);\n                        }\n                    }\n                }\n                var sortedNodes = layerMap.keys();\n                sortedNodes.sort(function (o1, o2) {\n                    var o1layer = layerMap.get(o1);\n                    var o2layer = layerMap.get(o2);\n                    return Utils.sign(o2layer - o1layer);\n                });\n                for (var n = 0; n < sortedNodes.length; ++n) {\n                    var node = sortedNodes[n];\n                    var minLayer = Number.MAX_VALUE;\n                    if (node.outgoing.length === 0) {\n                        continue;\n                    }\n                    for (l = 0; l < node.outgoing.length; ++l) {\n                        link = node.outgoing[l];\n                        minLayer = Math.min(minLayer, layerMap.get(link.target));\n                    }\n                    if (minLayer > 1) {\n                        layerMap.set(node, minLayer - 1);\n                    }\n                }\n                this.layers = [];\n                var layer;\n                for (i = 0; i < layerCount + 1; i++) {\n                    layer = [];\n                    layer.linksTo = {};\n                    this.layers.push(layer);\n                }\n                layerMap.forEach(function (node, layer) {\n                    node.layer = layer;\n                    this.layers[layer].push(node);\n                }, this);\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (i = 0; i < layer.length; i++) {\n                        layer[i].gridPosition = i;\n                    }\n                }\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph given or graph analysis of the diagram failed.';\n                }\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                graph.setItemIndices();\n                var reversedEdges = graph.makeAcyclic();\n                this._initRuntimeProperties();\n                this._prepare(graph, options);\n                this._dummify();\n                this._optimizeCrossings();\n                this._swapPairs();\n                this.arrangeNodes();\n                this._moveThingsAround();\n                this._dedummify();\n                Utils.forEach(reversedEdges, function (e) {\n                    if (e.points) {\n                        e.points.reverse();\n                    }\n                });\n            },\n            setMinDist: function (m, n, minDist) {\n                var l = m.layer;\n                var i = m.layerIndex;\n                this.minDistances[l][i] = minDist;\n            },\n            getMinDist: function (m, n) {\n                var dist = 0, i1 = m.layerIndex, i2 = n.layerIndex, l = m.layer, min = Math.min(i1, i2), max = Math.max(i1, i2);\n                for (var k = min; k < max; ++k) {\n                    dist += this.minDistances[l][k];\n                }\n                return dist;\n            },\n            placeLeftToRight: function (leftClasses) {\n                var leftPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = leftClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!leftPos.containsKey(node)) {\n                            this.placeLeft(node, leftPos, c);\n                        }\n                    }\n                    var d = Number.POSITIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var rightSibling = this.rightSibling(node);\n                        if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                            d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                        }\n                    }\n                    if (d === Number.POSITIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeLeftClass.get(neighbor) < c) {\n                                    D.push(leftPos.get(neighbor) - leftPos.get(node));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        leftPos.set(node, leftPos.get(node) + d);\n                    }\n                }\n                return leftPos;\n            },\n            placeRightToLeft: function (rightClasses) {\n                var rightPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = rightClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!rightPos.containsKey(node)) {\n                            this.placeRight(node, rightPos, c);\n                        }\n                    }\n                    var d = Number.NEGATIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var leftSibling = this.leftSibling(node);\n                        if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                            d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                        }\n                    }\n                    if (d === Number.NEGATIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeRightClass.get(neighbor) < c) {\n                                    D.push(rightPos.get(node) - rightPos.get(neighbor));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        rightPos.set(node, rightPos.get(node) + d);\n                    }\n                }\n                return rightPos;\n            },\n            _getLeftWing: function () {\n                var leftWing = { value: null };\n                var result = this.computeClasses(leftWing, 1);\n                this.nodeLeftClass = leftWing.value;\n                return result;\n            },\n            _getRightWing: function () {\n                var rightWing = { value: null };\n                var result = this.computeClasses(rightWing, -1);\n                this.nodeRightClass = rightWing.value;\n                return result;\n            },\n            computeClasses: function (wingPair, d) {\n                var currentWing = 0, wing = wingPair.value = new Dictionary();\n                for (var l = 0; l < this.layers.length; ++l) {\n                    currentWing = l;\n                    var layer = this.layers[l];\n                    for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                        var node = layer[n];\n                        if (!wing.containsKey(node)) {\n                            wing.set(node, currentWing);\n                            if (node.isVirtual) {\n                                var ndsinl = this._nodesInLink(node);\n                                for (var kk = 0; kk < ndsinl.length; kk++) {\n                                    var vnode = ndsinl[kk];\n                                    wing.set(vnode, currentWing);\n                                }\n                            }\n                        } else {\n                            currentWing = wing.get(node);\n                        }\n                    }\n                }\n                var wings = [];\n                for (var i = 0; i < this.layers.length; i++) {\n                    wings.push(null);\n                }\n                wing.forEach(function (node, classIndex) {\n                    if (wings[classIndex] === null) {\n                        wings[classIndex] = [];\n                    }\n                    wings[classIndex].push(node);\n                });\n                return wings;\n            },\n            _isVerticalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'up' || this.options.subtype.toLowerCase() === 'down' || this.options.subtype.toLowerCase() === 'vertical';\n            },\n            _isHorizontalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'left' || this.options.subtype.toLowerCase() === 'horizontal';\n            },\n            _isIncreasingLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'down';\n            },\n            _moveThingsAround: function () {\n                var i, l, node, layer, n, w;\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    layer.sort(this._gridPositionComparer);\n                }\n                this.minDistances = [];\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    this.minDistances[l] = [];\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        node.layerIndex = n;\n                        this.minDistances[l][n] = this.options.nodeDistance;\n                        if (n < layer.length - 1) {\n                            if (this._isVerticalLayout()) {\n                                this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                            } else {\n                                this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                            }\n                        }\n                    }\n                }\n                this.downNodes = new Dictionary();\n                this.upNodes = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    this.downNodes.set(node, []);\n                    this.upNodes.set(node, []);\n                }, this);\n                Utils.forEach(this.graph.links, function (link) {\n                    var origin = link.source;\n                    var dest = link.target;\n                    var down = null, up = null;\n                    if (origin.layer > dest.layer) {\n                        down = link.source;\n                        up = link.target;\n                    } else {\n                        up = link.source;\n                        down = link.target;\n                    }\n                    this.downNodes.get(up).push(down);\n                    this.upNodes.get(down).push(up);\n                }, this);\n                this.downNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                this.upNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                for (l = 0; l < this.layers.length - 1; ++l) {\n                    layer = this.layers[l];\n                    for (w = 0; w < layer.length - 1; w++) {\n                        var currentNode = layer[w];\n                        if (!currentNode.isVirtual) {\n                            continue;\n                        }\n                        var currDown = this.downNodes.get(currentNode)[0];\n                        if (!currDown.isVirtual) {\n                            continue;\n                        }\n                        for (n = w + 1; n < layer.length; ++n) {\n                            node = layer[n];\n                            if (!node.isVirtual) {\n                                continue;\n                            }\n                            var downNode = this.downNodes.get(node)[0];\n                            if (!downNode.isVirtual) {\n                                continue;\n                            }\n                            if (currDown.gridPosition > downNode.gridPosition) {\n                                var pos = currDown.gridPosition;\n                                currDown.gridPosition = downNode.gridPosition;\n                                downNode.gridPosition = pos;\n                                var i1 = currDown.layerIndex;\n                                var i2 = downNode.layerIndex;\n                                this.layers[l + 1][i1] = downNode;\n                                this.layers[l + 1][i2] = currDown;\n                                currDown.layerIndex = i2;\n                                downNode.layerIndex = i1;\n                            }\n                        }\n                    }\n                }\n                var leftClasses = this._getLeftWing();\n                var rightClasses = this._getRightWing();\n                var leftPos = this.placeLeftToRight(leftClasses);\n                var rightPos = this.placeRightToLeft(rightClasses);\n                var x = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n                });\n                var order = new Dictionary();\n                var placed = new Dictionary();\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    var sequenceStart = -1, sequenceEnd = -1;\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        order.set(node, 0);\n                        placed.set(node, false);\n                        if (node.isVirtual) {\n                            if (sequenceStart === -1) {\n                                sequenceStart = n;\n                            } else if (sequenceStart === n - 1) {\n                                sequenceStart = n;\n                            } else {\n                                sequenceEnd = n;\n                                order.set(layer[sequenceStart], 0);\n                                if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                    placed.set(layer[sequenceStart], true);\n                                } else {\n                                    placed.set(layer[sequenceStart], false);\n                                }\n                                sequenceStart = n;\n                            }\n                        }\n                    }\n                }\n                var directions = [\n                    1,\n                    -1\n                ];\n                Utils.forEach(directions, function (d) {\n                    var start = d === 1 ? 0 : this.layers.length - 1;\n                    for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                        var layer = this.layers[l];\n                        var virtualStartIndex = this._firstVirtualNode(layer);\n                        var virtualStart = null;\n                        var sequence = null;\n                        if (virtualStartIndex !== -1) {\n                            virtualStart = layer[virtualStartIndex];\n                            sequence = [];\n                            for (i = 0; i < virtualStartIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                        } else {\n                            virtualStart = null;\n                            sequence = layer;\n                        }\n                        if (sequence.length > 0) {\n                            this._sequencer(x, null, virtualStart, d, sequence);\n                            for (i = 0; i < sequence.length - 1; ++i) {\n                                this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                            }\n                            if (virtualStart) {\n                                this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                            }\n                        }\n                        while (virtualStart) {\n                            var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                            if (!virtualEnd) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, null, d, sequence);\n                                    for (i = 0; i < sequence.length - 1; ++i) {\n                                        this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                    }\n                                    this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                                }\n                            } else if (order.get(virtualStart) === d) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                var virtualEndIndex = virtualEnd.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                                }\n                                placed.set(virtualStart, true);\n                            }\n                            virtualStart = virtualEnd;\n                        }\n                        this.adjustDirections(l, d, order, placed);\n                    }\n                }, this);\n                var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n                var reachedFinalLayerIndex = function (k, ctx) {\n                    if (ctx._isIncreasingLayout()) {\n                        return k < ctx.layers.length;\n                    } else {\n                        return k >= 0;\n                    }\n                };\n                var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n                function maximumHeight(layer, ctx) {\n                    var height = Number.MIN_VALUE;\n                    for (var n = 0; n < layer.length; ++n) {\n                        var node = layer[n];\n                        if (ctx._isVerticalLayout()) {\n                            height = Math.max(height, node.height);\n                        } else {\n                            height = Math.max(height, node.width);\n                        }\n                    }\n                    return height;\n                }\n                for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                    layer = this.layers[i];\n                    var height = maximumHeight(layer, this);\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (this._isVerticalLayout()) {\n                            node.x = x.get(node);\n                            node.y = offset + height / 2;\n                        } else {\n                            node.x = offset + height / 2;\n                            node.y = x.get(node);\n                        }\n                    }\n                    offset += this.options.layerSeparation + height;\n                }\n            },\n            adjustDirections: function (l, d, order, placed) {\n                if (l + d < 0 || l + d >= this.layers.length) {\n                    return;\n                }\n                var prevBridge = null, prevBridgeTarget = null;\n                var layer = this.layers[l + d];\n                for (var n = 0; n < layer.length; ++n) {\n                    var nextBridge = layer[n];\n                    if (nextBridge.isVirtual) {\n                        var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                        if (nextBridgeTarget.isVirtual) {\n                            if (prevBridge) {\n                                var p = placed.get(prevBridgeTarget);\n                                var clayer = this.layers[l];\n                                var i1 = prevBridgeTarget.layerIndex;\n                                var i2 = nextBridgeTarget.layerIndex;\n                                for (var i = i1 + 1; i < i2; ++i) {\n                                    if (clayer[i].isVirtual) {\n                                        p = p && placed.get(clayer[i]);\n                                    }\n                                }\n                                if (p) {\n                                    order.set(prevBridge, d);\n                                    var j1 = prevBridge.layerIndex;\n                                    var j2 = nextBridge.layerIndex;\n                                    for (var j = j1 + 1; j < j2; ++j) {\n                                        if (layer[j].isVirtual) {\n                                            order.set(layer[j], d);\n                                        }\n                                    }\n                                }\n                            }\n                            prevBridge = nextBridge;\n                            prevBridgeTarget = nextBridgeTarget;\n                        }\n                    }\n                }\n            },\n            getNeighborOnLayer: function (node, l) {\n                var neighbor = this.upNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                neighbor = this.downNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                return null;\n            },\n            _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n                if (sequence.length === 1) {\n                    this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n                }\n                if (sequence.length > 1) {\n                    var r = sequence.length, t = this.intDiv(r, 2);\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                    this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n                }\n            },\n            _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n                var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n                var n = neighbors.length;\n                if (n !== 0) {\n                    if (n % 2 === 1) {\n                        x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                    } else {\n                        x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                    }\n                    if (virtualStart) {\n                        x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                    }\n                    if (virtualEnd) {\n                        x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                    }\n                }\n            },\n            combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n                for (i = 0; i < t; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) >= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            leftHeap.push({\n                                k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]),\n                                v: 2\n                            });\n                        }\n                    }\n                    leftHeap.push({\n                        k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]),\n                        v: c\n                    });\n                }\n                if (virtualStart) {\n                    leftHeap.push({\n                        k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                leftHeap.sort(this._positionDescendingComparer);\n                var rightHeap = [];\n                for (i = t; i < r; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) <= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            rightHeap.push({\n                                k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]),\n                                v: 2\n                            });\n                        }\n                    }\n                    rightHeap.push({\n                        k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]),\n                        v: c\n                    });\n                }\n                if (virtualEnd) {\n                    rightHeap.push({\n                        k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                rightHeap.sort(this._positionAscendingComparer);\n                var leftRes = 0, rightRes = 0;\n                var m = this.getMinDist(sequence[t - 1], sequence[t]);\n                while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                    if (leftRes < rightRes) {\n                        if (leftHeap.length === 0) {\n                            x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                            break;\n                        } else {\n                            pair = leftHeap.shift();\n                            leftRes = leftRes + pair.v;\n                            x.set(sequence[t - 1], pair.k);\n                            x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                        }\n                    } else {\n                        if (rightHeap.length === 0) {\n                            x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                            break;\n                        } else {\n                            pair = rightHeap.shift();\n                            rightRes = rightRes + pair.v;\n                            x.set(sequence[t], pair.k);\n                            x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                        }\n                    }\n                }\n                for (i = t - 2; i >= 0; i--) {\n                    x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n                }\n                for (i = t + 1; i < r; i++) {\n                    x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n                }\n            },\n            placeLeft: function (node, leftPos, leftClass) {\n                var pos = Number.NEGATIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var leftSibling = this.leftSibling(v);\n                    if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                        if (!leftPos.containsKey(leftSibling)) {\n                            this.placeLeft(leftSibling, leftPos, leftClass);\n                        }\n                        pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                    }\n                }, this);\n                if (pos === Number.NEGATIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    leftPos.set(v, pos);\n                });\n            },\n            placeRight: function (node, rightPos, rightClass) {\n                var pos = Number.POSITIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var rightSibling = this.rightSibling(v);\n                    if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                        if (!rightPos.containsKey(rightSibling)) {\n                            this.placeRight(rightSibling, rightPos, rightClass);\n                        }\n                        pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                    }\n                }, this);\n                if (pos === Number.POSITIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    rightPos.set(v, pos);\n                });\n            },\n            leftSibling: function (node) {\n                var layer = this.layers[node.layer], layerIndex = node.layerIndex;\n                return layerIndex === 0 ? null : layer[layerIndex - 1];\n            },\n            rightSibling: function (node) {\n                var layer = this.layers[node.layer];\n                var layerIndex = node.layerIndex;\n                return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n            },\n            _getComposite: function (node) {\n                return node.isVirtual ? this._nodesInLink(node) : [node];\n            },\n            arrangeNodes: function () {\n                var i, l, ni, layer, node;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.upstreamPriority = node.upstreamLinkCount;\n                        node.downstreamPriority = node.downstreamLinkCount;\n                    }\n                }\n                var maxLayoutIterations = 2;\n                for (var it = 0; it < maxLayoutIterations; it++) {\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        this.layoutLayer(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        this.layoutLayer(true, i);\n                    }\n                }\n                var gridPos = Number.MAX_VALUE;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        gridPos = Math.min(gridPos, node.gridPosition);\n                    }\n                }\n                if (gridPos < 0) {\n                    for (l = 0; l < this.layers.length; l++) {\n                        layer = this.layers[l];\n                        for (ni = 0; ni < layer.length; ni++) {\n                            node = layer[ni];\n                            node.gridPosition = node.gridPosition - gridPos;\n                        }\n                    }\n                }\n            },\n            layoutLayer: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var sorted = [];\n                for (var n = 0; n < considered.length; n++) {\n                    sorted.push(considered[n]);\n                }\n                sorted.sort(function (n1, n2) {\n                    var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                    var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n                    if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                        return 0;\n                    }\n                    if (n1Priority < n2Priority) {\n                        return 1;\n                    }\n                    return -1;\n                });\n                Utils.forEach(sorted, function (node) {\n                    var nodeGridPos = node.gridPosition;\n                    var nodeBaryCenter = this.calcBaryCenter(node);\n                    var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                        return;\n                    }\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                        return;\n                    }\n                    if (nodeGridPos < nodeBaryCenter) {\n                        while (nodeGridPos < nodeBaryCenter) {\n                            if (!this.moveRight(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    } else {\n                        while (nodeGridPos > nodeBaryCenter) {\n                            if (!this.moveLeft(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    }\n                }, this);\n                if (iconsidered > 0) {\n                    this.calcDownData(iconsidered - 1);\n                }\n                if (iconsidered < this.layers.length - 1) {\n                    this.calcUpData(iconsidered + 1);\n                }\n            },\n            moveRight: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === layer.length - 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                var rightNode = layer[index + 1];\n                var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n                if (rightNode.gridPosition > node.gridPosition + 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                if (rightNodePriority > priority || Math.abs(rightNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveRight(rightNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                return false;\n            },\n            moveLeft: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === 0) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                var leftNode = layer[index - 1];\n                var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n                if (leftNode.gridPosition < node.gridPosition - 1) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                if (leftNodePriority > priority || Math.abs(leftNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveLeft(leftNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                return false;\n            },\n            mapVirtualNode: function (node, link) {\n                this.nodeToLinkMap.set(node, link);\n                if (!this.linkToNodeMap.containsKey(link)) {\n                    this.linkToNodeMap.set(link, []);\n                }\n                this.linkToNodeMap.get(link).push(node);\n            },\n            _nodesInLink: function (node) {\n                return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n            },\n            _dummify: function () {\n                this.linkToNodeMap = new Dictionary();\n                this.nodeToLinkMap = new Dictionary();\n                var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n                var layers = this.layers;\n                var addLinkBetweenLayers = function (upLayer, downLayer, link) {\n                    layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                    layers[upLayer].linksTo[downLayer].push(link);\n                };\n                for (l = 0; l < links.length; l++) {\n                    var link = links[l];\n                    var o = link.source;\n                    var d = link.target;\n                    var oLayer = o.layer;\n                    var dLayer = d.layer;\n                    var oPos = o.gridPosition;\n                    var dPos = d.gridPosition;\n                    var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n                    var p = o;\n                    if (oLayer - dLayer > 1) {\n                        for (i = oLayer - 1; i > dLayer; i--) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - dLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                        link.changeSource(p);\n                        link.depthOfDumminess = oLayer - dLayer - 1;\n                    } else if (oLayer - dLayer < -1) {\n                        for (i = oLayer + 1; i < dLayer; i++) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - oLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            pos &= pos;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, link);\n                        link.changeSource(p);\n                        link.depthOfDumminess = dLayer - oLayer - 1;\n                    } else {\n                        addLinkBetweenLayers(oLayer, dLayer, link);\n                    }\n                }\n            },\n            _dedummify: function () {\n                var dedum = true;\n                while (dedum) {\n                    dedum = false;\n                    for (var l = 0; l < this.graph.links.length; l++) {\n                        var link = this.graph.links[l];\n                        if (!link.depthOfDumminess) {\n                            continue;\n                        }\n                        var points = [];\n                        points.unshift({\n                            x: link.target.x,\n                            y: link.target.y\n                        });\n                        points.unshift({\n                            x: link.source.x,\n                            y: link.source.y\n                        });\n                        var temp = link;\n                        var depthOfDumminess = link.depthOfDumminess;\n                        for (var d = 0; d < depthOfDumminess; d++) {\n                            var node = temp.source;\n                            var prevLink = node.incoming[0];\n                            points.unshift({\n                                x: prevLink.source.x,\n                                y: prevLink.source.y\n                            });\n                            temp = prevLink;\n                        }\n                        link.changeSource(temp.source);\n                        link.depthOfDumminess = 0;\n                        if (points.length > 2) {\n                            points.splice(0, 1);\n                            points.splice(points.length - 1);\n                            link.points = points;\n                        } else {\n                            link.points = [];\n                        }\n                        dedum = true;\n                        break;\n                    }\n                }\n            },\n            _optimizeCrossings: function () {\n                var moves = -1, i;\n                var maxIterations = 3;\n                var iter = 0;\n                while (moves !== 0) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    moves = 0;\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        moves += this.optimizeLayerCrossings(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        moves += this.optimizeLayerCrossings(true, i);\n                    }\n                }\n            },\n            calcUpData: function (layer) {\n                if (layer === 0) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var upLayer = new Set();\n                var temp = this.layers[layer - 1];\n                for (i = 0; i < temp.length; i++) {\n                    upLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (upLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (upLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.uBaryCenter = sum / total;\n                        node.upstreamLinkCount = total;\n                    } else {\n                        node.uBaryCenter = i;\n                        node.upstreamLinkCount = 0;\n                    }\n                }\n            },\n            calcDownData: function (layer) {\n                if (layer === this.layers.length - 1) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var downLayer = new Set();\n                var temp = this.layers[layer + 1];\n                for (i = 0; i < temp.length; i++) {\n                    downLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (downLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (downLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.dBaryCenter = sum / total;\n                        node.downstreamLinkCount = total;\n                    } else {\n                        node.dBaryCenter = i;\n                        node.downstreamLinkCount = 0;\n                    }\n                }\n            },\n            optimizeLayerCrossings: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var presorted = considered.slice(0);\n                if (down) {\n                    this.calcUpData(iconsidered);\n                } else {\n                    this.calcDownData(iconsidered);\n                }\n                var that = this;\n                considered.sort(function (n1, n2) {\n                    var n1BaryCenter = that.calcBaryCenter(n1), n2BaryCenter = that.calcBaryCenter(n2);\n                    if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                        if (n1.degree() === n2.degree()) {\n                            return that.compareByIndex(n1, n2);\n                        } else if (n1.degree() < n2.degree()) {\n                            return 1;\n                        }\n                        return -1;\n                    }\n                    var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                    if (compareValue > 0) {\n                        return -1;\n                    } else if (compareValue < 0) {\n                        return 1;\n                    }\n                    return that.compareByIndex(n1, n2);\n                });\n                var i, moves = 0;\n                for (i = 0; i < considered.length; i++) {\n                    if (considered[i] !== presorted[i]) {\n                        moves++;\n                    }\n                }\n                if (moves > 0) {\n                    var inode = 0;\n                    for (i = 0; i < considered.length; i++) {\n                        var node = considered[i];\n                        node.gridPosition = inode++;\n                    }\n                }\n                return moves;\n            },\n            _swapPairs: function () {\n                var maxIterations = this.options.layeredIterations;\n                var iter = 0;\n                while (true) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    var downwards = iter % 4 <= 1;\n                    var secondPass = iter % 4 === 1;\n                    for (var l = downwards ? 0 : this.layers.length - 1; downwards ? l <= this.layers.length - 1 : l >= 0; l += downwards ? 1 : -1) {\n                        var layer = this.layers[l];\n                        var hasSwapped = false;\n                        var calcCrossings = true;\n                        var memCrossings = 0;\n                        for (var n = 0; n < layer.length - 1; n++) {\n                            var up = 0;\n                            var down = 0;\n                            var crossBefore = 0;\n                            if (calcCrossings) {\n                                if (l !== 0) {\n                                    up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                                }\n                                if (l !== this.layers.length - 1) {\n                                    down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                                }\n                                if (downwards) {\n                                    up *= 2;\n                                } else {\n                                    down *= 2;\n                                }\n                                crossBefore = up + down;\n                            } else {\n                                crossBefore = memCrossings;\n                            }\n                            if (crossBefore === 0) {\n                                continue;\n                            }\n                            var node1 = layer[n];\n                            var node2 = layer[n + 1];\n                            var node1GridPos = node1.gridPosition;\n                            var node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n                            up = 0;\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            down = 0;\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            } else {\n                                down *= 2;\n                            }\n                            var crossAfter = up + down;\n                            var revert = false;\n                            if (secondPass) {\n                                revert = crossAfter >= crossBefore;\n                            } else {\n                                revert = crossAfter > crossBefore;\n                            }\n                            if (revert) {\n                                node1 = layer[n];\n                                node2 = layer[n + 1];\n                                node1GridPos = node1.gridPosition;\n                                node2GridPos = node2.gridPosition;\n                                layer[n] = node2;\n                                layer[n + 1] = node1;\n                                node1.gridPosition = node2GridPos;\n                                node2.gridPosition = node1GridPos;\n                                memCrossings = crossBefore;\n                                calcCrossings = false;\n                            } else {\n                                hasSwapped = true;\n                                calcCrossings = true;\n                            }\n                        }\n                        if (hasSwapped) {\n                            if (l !== this.layers.length - 1) {\n                                this.calcUpData(l + 1);\n                            }\n                            if (l !== 0) {\n                                this.calcDownData(l - 1);\n                            }\n                        }\n                    }\n                }\n            },\n            countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n                var links = this.layers[ulayer].linksTo[dlayer];\n                var link1, link2, n11, n12, n21, n22, l1, l2;\n                var crossings = 0;\n                var length = links.length;\n                for (l1 = 0; l1 < length; l1++) {\n                    link1 = links[l1];\n                    for (l2 = l1 + 1; l2 < length; l2++) {\n                        link2 = links[l2];\n                        if (link1.target.layer === dlayer) {\n                            n11 = link1.source;\n                            n12 = link1.target;\n                        } else {\n                            n11 = link1.target;\n                            n12 = link1.source;\n                        }\n                        if (link2.target.layer === dlayer) {\n                            n21 = link2.source;\n                            n22 = link2.target;\n                        } else {\n                            n21 = link2.target;\n                            n22 = link2.source;\n                        }\n                        var n11gp = n11.gridPosition;\n                        var n12gp = n12.gridPosition;\n                        var n21gp = n21.gridPosition;\n                        var n22gp = n22.gridPosition;\n                        if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                            crossings++;\n                        }\n                    }\n                }\n                return crossings;\n            },\n            calcBaryCenter: function (node) {\n                var upstreamLinkCount = node.upstreamLinkCount;\n                var downstreamLinkCount = node.downstreamLinkCount;\n                var uBaryCenter = node.uBaryCenter;\n                var dBaryCenter = node.dBaryCenter;\n                if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                    return (uBaryCenter + dBaryCenter) / 2;\n                }\n                if (upstreamLinkCount > 0) {\n                    return uBaryCenter;\n                }\n                if (downstreamLinkCount > 0) {\n                    return dBaryCenter;\n                }\n                return 0;\n            },\n            _gridPositionComparer: function (x, y) {\n                if (x.gridPosition < y.gridPosition) {\n                    return -1;\n                }\n                if (x.gridPosition > y.gridPosition) {\n                    return 1;\n                }\n                return 0;\n            },\n            _positionAscendingComparer: function (x, y) {\n                return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n            },\n            _positionDescendingComparer: function (x, y) {\n                return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n            },\n            _firstVirtualNode: function (layer) {\n                for (var c = 0; c < layer.length; c++) {\n                    if (layer[c].isVirtual) {\n                        return c;\n                    }\n                }\n                return -1;\n            },\n            compareByIndex: function (o1, o2) {\n                var i1 = o1.index;\n                var i2 = o2.index;\n                if (i1 < i2) {\n                    return 1;\n                }\n                if (i1 > i2) {\n                    return -1;\n                }\n                return 0;\n            },\n            intDiv: function (numerator, denominator) {\n                return (numerator - numerator % denominator) / denominator;\n            },\n            nextVirtualNode: function (layer, node) {\n                var nodeIndex = node.layerIndex;\n                for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                    if (layer[i].isVirtual) {\n                        return layer[i];\n                    }\n                }\n                return null;\n            }\n        });\n        var LayoutState = kendo.Class.extend({\n            init: function (diagram, graphOrNodes) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram given';\n                }\n                this.diagram = diagram;\n                this.nodeMap = new Dictionary();\n                this.linkMap = new Dictionary();\n                this.capture(graphOrNodes ? graphOrNodes : diagram);\n            },\n            capture: function (diagramOrGraphOrNodes) {\n                var node, nodes, shape, i, conn, link, links;\n                if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n                    for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                        node = diagramOrGraphOrNodes.nodes[i];\n                        shape = node.associatedShape;\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                    for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                        link = diagramOrGraphOrNodes.links[i];\n                        conn = link.associatedConnection;\n                        this.linkMap.set(conn.visual.id, link.points());\n                    }\n                } else if (diagramOrGraphOrNodes instanceof Array) {\n                    nodes = diagramOrGraphOrNodes;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                } else if (diagramOrGraphOrNodes.hasOwnProperty('links') && diagramOrGraphOrNodes.hasOwnProperty('nodes')) {\n                    nodes = diagramOrGraphOrNodes.nodes;\n                    links = diagramOrGraphOrNodes.links;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                    for (i = 0; i < links.length; i++) {\n                        link = links[i];\n                        conn = link.associatedConnection;\n                        if (conn) {\n                            this.linkMap.set(conn.visual.id, link.points);\n                        }\n                    }\n                } else {\n                    var shapes = this.diagram.shapes;\n                    var connections = this.diagram.connections;\n                    for (i = 0; i < shapes.length; i++) {\n                        shape = shapes[i];\n                        this.nodeMap.set(shape.visual.id, shape.bounds());\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        conn = connections[i];\n                        this.linkMap.set(conn.visual.id, conn.points());\n                    }\n                }\n            }\n        });\n        deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            SpringLayout: SpringLayout,\n            TreeLayout: TreeLayout,\n            GraphAdapter: DiagramToHyperTreeAdapter,\n            LayeredLayout: LayeredLayout,\n            LayoutBase: LayoutBase,\n            LayoutState: LayoutState\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/dom', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.toolbar',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.dropdownlist',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var dataviz = kendo.dataviz, draw = kendo.drawing, geom = kendo.geometry, diagram = dataviz.diagram, Widget = kendo.ui.Widget, Class = kendo.Class, proxy = $.proxy, deepExtend = kendo.deepExtend, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, HierarchicalDataSource = kendo.data.HierarchicalDataSource, Canvas = diagram.Canvas, Group = diagram.Group, Rectangle = diagram.Rectangle, Circle = diagram.Circle, CompositeTransform = diagram.CompositeTransform, Rect = diagram.Rect, Path = diagram.Path, DeleteShapeUnit = diagram.DeleteShapeUnit, DeleteConnectionUnit = diagram.DeleteConnectionUnit, TextBlock = diagram.TextBlock, Image = diagram.Image, Point = diagram.Point, Intersect = diagram.Intersect, ConnectionEditAdorner = diagram.ConnectionEditAdorner, UndoRedoService = diagram.UndoRedoService, ToolService = diagram.ToolService, Selector = diagram.Selector, ResizingAdorner = diagram.ResizingAdorner, ConnectorsAdorner = diagram.ConnectorsAdorner, Cursors = diagram.Cursors, Utils = diagram.Utils, Observable = kendo.Observable, ToBackUnit = diagram.ToBackUnit, ToFrontUnit = diagram.ToFrontUnit, PolylineRouter = diagram.PolylineRouter, CascadingRouter = diagram.CascadingRouter, isUndefined = Utils.isUndefined, isDefined = Utils.isDefined, defined = draw.util.defined, isArray = Array.isArray, isFunction = kendo.isFunction, isString = Utils.isString, isPlainObject = $.isPlainObject, math = Math;\n        var NS = '.kendoDiagram', CASCADING = 'cascading', ITEMBOUNDSCHANGE = 'itemBoundsChange', CHANGE = 'change', CLICK = 'click', DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ERROR = 'error', AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', MAXINT = 9007199254740992, SELECT = 'select', ITEMROTATE = 'itemRotate', PAN = 'pan', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', NONE = 'none', DEFAULT_CANVAS_WIDTH = 600, DEFAULT_CANVAS_HEIGHT = 600, DEFAULT_SHAPE_TYPE = 'rectangle', DEFAULT_SHAPE_WIDTH = 100, DEFAULT_SHAPE_HEIGHT = 100, DEFAULT_SHAPE_MINWIDTH = 20, DEFAULT_SHAPE_MINHEIGHT = 20, DEFAULT_SHAPE_POSITION = 0, DEFAULT_CONNECTION_BACKGROUND = 'Yellow', MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, ABSOLUTE = 'absolute', TRANSFORMED = 'transformed', ROTATED = 'rotated', TRANSPARENT = 'transparent', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y', MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, MOBILE_ZOOM_RATE = 0.05, MOBILE_PAN_DISTANCE = 5, BUTTON_TEMPLATE = '<a class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base #=className#\" href=\"\\\\#\">' + '<span class=\"k-button-icon #=iconClass# #=imageClass#\"></span>' + '<span class=\"k-button-text\">#=text#</span>' + '</a>', CONNECTION_CONTENT_OFFSET = 5;\n        diagram.DefaultConnectors = [\n            { name: TOP },\n            { name: BOTTOM },\n            { name: LEFT },\n            { name: RIGHT },\n            {\n                name: AUTO,\n                position: function (shape) {\n                    return shape.getPosition('center');\n                }\n            }\n        ];\n        var defaultButtons = {\n            cancel: {\n                text: 'Cancel',\n                imageClass: 'k-i-cancel',\n                className: 'k-diagram-cancel',\n                iconClass: 'k-icon'\n            },\n            update: {\n                text: 'Update',\n                imageClass: 'k-i-checkmark',\n                className: 'k-diagram-update',\n                iconClass: 'k-icon'\n            }\n        };\n        diagram.shapeDefaults = function (extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: '',\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: { angle: 0 }\n            };\n            Utils.simpleExtend(defaults, extra);\n            return defaults;\n        };\n        function mwDelta(e) {\n            var origEvent = e.originalEvent, delta = 0;\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n            return delta;\n        }\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n        function closestConnector(point, connectors) {\n            var minimumDistance = MAXINT, resCtr, connector;\n            for (var i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                if (!isAutoConnector(connector)) {\n                    var dist = point.distanceTo(connector.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = connector;\n                    }\n                }\n            }\n            return resCtr;\n        }\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: { align: 'center middle' },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n            bounds: function () {\n            },\n            refresh: function () {\n                this.visual.redraw();\n            },\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n            toString: function () {\n                return this.options.id;\n            },\n            serialize: function () {\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n                return this.options.content.text;\n            },\n            _createContentVisual: function (options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n            _updateContentVisual: function (options) {\n                this._contentVisual.redraw(options);\n            },\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {}, elementTemplate = kendo.template(that.options.content.template, { paramName: 'dataItem' });\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n            toJSON: function () {\n                return { id: this.options.id };\n            }\n        });\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: { color: DEFAULT_CONNECTION_BACKGROUND },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(':'), id = tempStr[0], name = tempStr[1] || AUTO;\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n                that._createConnectors();\n            },\n            options: diagram.shapeDefaults(),\n            _setOptionsFromModel: function (model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n                this.redrawVisual();\n            },\n            updateOptionsFromModel: function (model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\n                                'x',\n                                'y',\n                                'width',\n                                'height'\n                            ])) {\n                            if (this.options.visual) {\n                                this._redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this._redrawVisual();\n                            }\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n            _redrawVisual: function () {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n            redrawVisual: function () {\n                this._redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n            updateModel: function (syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set('x', bounds.x);\n                        }\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set('y', bounds.y);\n                        }\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set('width', bounds.width);\n                        }\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set('height', bounds.height);\n                        }\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n            updateBounds: function () {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n            content: function (content) {\n                var result = this._content(content);\n                this._alignContent();\n                return result;\n            },\n            _alignContent: function () {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n            _createConnectors: function () {\n                var options = this.options, length = options.connectors.length, connectorDefaults = options.connectorDefaults, connector, i;\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(this, deepExtend({}, connectorDefaults, options.connectors[i]));\n                    this.connectors.push(connector);\n                }\n            },\n            bounds: function (value) {\n                var bounds;\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                        case TRANSFORMED:\n                            bounds = this._transformedBounds();\n                            break;\n                        case ABSOLUTE:\n                            bounds = this._transformedBounds();\n                            var pan = this.diagram._pan;\n                            bounds.x += pan.x;\n                            bounds.y += pan.y;\n                            break;\n                        case ROTATED:\n                            bounds = this._rotatedBounds();\n                            break;\n                        default:\n                            bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n                return bounds;\n            },\n            _setBounds: function (rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n                this._bounds = new Rect(x, y, width, height);\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                json.options.id = diagram.randomId();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Shape(json.options);\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            rotate: function (angle, center, undoable) {\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n                    var b = this.bounds(), sc = new Point(b.width / 2, b.height / 2), deltaAngle, newPosition;\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n                    this.refreshConnections();\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n                return rotate;\n            },\n            connections: function (type) {\n                var result = [], i, j, con, cons, ctr;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == 'out') {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == 'in') {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n                return result;\n            },\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this.connectors);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n            getPosition: function (side) {\n                var b = this.bounds(), fnName = side.charAt(0).toLowerCase() + side.slice(1);\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n                return b.center();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n                    this.shapeVisual.redraw(this._visualOptions(options));\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n                    shapeOptions = deepExtend(shapeOptions, options);\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n            _updateConnectors: function () {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n            _diffNumericOptions: diagram.diffNumericOptions,\n            _visualOptions: function (options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {\n                        item: this,\n                        bounds: this._bounds.clone()\n                    });\n                }\n            },\n            _transformPoint: function (point) {\n                var rotate = this.rotate(), bounds = this.bounds(), tl = bounds.topLeft();\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n                return point;\n            },\n            _transformedBounds: function () {\n                var bounds = this.bounds(), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(tl, br);\n            },\n            _rotate: function () {\n                var rotation = this.options.rotation;\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n                this._rotationOffset = new Point();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint, angle = this.rotate().angle;\n                    if (value.isEmpty && !value.isEmpty()) {\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else {\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle);\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n            toJSON: function () {\n                return { shapeId: this.options.id };\n            },\n            createShapeVisual: function () {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + '').toLocaleLowerCase();\n                var shapeVisual;\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n                if (isFunction(visualTemplate)) {\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == 'rectangle') {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == 'circle') {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == 'text') {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == 'image') {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n            options: {\n                hover: { stroke: {} },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConnector: AUTO\n            },\n            _setOptionsFromModel: function (model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n            updateOptionsFromModel: function (model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                                from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n                        this.dataItem = model;\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n            updateModel: function (syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField('from', model);\n                                clearField('fromConnector', model);\n                                model.set('fromX', this.options.fromX);\n                                model.set('fromY', this.options.fromY);\n                            } else {\n                                model.set('from', this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set('fromConnector', this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField('fromX', model);\n                                clearField('fromY', model);\n                            }\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField('to', model);\n                                clearField('toConnector', model);\n                                model.set('toX', this.options.toX);\n                                model.set('toY', this.options.toY);\n                            } else {\n                                model.set('to', this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set('toConnector', this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField('toX', model);\n                                clearField('toY', model);\n                            }\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set('type', this.options.type);\n                            }\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n            _setSource: function (source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (source !== undefined) {\n                    this.from = source;\n                }\n                this._removeFromSourceConnector();\n                if (source === null) {\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n            _setFromOptions: function (from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n            _setTarget: function (target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (target !== undefined) {\n                    this.to = target;\n                }\n                this._removeFromTargetConnector();\n                if (target === null) {\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n            _setToOptions: function (to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n            _updateConnectors: function () {\n                this._updateConnector(this.source(), 'source');\n                this._updateConnector(this.target(), 'target');\n            },\n            _updateConnector: function (instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function () {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                        setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n            content: function (content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n            _createContentVisual: function (options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n                return visual;\n            },\n            _updateContentVisual: function (options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n            _alignContent: function () {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n                    if (alignToPath && points.length > 2 && distance > 0 && (startPoint.y === endPoint.y && distance < width || startPoint.x === endPoint.x && distance < height)) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n                    var point;\n                    if (alignToPath) {\n                        var angle = draw.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || 0 < angle && angle < 90) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n                    this._contentVisual.position(point);\n                }\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n            _initRouter: function () {\n                var type = (this.options.type || '').toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty('x') && definition.hasOwnProperty('y')) {\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw 'A Connection point needs to be a Point or an object with x and y properties.';\n                        }\n                    }\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n            _resolveConnectors: function () {\n                var connection = this, sourcePoint, targetPoint, sourceConnectors, targetConnectors, source = connection.source(), target = connection.target();\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        sourceConnectors = source.shape.connectors;\n                    } else {\n                        sourceConnectors = [source];\n                    }\n                }\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        targetConnectors = target.shape.connectors;\n                    } else {\n                        targetConnectors = [target];\n                    }\n                }\n                if (sourcePoint) {\n                    if (targetConnectors) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, targetConnectors);\n                    }\n                } else if (sourceConnectors) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, sourceConnectors);\n                    } else if (targetConnectors) {\n                        this._resolveAutoConnectors(sourceConnectors, targetConnectors);\n                    }\n                }\n            },\n            _resolveAutoConnectors: function (sourceConnectors, targetConnectors) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n            _testRoutePoints: function (sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector), start, end, rect, exclude;\n                    exclude = this._getRouteExclude(sourcePoint, targetPoint, sourceConnector.shape, targetConnector.shape);\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y), math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect, exclude)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n            _getRouteExclude: function (sourcePoint, targetPoint, sourceShape, targetShape) {\n                var exclude = [];\n                if (this._isPointInsideShape(sourcePoint, sourceShape)) {\n                    exclude.push(sourceShape);\n                }\n                if (this._isPointInsideShape(targetPoint, targetShape)) {\n                    exclude.push(targetShape);\n                }\n                return exclude;\n            },\n            _isPointInsideShape: function (point, shape) {\n                var bounds = shape.bounds(), rotatedPoint, angle = shape.rotate().angle, pointX, pointY, boundsX = bounds.x, boundsY = bounds.y;\n                rotatedPoint = point.clone().rotate(bounds.center(), angle);\n                pointX = rotatedPoint.x;\n                pointY = rotatedPoint.y;\n                return pointX > boundsX && pointX < boundsX + bounds.width && pointY > boundsY && pointY < boundsY + bounds.height;\n            },\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n                    var points = this.options.points;\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n                    if (options && options.content || options.text) {\n                        this.content(options.content);\n                    }\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Connection(this.from, this.to, json.options);\n            },\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(), to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                json.options.points = this.points();\n                return json;\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n                this.path.redraw({ stroke: { color: color } });\n            },\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route();\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n                this.path.redraw({ points: [source].concat(points, [target]) });\n            },\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n            _removeFromSourceConnector: function () {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n            _removeFromTargetConnector: function () {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n            toJSON: function () {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n                that._initTheme();\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._interactionDefaults();\n                that._initCanvas();\n                that.mainLayer = new Group({ id: 'main-layer' });\n                that.canvas.append(that.mainLayer);\n                that._shapesQuadTree = new ShapesQuadTree(that);\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({ id: 'adorner-layer' });\n                that.canvas.append(that.adornerLayer);\n                that._createHandlers();\n                that._initialize();\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n                that.selector = new Selector(that);\n                that._clipboard = [];\n                that.pauseMouseHandlers = false;\n                that._fetchFreshData();\n                that._createGlobalToolBar();\n                that._createOptionElements();\n                that.zoom(that.options.zoom);\n                that.canvas.draw();\n            },\n            options: {\n                name: 'Diagram',\n                theme: 'default',\n                layout: '',\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: '',\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: {},\n                selectable: { key: 'none' },\n                tooltip: {\n                    enabled: true,\n                    format: '{0}'\n                },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: { tools: [] },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN,\n                SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                'toolBarClick',\n                'save',\n                'cancel',\n                'edit',\n                'remove',\n                'add',\n                'dataBound',\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n            items: function () {\n                return $();\n            },\n            _createGlobalToolBar: function () {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\n                            'createShape',\n                            'undo',\n                            'redo',\n                            'rotateClockwise',\n                            'rotateAnticlockwise'\n                        ];\n                    }\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n                        this.toolBar.element.css({ textAlign: 'left' });\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n            createShape: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n                    if (!this.trigger('add', { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n            _createShape: function (dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n            createConnection: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n            _createConnection: function (dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n                return connection;\n            },\n            editModel: function (dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n                if (editorType == 'shape') {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == 'connection') {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, {\n                        from: connectionSelectorHandler,\n                        to: connectionSelectorHandler\n                    }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n                this.trigger('edit', this._editArgs());\n            },\n            edit: function (item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? 'shape' : 'connection';\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n            cancelEdit: function () {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n                    this._destroyEditor();\n                }\n            },\n            saveEdit: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n            _update: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n            _cancel: function () {\n                if (this.editor && !this.trigger('cancel', this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n            _getEditDataSource: function () {\n                return this.editor.options.type === 'shape' ? this.dataSource : this.connectionsDataSource;\n            },\n            _editArgs: function () {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n            _destroyEditor: function () {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n            _initElements: function () {\n                this.wrapper = this.element.empty().css('position', 'relative').attr('tabindex', 0).addClass('k-widget k-diagram');\n                this.scrollable = $('<div />').appendTo(this.element);\n            },\n            _initDefaults: function (userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\n                        'drag',\n                        'remove',\n                        'connect'\n                    ]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\n                        'drag',\n                        'remove'\n                    ]);\n                }\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n            _interactionDefaults: function () {\n                var options = this.options;\n                var selectable = options.selectable;\n                var pannable = options.pannable;\n                var mobile = kendo.support.mobileOS;\n                if (selectable && !defined(selectable.multiple)) {\n                    options.selectable = deepExtend({ multiple: mobile ? false : true }, options.selectable);\n                }\n                if (pannable && !defined(pannable.key)) {\n                    options.pannable = deepExtend({ key: mobile ? 'none' : 'ctrl' }, options.pannable);\n                }\n            },\n            _initCanvas: function () {\n                var canvasContainer = $('<div class=\\'k-layer\\'></div>').appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that)).on('keydown' + NS, proxy(that._keydown, that));\n                that._userEvents = new kendo.UserEvents(this.scrollable, {\n                    multiTouch: true,\n                    fastTap: true,\n                    tap: proxy(that._tap, that),\n                    start: proxy(that._dragStart, that),\n                    move: proxy(that._drag, that),\n                    end: proxy(that._dragEnd, that),\n                    gesturestart: proxy(that._gestureStart, that),\n                    gesturechange: proxy(that._gestureChange, that),\n                    gestureend: proxy(that._gestureEnd, that),\n                    doubleTap: proxy(that._doubleTap, that),\n                    supportDoubleTap: true\n                });\n                that.toolService = new ToolService(that);\n                this.scrollable.on('mouseover' + NS, proxy(that._mouseover, that)).on('mouseout' + NS, proxy(that._mouseout, that)).on('mousemove' + NS, proxy(that._mouseMove, that)).on('mousedown' + NS, proxy(that._mouseDown, that)).on('mouseup' + NS, proxy(that._mouseUp, that));\n                this._syncHandler = proxy(that._syncChanges, that);\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n            _dragStart: function (e) {\n                this._pauseMouseHandlers = true;\n                var point = this._eventPositions(e, true);\n                var event = e.event;\n                if (this.toolService.start(point, this._meta(event))) {\n                    this._destroyToolBar();\n                    event.preventDefault();\n                }\n            },\n            _drag: function (e) {\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.move(p, this._meta(event))) {\n                    event.preventDefault();\n                }\n            },\n            _dragEnd: function (e) {\n                this._pauseMouseHandlers = false;\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.end(p, this._meta(event))) {\n                    this._createToolBar();\n                    event.preventDefault();\n                }\n            },\n            _mouseMove: function (e) {\n                if (!this._pauseMouseHandlers) {\n                    var p = this._eventPositions(e);\n                    this.toolService._updateHoveredItem(p);\n                    this.toolService._updateCursor(p);\n                }\n            },\n            _mouseDown: function () {\n                this._pauseMouseHandlers = true;\n            },\n            _mouseUp: function () {\n                this._pauseMouseHandlers = false;\n            },\n            _tap: function (e) {\n                var toolService = this.toolService;\n                var selectable = this.options.selectable;\n                var point = this._eventPositions(e);\n                var focused = this.focus();\n                toolService._updateHoveredItem(point);\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n                    this.trigger('click', {\n                        item: item,\n                        point: point,\n                        meta: this._meta(e.event)\n                    });\n                    if (selectable && item.options.selectable !== false) {\n                        var multiple = selectable.multiple !== false;\n                        var ctrlPressed = kendo.support.mobileOS || this._meta(e.event).ctrlKey;\n                        if (item.isSelected) {\n                            if (ctrlPressed) {\n                                this._destroyToolBar();\n                                item.select(false);\n                            } else {\n                                this._createToolBar(focused);\n                            }\n                        } else {\n                            this._destroyToolBar();\n                            this.select(item, { addToSelection: multiple && ctrlPressed });\n                            this._createToolBar(focused);\n                        }\n                    }\n                } else if (selectable) {\n                    this._destroyToolBar();\n                    this.deselect();\n                }\n            },\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _wheel: function (e) {\n                var delta = mwDelta(e), p = this._eventPositions(e), meta = deepExtend(this._meta(e), { delta: delta });\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n            _meta: function (e) {\n                return {\n                    ctrlKey: e.ctrlKey,\n                    metaKey: e.metaKey,\n                    altKey: e.altKey,\n                    shiftKey: e.shiftKey,\n                    type: e.type\n                };\n            },\n            _eventPositions: function (e, start) {\n                var point;\n                if (e.touch) {\n                    var field = start ? 'startLocation' : 'location';\n                    point = new Point(e.x[field], e.y[field]);\n                } else {\n                    var event = e.originalEvent;\n                    point = new Point(event.pageX, event.pageY);\n                }\n                return this.documentToModel(point);\n            },\n            _gestureStart: function (e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n            _gestureChange: function (e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n                e.preventDefault();\n            },\n            _doubleTap: function (e) {\n                var diagram = this;\n                var pointPosition = this._eventPositions(e);\n                var options = diagram.options;\n                var zoomRate = options.zoomRate;\n                var zoom = diagram.zoom() + zoomRate;\n                var meta = this._meta(e);\n                var zoomOptions = {\n                    point: pointPosition,\n                    meta: meta,\n                    zoom: zoom\n                };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                zoom = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, zoom)), 2);\n                zoomOptions.zoom = zoom;\n                diagram.zoom(zoom, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n            },\n            _gestureEnd: function () {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n            _resize: function () {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n            _mouseover: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n            _mouseout: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n            _initTheme: function () {\n                var that = this;\n                var themeName = ((that.options || {}).theme || '').toLowerCase();\n                var themes = dataviz.ui.themes || {};\n                var themeOptions;\n                if (dataviz.SASS_THEMES.indexOf(themeName) != -1) {\n                    themeOptions = dataviz.autoTheme().diagram;\n                } else {\n                    themeOptions = (themes[themeName] || {}).diagram;\n                }\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, { editable: (themeOptions || {}).editable });\n                }\n            },\n            _createOptionElements: function () {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n                if (shapesLength) {\n                    this._createShapes();\n                }\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n            _createShapes: function () {\n                var that = this, options = that.options, shapes = options.shapes, shape, i;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n            _createConnections: function () {\n                var diagram = this, options = diagram.options, defaults = options.connectionDefaults, connections = options.connections, conn, source, target, i;\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n            _findConnectionTarget: function (options) {\n                options = options || {};\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n                return target;\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n            destroyScroller: function () {\n                var scroller = this.scroller;\n                if (!scroller) {\n                    return;\n                }\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n                return json;\n            },\n            focus: function () {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element, scrollContainer = element[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n                    element.trigger('focus');\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                    return true;\n                }\n            },\n            load: function (options) {\n                this.clear();\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n            setOptions: function (options) {\n                deepExtend(this.options, options);\n            },\n            clear: function () {\n                var that = this;\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target, deepExtend({}, this.options.connectionDefaults, options));\n                    this.addConnection(connection);\n                }\n                return connection;\n            },\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddConnectionUnit(connection, this), false);\n                }\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n                return connection;\n            },\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n                        return connection;\n                    }\n                } else if (!this.trigger('add', { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n            addShape: function (item, undoable) {\n                var shape, shapeDefaults = this.options.shapeDefaults;\n                if (item instanceof Shape) {\n                    shape = item;\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                } else {\n                    return;\n                }\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n                return shape;\n            },\n            _addShape: function (shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n                    if (!this.trigger('add', { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger('add', { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n            remove: function (items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                    this._removeItem(shapes[i], undoable, connections);\n                }\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n                this._resumeModelRefresh();\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n            _removeShapeDataItem: function (item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n            _removeConnectionDataItem: function (item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n            _triggerRemove: function (items) {\n                var toRemove = [];\n                var item, args, editable;\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger('remove', args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n                    var addToSelection = options.addToSelection, items = [], selected = [], i, element;\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n                    this._internalSelection = true;\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [item];\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n                    this._selectionChanged(selected, []);\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n            selectAll: function () {\n                this.select(this.shapes.concat(this.connections));\n            },\n            selectArea: function (rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n            deselect: function (item) {\n                this._internalSelection = true;\n                var deselected = [], items = [], element, i;\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            bringIntoView: function (item, options) {\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n                options = deepExtend({\n                    animate: false,\n                    align: 'center middle'\n                }, options);\n                if (options.align == 'none') {\n                    options.align = 'center middle';\n                }\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n                original = rect.clone();\n                rect.zoom(this._zoom);\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n                this._zoomMainLayer();\n                current = rect.clone();\n                aligner.align(rect, options.align);\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = 'Left';\n                }\n                var items = this.select(), val, item, i;\n                if (items.length === 0) {\n                    return;\n                }\n                switch (direction.toLowerCase()) {\n                case 'left':\n                case 'top':\n                    val = MAX_VALUE;\n                    break;\n                case 'right':\n                case 'bottom':\n                    val = MIN_VALUE;\n                    break;\n                }\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                            val = math.min(val, item.options.x);\n                            break;\n                        case 'top':\n                            val = math.min(val, item.options.y);\n                            break;\n                        case 'right':\n                            val = math.max(val, item.options.x);\n                            break;\n                        case 'bottom':\n                            val = math.max(val, item.options.y);\n                            break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                        case 'right':\n                            item.position(new Point(val, item.options.y));\n                            break;\n                        case 'top':\n                        case 'bottom':\n                            item.position(new Point(item.options.x, val));\n                            break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    zoom = this._zoom = this._getValidZoom(zoom);\n                    if (!isUndefined(staticPoint)) {\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n                    this._panTransform();\n                    this.canvas.surface.hideTooltip();\n                    this._updateAdorners();\n                }\n                return this._zoom;\n            },\n            _getPan: function (pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function () {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                } else {\n                    return this._pan.times(-1);\n                }\n            },\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n                if (this.toolBar) {\n                    height -= outerHeight(this.toolBar.element);\n                }\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, 'source', mapping, offset);\n                            this._updateCopiedConnection(copied, item, 'target', mapping, offset);\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n                    this._syncChanges();\n                    this._copyOffset += 1;\n                }\n            },\n            _updateCopiedConnection: function (connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function (item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + 'Point']().x + offset.x, sourceConnection[connectorName + 'Point']().y + offset.y));\n                }\n            },\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp, di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n            _containerOffset: function () {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += outerHeight(this.toolBar.element);\n                }\n                return containerOffset;\n            },\n            documentToView: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function (point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function (point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function (point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function (point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function (point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                } else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix), br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            setConnectionsDataSource: function (dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n            layout: function (options) {\n                this._layouting = true;\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = 'Tree';\n                } else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                case 'tree':\n                    l = new diagram.TreeLayout(this);\n                    break;\n                case 'layered':\n                    l = new diagram.LayeredLayout(this);\n                    break;\n                case 'forcedirected':\n                case 'force':\n                case 'spring':\n                case 'springembedder':\n                    l = new diagram.SpringLayout(this);\n                    break;\n                default:\n                    throw 'Layout algorithm \\'' + type + '\\' is not supported.';\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n            getShapeByModelId: function (id) {\n                var shape;\n                if (this._isEditable) {\n                    shape = this._dataMap[id];\n                } else {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).id === id;\n                    });\n                }\n                return shape;\n            },\n            getShapeByModelUid: function (uid) {\n                var shape;\n                if (this._isEditable) {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).uid === uid;\n                    });\n                } else {\n                    shape = this._dataMap[uid];\n                }\n                return shape;\n            },\n            getConnectionByModelId: function (id) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = Utils.first(this.connections, function (connection) {\n                        return (connection.dataItem || {}).id === id;\n                    });\n                }\n                return connection;\n            },\n            getConnectionByModelUid: function (uid) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = this._connectionsDataMap[uid];\n                }\n                return connection;\n            },\n            _extendLayoutOptions: function (options) {\n                if (options.layout) {\n                    options.layout = deepExtend({}, diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, {\n                        selected: selected,\n                        deselected: deselected\n                    });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this, pan = pos || diagram._pan;\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n            _finishPan: function () {\n                this.trigger(PAN, {\n                    total: this._pan,\n                    delta: Number.NaN\n                });\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function (canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0, conPos = toFront ? this.connections.length - 1 : 0, i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n                return result;\n            },\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n                this.mainLayer.remove(item.visual);\n            },\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector, sources = [], targets = [];\n                this.toolService._removeHover();\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n                Utils.remove(this.connections, connection);\n            },\n            _removeDataItems: function (items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n            _removeShapeConnections: function (shape) {\n                var connections = shape.connections();\n                var idx;\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n            _addDataItem: function (dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n            _addDataItemByUid: function (dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n            _addDataItems: function (items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) {\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n            _refreshSource: function (e) {\n                var that = this, node = e.node, action = e.action, items = e.items, options = that.options, idx, dataBound;\n                if (e.field) {\n                    for (idx = 0; idx < items.length; idx++) {\n                        if (this._dataMap[items[idx].uid]) {\n                            this._dataMap[items[idx].uid].redrawVisual();\n                        }\n                    }\n                    return;\n                }\n                if (action == 'remove') {\n                    this._removeDataItems(e.items, true);\n                } else {\n                    if ((!action || action === 'itemloaded') && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n                    if (!action && !node) {\n                        that.clear();\n                    }\n                    this._addDataItems(items, node);\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n                if (options.layout && (dataBound || action == 'remove' || action == 'add')) {\n                    that.layout(options.layout);\n                }\n                if (dataBound) {\n                    this.trigger('dataBound');\n                    this._bindingRoots = false;\n                }\n            },\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n            _createToolBar: function (preventClosing) {\n                var diagram = this.toolService.diagram;\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\n                                    'edit',\n                                    'rotateClockwise',\n                                    'rotateAnticlockwise'\n                                ];\n                            } else if (element instanceof Connection) {\n                                tools = ['edit'];\n                            }\n                            if (editable && editable.remove !== false) {\n                                tools.push('delete');\n                            }\n                        }\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true,\n                                popupZIndex: parseInt(diagram.element.closest('.k-window').css('zIndex'), 10) + 10\n                            });\n                            var popupWidth = outerWidth(this.singleToolBar._popup.element);\n                            var popupHeight = outerHeight(this.singleToolBar._popup.element);\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = new Point(shapeBounds.x, shapeBounds.y).minus(new Point((popupWidth - shapeBounds.width) / 2, popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n                                point = new Point(connectionBounds.x, connectionBounds.y).minus(new Point((popupWidth - connectionBounds.width - 20) / 2, popupHeight + padding));\n                            }\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(new Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = new Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                                if (preventClosing) {\n                                    this.singleToolBar._popup.one('close', preventDefault);\n                                }\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n            _toolBarClick: function (e) {\n                this.trigger('toolBarClick', e);\n                this._destroyToolBar();\n            },\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n            _dataSource: function () {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource.unbind('change', this._shapesRefreshHandler).unbind('requestStart', this._shapesRequestStartHandler).unbind('error', this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n                    this.dataSource = kendo.data.DataSource.create(ds).bind('change', this._shapesRefreshHandler).bind('requestStart', this._shapesRequestStartHandler).bind('error', this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n            _connectionDataSource: function () {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource.unbind('change', this._connectionsRefreshHandler).unbind('requestStart', this._connectionsRequestStartHandler).unbind('error', this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds).bind('change', this._connectionsRefreshHandler).bind('requestStart', this._connectionsRequestStartHandler).bind('error', this._connectionsErrorHandler);\n                }\n            },\n            _shapesRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingShapes = true;\n                }\n            },\n            _connectionsRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingConnections = true;\n                }\n            },\n            _error: function () {\n                this._loadingShapes = false;\n            },\n            _connectionsError: function () {\n                this._loadingConnections = false;\n            },\n            _refreshShapes: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === 'add') {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === 'sync') {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n            _shouldRefresh: function () {\n                return !this._suspended;\n            },\n            _suspendModelRefresh: function () {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n            _resumeModelRefresh: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n            refresh: function () {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _rebindShapesAndConnections: function () {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger('dataBound');\n            },\n            refreshConnections: function () {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _redrawConnections: function () {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n            _removeShapes: function (items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n            _syncShapes: function () {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function (inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n            _updateShapes: function (items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n            _addShapes: function (dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n            _refreshConnections: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === 'add') {\n                    this._addConnections(e.items);\n                } else if (e.action === 'sync') {\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n            _removeConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n            _updateConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n            _addConnections: function (connections, undoable) {\n                var length = connections.length;\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n            _addConnectionDataItem: function (dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n            _validateConnector: function (value) {\n                var connector;\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n                return connector;\n            },\n            _treeDataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (dataSource instanceof kendo.data.DataSource && !(dataSource instanceof kendo.data.HierarchicalDataSource)) {\n                    throw new Error('Incorrect DataSource type. If a single dataSource instance is set to the diagram then it should be a HierarchicalDataSource. You should set only the options instead of an instance or a HierarchicalDataSource instance or supply connectionsDataSource as well.');\n                }\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n                that.dataSource = HierarchicalDataSource.create(dataSource).bind(CHANGE, that._refreshHandler).bind(ERROR, that._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    } else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n            _updateAdorners: function () {\n                var adorners = this._adorners;\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n            _destroyToolBar: function () {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n            _destroyGlobalToolBar: function () {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n            exportDOMVisual: function () {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform().translate(-viewBox.x, -viewBox.y);\n                var viewRect = new geom.Rect([\n                    0,\n                    0\n                ], [\n                    viewBox.width,\n                    viewBox.height\n                ]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n                clipWrap.append(wrap);\n                wrap.children.push(root);\n                return clipWrap;\n            },\n            exportVisual: function () {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({ transform: scale });\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n                return wrap;\n            },\n            _syncChanges: function () {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n            _syncShapeChanges: function () {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n            _syncConnectionChanges: function () {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function () {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            return result;\n        }\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n            return result;\n        }\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function (diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n                this.bind(this.events, options);\n            },\n            events: ['click'],\n            createPopup: function () {\n                this.container = $('<div/>').append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n            appendTools: function () {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n            createToolBar: function () {\n                this.element = $('<div/>');\n                this._toolBar = this.element.kendoToolBar({\n                    click: proxy(this.click, this),\n                    resizable: false\n                }).getKendoToolBar();\n                this.element.css('border', 'none');\n            },\n            createTools: function () {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n            createTool: function (tool) {\n                if (!isPlainObject(tool)) {\n                    tool = { name: tool };\n                }\n                var toolName = tool.name + 'Tool';\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(deepExtend({}, tool, { attributes: this._setAttributes({ action: tool.name }) }));\n                }\n            },\n            showAt: function (point) {\n                var popupZIndex = parseInt(this.options.popupZIndex, 10);\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n                    if (popupZIndex) {\n                        this._popup.wrapper.css('zIndex', popupZIndex);\n                    }\n                }\n            },\n            hide: function () {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n            newGroup: function () {\n                return {\n                    type: 'buttonGroup',\n                    buttons: []\n                };\n            },\n            editTool: function () {\n                this._tools.push({\n                    icon: 'edit',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Edit',\n                    attributes: this._setAttributes({ action: 'edit' })\n                });\n            },\n            deleteTool: function () {\n                this._tools.push({\n                    icon: 'close',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Delete',\n                    attributes: this._setAttributes({ action: 'delete' })\n                });\n            },\n            rotateAnticlockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    icon: 'rotate-left',\n                    showText: 'overflow',\n                    text: 'RotateAnticlockwise',\n                    group: 'rotate',\n                    attributes: this._setAttributes({\n                        action: 'rotateAnticlockwise',\n                        step: options.step\n                    })\n                });\n            },\n            rotateClockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    icon: 'rotate-right',\n                    attributes: this._setAttributes({\n                        action: 'rotateClockwise',\n                        step: options.step\n                    }),\n                    showText: 'overflow',\n                    text: 'RotateClockwise',\n                    group: 'rotate'\n                });\n            },\n            createShapeTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    icon: 'shape',\n                    showText: 'overflow',\n                    text: 'CreateShape',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createShape' })\n                });\n            },\n            createConnectionTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    icon: 'connector',\n                    showText: 'overflow',\n                    text: 'CreateConnection',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createConnection' })\n                });\n            },\n            undoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    icon: 'undo',\n                    showText: 'overflow',\n                    text: 'Undo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'undo' })\n                });\n            },\n            redoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    icon: 'redo',\n                    showText: 'overflow',\n                    text: 'Redo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'redo' })\n                });\n            },\n            _appendGroup: function (name) {\n                var prop = '_' + name + 'Group';\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n            _setAttributes: function (attributes) {\n                var attr = {};\n                if (attributes.action) {\n                    attr[kendo.attr('action')] = attributes.action;\n                }\n                if (attributes.step) {\n                    attr[kendo.attr('step')] = attributes.step;\n                }\n                return attr;\n            },\n            _getAttributes: function (element) {\n                var attr = {};\n                var action = element.attr(kendo.attr('action'));\n                if (action) {\n                    attr.action = action;\n                }\n                var step = element.attr(kendo.attr('step'));\n                if (step) {\n                    attr.step = step;\n                }\n                return attr;\n            },\n            click: function (e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n                if (action && this[action]) {\n                    this[action](attributes);\n                }\n                this.trigger('click', this.eventData(action, e.target));\n            },\n            eventData: function (action, target) {\n                var elements = this.selectedElements(), length = elements.length, shapes = [], connections = [], element;\n                for (var idx = 0; idx < length; idx++) {\n                    element = elements[idx];\n                    if (element instanceof Shape) {\n                        shapes.push(element);\n                    } else {\n                        connections.push(element);\n                    }\n                }\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action,\n                    target: target\n                };\n            },\n            'delete': function () {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n            edit: function () {\n                var selectedElemens = this.selectedElements();\n                if (selectedElemens.length === 1) {\n                    this.diagram.edit(selectedElemens[0]);\n                }\n            },\n            rotateClockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n            rotateAnticlockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n            _rotate: function (angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n            selectedElements: function () {\n                return this.diagram.select();\n            },\n            createShape: function () {\n                this.diagram.createShape();\n            },\n            createConnection: function () {\n                this.diagram.createConnection();\n            },\n            undo: function () {\n                this.diagram.undo();\n            },\n            redo: function () {\n                this.diagram.redo();\n            },\n            destroy: function () {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n            options: { editors: {} },\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n            _isEditable: function (field) {\n                return this.model.editable && this.model.editable(field);\n            },\n            _getFields: function () {\n                var fields = [];\n                var modelFields = this.model.fields;\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n                this.open();\n            },\n            events: [\n                'update',\n                'cancel'\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid);\n                var formContent = '';\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n                formContent += this._renderButtons();\n                this.wrapper.append($('<div class=\"k-edit-form-container\"/>').append(formContent));\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        e.sender.element.trigger('focus');\n                        that._cancelClick(e);\n                    }\n                });\n                this._attachButtonEvents();\n            },\n            _renderTemplate: function () {\n                var template = this.options.template;\n                if (typeof template === 'string') {\n                    template = kendo.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                return template;\n            },\n            _renderFields: function () {\n                var form = '';\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || '') + '</label></div>';\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr('container-for') + '=\"' + field.field + '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n                return form;\n            },\n            _renderButtons: function () {\n                var form = '<div class=\"k-edit-buttons\">';\n                form += this._createButton('update');\n                form += this._createButton('cancel');\n                form += '</div>';\n                return form;\n            },\n            _createButton: function (name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n            _attachButtonEvents: function () {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n            },\n            _updateClick: function (e) {\n                e.preventDefault();\n                this.trigger('update');\n            },\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger('cancel');\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? 'text' : model.idField;\n                $('<input name=\\'' + options.field + '\\' />').appendTo(container).kendoDropDownList({\n                    dataValueField: model.idField,\n                    dataTextField: textField,\n                    dataSource: this.dataSource.data().toJSON(),\n                    optionLabel: ' ',\n                    valuePrimitive: true\n                });\n            }\n        }\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function (callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n            activate: function () {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function (items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n            forEach: function (callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n            getByUid: function (uid) {\n                return this.items[uid];\n            },\n            remove: function (item) {\n                delete this.items[item.uid];\n            }\n        };\n        var QuadRoot = Class.extend({\n            init: function () {\n                this.shapes = [];\n            },\n            _add: function (shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n            insert: function (shape, bounds) {\n                this._add(shape, bounds);\n            },\n            remove: function (shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n            hitTestRect: function (rect, exclude) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect) && !dataviz.inArray(shapes[i].shape, exclude)) {\n                        return true;\n                    }\n                }\n            },\n            _testRect: function (shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n        var QuadNode = QuadRoot.extend({\n            init: function (rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n            inBounds: function (rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n            overlapsBounds: function (rect) {\n                return this.rect.overlaps(rect);\n            },\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n                return inserted;\n            },\n            _initChildren: function () {\n                var rect = this.rect, children = this.children, shapes = this.shapes, center = rect.center(), halfWidth = rect.width / 2, halfHeight = rect.height / 2, childIdx, shapeIdx;\n                children.push(new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight)));\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hitTestRect: function (rect, exclude) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect, exclude)) {\n                        hit = true;\n                    } else {\n                        for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect, exclude)) {\n                                hit = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return hit;\n            }\n        });\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n            init: function (diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n            initRoots: function () {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n            clear: function () {\n                this.initRoots();\n            },\n            _boundsChange: function (e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n            insert: function (shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(new Rect(x * rootSize, y * rootSize, rootSize, rootSize));\n                    }\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n            remove: function (shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n            inRoot: function (sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n            getSectors: function (rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [\n                    [],\n                    []\n                ];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n            hitTestRect: function (rect, exclude) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n                if (this.root.hitTestRect(rect, exclude)) {\n                    return true;\n                }\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect, exclude)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n            return new kendo.data.ObservableObject(model);\n        }\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        dataviz.ui.plugin(Diagram);\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.diagram', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.userevents',\n        'kendo.mobile.scroller',\n        'kendo.drawing',\n        'dataviz/diagram/utils',\n        'dataviz/diagram/math',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout',\n        'dataviz/diagram/dom'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.diagram',\n        name: 'Diagram',\n        category: 'dataviz',\n        description: 'The Kendo DataViz Diagram ',\n        depends: [\n            'data',\n            'userevents',\n            'mobile.scroller',\n            'draganddrop',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes',\n            'toolbar'\n        ],\n        features: [\n            {\n                id: 'dataviz.diagram-pdf-export',\n                name: 'PDF export',\n                description: 'Export Diagram as PDF',\n                depends: ['pdf']\n            },\n            {\n                id: 'dataviz.diagram-editing',\n                name: 'Editing',\n                description: 'Support for model editing',\n                depends: [\n                    'editable',\n                    'window',\n                    'dropdownlist'\n                ]\n            }\n        ]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}