{"version":3,"sources":["kendo.tilelayout.js"],"names":["f","define","$","containsOrEqualTo","parent","child","contains","e","kendo","window","ui","Widget","Draggable","keys","selector","selectorFromClasses","RESIZE","REORDER","NS","DOWNCURSOR","RIGHTCURSOR","DIAGONALCURSOR","RTLDIAGONALCURSOR","GRABCURSOR","GRABBINGCURSOR","MINIMALSPAN","CURSORCLASSES","tileLayoutStyles","wrapper","item","itemHeader","itemHeaderTitle","itemBody","reorderHint","resizeHint","TileLayout","extend","init","element","options","that","this","fn","call","cssNumber","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","addClass","styles","_setWrapperStyles","_initContainers","_resizable","_navigatable","_reorderable","events","name","columns","gap","rows","containers","resizable","reorderable","navigatable","columnsWidth","rowsHeight","height","width","destroy","_draggableInstance","find","each","data","resizeHandle","off","remove","setOptions","deepExtend","empty","getOptions","result","items","id","container","header","headerSettings","body","containerSettings","headerContent","i","containerElements","children","hasElements","length","itemsMap","guid","current","attr","_addContainer","template","text","append","appendTo","bodyTemplate","Error","index","order","_setContainerCoordinates","push","css","grid-template-columns","format","grid-auto-rows","column-gap","padding","row-gap","settings","grid-column-end","colSpan","grid-row-end","rowSpan","_updateContainers","_createResizeHandle","side","down","_isresizing","_positionResizeHandle","cursorClass","leftBorderWidth","parseFloat","bottomBorderWidth","containerHeight","containerWidth","top","left","support","isRtl","removeClass","show","_createResizeHint","hint","insertAfter","_removeResizeHint","_positionHint","_removeAbsoluteStyles","_positionAbsolutely","position","outerWidth","outerHeight","on","proxy","_keyDown","target","canHandle","is","ctrlKey","keyCode","LEFT","_resizeItem","RIGHT","UP","DOWN","shiftKey","_reorderItem","preventDefault","dir","delta","newSpan","maxSpan","parseInt","replace","split","newOrder","oldOrder","maxOrder","_updateDOM","trigger","_sortContainers","indexAttr","sort","a","b","indexA","indexB","undefined","fractionWidth","fractionHeight","currentContainer","rowsCount","lastXLocation","lastYLocation","initialWidth","initialHeight","startColSpan","startRowSpan","itemsMaxSpace","rectPosition","getBoundingClientRect","rightPosition","Math","abs","right","clientX","downPosition","bottom","clientY","Resizable","handle","start","currentTarget","_calculateFractionWidth","_calculateRightEndSide","x","location","scrollHeight","y","resize","overflowsLayout","isBeyondMinimum","hintColumns","hintRows","mouseDeltaX","mouseDeltaY","deltaFromStart","resizeRowsCount","resizeColumnsCount","clientRect","scrollX","floor","max","scrollY","resizeend","first","totalWidth","columnGap","_createDropHint","dropHint","columnEnd","rowEnd","direction","_insertDropHint","insertBefore","_removeDropHint","originalElement","itemSelector","headerSelector","group","filter","autoScroll","ignore","closest","clone","dragstart","drag","dropContainer","containerBoundaries","pixelsToLeftBorder","pixelsToRightBorder","futureContainer","elementUnderCursor","sender","draggedItem","hide","hasClass","next","prev","dragend","itemId","end","min","newIndex","oldIndex","kendoDropTarget","dragenter","dropContainerBoundaries","dropTarget","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.tilelayout.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.tilelayout', [\n        'kendo.core',\n        'kendo.draganddrop',\n        'kendo.resizable'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'tilelayout',\n        name: 'TileLayout',\n        category: 'web',\n        depends: ['core'],\n        features: [\n            {\n                id: 'tilelayout-resizable',\n                name: 'Resizable',\n                description: 'Support for resizing',\n                depends: ['resizable']\n            },\n            {\n                id: 'tilelayout-reorderable',\n                name: 'Reorderable',\n                description: 'Support for reordering',\n                depends: ['draganddrop']\n            }\n        ]\n    };\n    (function ($) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, Draggable = ui.Draggable, keys = kendo.keys, selector = kendo.selectorFromClasses, RESIZE = 'resize', REORDER = 'reorder', NS = '.kendoTileLayout', DOWNCURSOR = 'k-cursor-ns-resize', RIGHTCURSOR = 'k-cursor-ew-resize', DIAGONALCURSOR = 'k-cursor-nwse-resize', RTLDIAGONALCURSOR = 'k-cursor-nesw-resize', GRABCURSOR = 'k-cursor-grab', GRABBINGCURSOR = 'k-cursor-grabbing', MINIMALSPAN = 1, CURSORCLASSES = 'k-cursor-nesw-resize k-cursor-nwse-resize k-cursor-ew-resize k-cursor-ns-resize';\n        var tileLayoutStyles = {\n            wrapper: 'k-widget k-tilelayout',\n            item: 'k-tilelayout-item k-card',\n            itemHeader: 'k-tilelayout-item-header k-card-header',\n            itemHeaderTitle: 'k-card-title',\n            itemBody: 'k-tilelayout-item-body k-card-body',\n            reorderHint: 'k-layout-item-hint k-layout-item-hint-reorder',\n            resizeHint: 'k-layout-item-hint k-layout-item-hint-resize'\n        };\n        var TileLayout = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                $.cssNumber.gridColumnStart = true;\n                $.cssNumber.gridColumnEnd = true;\n                $.cssNumber.gridRowStart = true;\n                $.cssNumber.gridRowEnd = true;\n                that.element = $(element).addClass(TileLayout.styles.wrapper);\n                that._setWrapperStyles();\n                that._initContainers();\n                that._resizable();\n                that._navigatable();\n                that._reorderable();\n            },\n            events: [\n                RESIZE,\n                REORDER\n            ],\n            options: {\n                name: 'TileLayout',\n                columns: null,\n                gap: {\n                    columns: 16,\n                    rows: 16\n                },\n                containers: [],\n                resizable: false,\n                reorderable: false,\n                navigatable: false,\n                columnsWidth: '1fr',\n                rowsHeight: '1fr',\n                height: '',\n                width: ''\n            },\n            destroy: function () {\n                Widget.fn.destroy.call(this);\n                if (this._draggableInstance) {\n                    this.element.find('.k-tilelayout-item').each(function () {\n                        var item = $(this);\n                        if (item.data('kendoDropTarget')) {\n                            item.data('kendoDropTarget').destroy();\n                        }\n                    });\n                    this._draggableInstance.destroy();\n                    this._draggableInstance = null;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n                if (this.resizeHandle) {\n                    this.resizeHandle.off(NS).remove();\n                    this.resizeHandle = null;\n                }\n                this.element.off(NS);\n            },\n            setOptions: function (options) {\n                this.destroy();\n                kendo.deepExtend(this.options, options);\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n            getOptions: function () {\n                var result = $.extend(true, {}, this.options);\n                result.containers = kendo.deepExtend([], this.items);\n                return result;\n            },\n            _initContainers: function () {\n                var that = this;\n                var containers = that.options.containers;\n                var containerElements = that.element.children();\n                var hasElements = !!containerElements.length;\n                var id;\n                var container;\n                var header;\n                var headerSettings;\n                var body;\n                var containerSettings;\n                var headerContent;\n                that.items = [];\n                that.itemsMap = {};\n                if (hasElements) {\n                    containerElements.each(function (i, element) {\n                        id = kendo.guid();\n                        var current = $(element).addClass(TileLayout.styles.item).attr('id', id);\n                        that._addContainer(current, containers[i], i, id);\n                    });\n                } else {\n                    for (var i = 0; i < containers.length; i++) {\n                        id = kendo.guid();\n                        containerSettings = containers[i];\n                        container = $('<div></div>').addClass(TileLayout.styles.item).attr('id', id);\n                        headerSettings = containerSettings.header;\n                        if (headerSettings && (headerSettings.template || headerSettings.text)) {\n                            header = $('<div></div>').addClass(TileLayout.styles.itemHeader);\n                            if (that.options.reorderable) {\n                                header.addClass(GRABCURSOR);\n                            }\n                            headerContent = headerSettings.text ? '<div class=\\'' + TileLayout.styles.itemHeaderTitle + '\\'>' + headerSettings.text + '</div>' : null;\n                            header.append(headerContent || kendo.template(headerSettings.template)({}));\n                            header.appendTo(container);\n                        }\n                        body = $('<div></div>').addClass(TileLayout.styles.itemBody);\n                        if (!containerSettings.bodyTemplate) {\n                            throw new Error('Having a bodyTemplate for the container is mandatory');\n                        }\n                        body.append(kendo.template(containerSettings.bodyTemplate)({}));\n                        body.appendTo(container);\n                        container.appendTo(that.element);\n                        that._addContainer(container, containerSettings, i, id);\n                    }\n                }\n            },\n            _addContainer: function (element, item, index, id) {\n                var that = this;\n                item.order = typeof item.order == 'number' ? item.order : index;\n                element.attr(kendo.attr('index'), item.order);\n                item.id = id;\n                that._setContainerCoordinates(element, item);\n                that.itemsMap[id] = item;\n                that.items.push(that.itemsMap[id]);\n            },\n            _setWrapperStyles: function () {\n                var that = this;\n                var options = that.options;\n                that.element.css({\n                    'grid-template-columns': kendo.format('repeat({0}, minmax(0, {1}))', options.columns, typeof options.columnsWidth === 'string' ? options.columnsWidth : options.columnsWidth + 'px'),\n                    'grid-auto-rows': kendo.format('minmax(0, {0})', typeof options.rowsHeight === 'string' ? options.rowsHeight : options.rowsHeight + 'px'),\n                    'column-gap': options.gap.columns,\n                    'width': typeof options.width === 'string' ? options.width : options.width + 'px',\n                    'height': typeof options.height === 'string' ? options.height : options.height + 'px',\n                    'padding': options.gap.rows + 'px ' + options.gap.columns + 'px ',\n                    'row-gap': options.gap.rows\n                });\n            },\n            _setContainerCoordinates: function (element, settings) {\n                if (!settings) {\n                    return;\n                }\n                element.css({\n                    'order': settings.order,\n                    'grid-column-end': kendo.format('span {0}', settings.colSpan),\n                    'grid-row-end': kendo.format('span {0}', settings.rowSpan)\n                }).attr(kendo.attr('index'), settings.order);\n            },\n            _updateContainers: function () {\n                var that = this;\n                for (var i = 0; i < that.items.length; i++) {\n                    that._setContainerCoordinates(that.element.find('#' + that.items[i].id), that.items[i]);\n                }\n            },\n            _createResizeHandle: function (container, side, down) {\n                var that = this;\n                if (that._isresizing) {\n                    return;\n                }\n                if (that.resizeHandle && that.resizeHandle.data('div')[0] !== container[0]) {\n                    that.resizeHandle.off(NS).remove();\n                    that.resizeHandle = null;\n                }\n                if (!that.resizeHandle) {\n                    that.resizeHandle = $('<div class=\"k-resize-handle\"></div>');\n                    that.resizeHandle.appendTo(container);\n                }\n                that._positionResizeHandle(container, side, down);\n            },\n            _positionResizeHandle: function (container, side, down) {\n                var that = this;\n                var leftBorderWidth = parseFloat(container.css('borderRightWidth'));\n                var bottomBorderWidth = parseFloat(container.css('borderBottomWidth'));\n                var containerHeight = container.height();\n                var containerWidth = container.width();\n                var top = down ? containerHeight - 6.5 - bottomBorderWidth : 0;\n                var left = side ? containerWidth - 4.5 - leftBorderWidth : 0;\n                var width = 9;\n                var height = 9;\n                var cursorClass;\n                if (side && down) {\n                    height = width = 25;\n                    top -= 12.5;\n                    left -= 12.5;\n                    cursorClass = kendo.support.isRtl(that.element) ? RTLDIAGONALCURSOR : DIAGONALCURSOR;\n                } else if (side && !down) {\n                    height = containerHeight;\n                    cursorClass = RIGHTCURSOR;\n                } else if (!side && down) {\n                    width = containerWidth;\n                    cursorClass = DOWNCURSOR;\n                }\n                that.resizeHandle.css({\n                    top: top,\n                    left: left,\n                    height: height,\n                    width: width\n                }).attr('side', side).attr('down', down).removeClass(CURSORCLASSES).addClass(cursorClass).data('div', container).show();\n            },\n            _createResizeHint: function (container) {\n                var that = this;\n                if (that.hint) {\n                    return;\n                }\n                var colSpan = container.css('grid-column-end');\n                var rowSpan = container.css('grid-row-end');\n                var order = container.css('order');\n                that.hint = $('<div class=\\'' + TileLayout.styles.resizeHint + '\\'></div>').css({\n                    'order': order,\n                    'grid-column-end': colSpan,\n                    'grid-row-end': rowSpan\n                }).insertAfter(container);\n            },\n            _removeResizeHint: function () {\n                if (this._isresizing) {\n                    return;\n                }\n                if (this.hint) {\n                    this.hint.remove();\n                    this.hint = null;\n                }\n            },\n            _positionHint: function (colSpan, rowSpan) {\n                var that = this;\n                if (colSpan) {\n                    that.hint.css('grid-column-end', kendo.format('span {0}', colSpan));\n                }\n                if (rowSpan) {\n                    that.hint.css('grid-row-end', kendo.format('span {0}', rowSpan));\n                }\n            },\n            _removeAbsoluteStyles: function (container) {\n                container.css('position', '');\n                container.css('left', '');\n                container.css('top', '');\n                container.css('width', '');\n                container.css('height', '');\n                container.css('z-index', '');\n            },\n            _positionAbsolutely: function (container) {\n                if (container.css('position') == 'absolute') {\n                    return;\n                }\n                var position = container.position();\n                var width = container.outerWidth();\n                var height = container.outerHeight();\n                container.css('position', 'absolute');\n                container.css('left', position.left);\n                container.css('top', position.top);\n                container.css('width', width);\n                container.css('height', height);\n                container.css('z-index', 2);\n            },\n            _navigatable: function () {\n                if (!this.options.navigatable) {\n                    return;\n                }\n                var that = this;\n                that.element.children().attr('tabindex', 0);\n                that.element.on('keydown' + NS, that, $.proxy(that._keyDown, that));\n            },\n            _keyDown: function (e) {\n                var target = $(e.target);\n                var canHandle = false;\n                if (!target.is('.k-tilelayout-item.k-card')) {\n                    return;\n                }\n                if (e.ctrlKey && e.keyCode == keys.LEFT) {\n                    canHandle = true;\n                    this._resizeItem(target, 'horizontal', -1);\n                }\n                if (e.ctrlKey && e.keyCode == keys.RIGHT) {\n                    canHandle = true;\n                    this._resizeItem(target, 'horizontal', 1);\n                }\n                if (e.ctrlKey && e.keyCode == keys.UP) {\n                    canHandle = true;\n                    this._resizeItem(target, 'vertical', -1);\n                }\n                if (e.ctrlKey && e.keyCode == keys.DOWN) {\n                    canHandle = true;\n                    this._resizeItem(target, 'vertical', 1);\n                }\n                if (e.shiftKey && e.keyCode == keys.LEFT) {\n                    canHandle = true;\n                    this._reorderItem(target, -1);\n                }\n                if (e.shiftKey && e.keyCode == keys.RIGHT) {\n                    canHandle = true;\n                    this._reorderItem(target, 1);\n                }\n                if (canHandle) {\n                    e.preventDefault();\n                }\n            },\n            _resizeItem: function (item, dir, delta) {\n                var that = this;\n                var id = item.attr('id');\n                var newSpan;\n                var maxSpan;\n                if (!that.options.resizable) {\n                    return;\n                }\n                if (dir === 'horizontal') {\n                    newSpan = parseInt(item.css('grid-column-end').replace('span', ''), 10) + delta;\n                    maxSpan = that.element.css('grid-template-columns').split(' ').length;\n                    if (maxSpan >= newSpan && newSpan > 0) {\n                        that.itemsMap[id].colSpan = newSpan;\n                        item.css({ 'grid-column-end': kendo.format('span {0}', newSpan) });\n                    }\n                } else {\n                    newSpan = parseInt(item.css('grid-row-end').replace('span', ''), 10) + delta;\n                    maxSpan = that.element.css('grid-template-rows').split(' ').length;\n                    if (maxSpan >= newSpan && newSpan > 0) {\n                        that.itemsMap[id].rowSpan = newSpan;\n                        item.css({ 'grid-row-end': kendo.format('span {0}', newSpan) });\n                    }\n                }\n            },\n            _reorderItem: function (item, newOrder) {\n                if (!this.options.reorderable) {\n                    return;\n                }\n                var oldOrder = parseInt(item.css('order'), 10);\n                var maxOrder = this.element.children().length;\n                newOrder = oldOrder + newOrder;\n                if (newOrder >= 0 && newOrder < maxOrder) {\n                    var target = this.element.find('> [' + kendo.attr('index') + '=\\'' + newOrder + '\\']');\n                    this.itemsMap[item.attr('id')].order = newOrder;\n                    this.itemsMap[target.attr('id')].order = oldOrder;\n                    this._updateContainers();\n                    this._updateDOM();\n                    item.trigger('focus');\n                }\n            },\n            _sortContainers: function (containers) {\n                var indexAttr = kendo.attr('index');\n                return containers.sort(function (a, b) {\n                    a = $(a);\n                    b = $(b);\n                    var indexA = a.attr(indexAttr);\n                    var indexB = b.attr(indexAttr);\n                    if (indexA === undefined) {\n                        indexA = $(a).index();\n                    }\n                    if (indexB === undefined) {\n                        indexB = $(b).index();\n                    }\n                    indexA = parseInt(indexA, 10);\n                    indexB = parseInt(indexB, 10);\n                    return indexA > indexB ? 1 : indexA < indexB ? -1 : 0;\n                });\n            },\n            _updateDOM: function () {\n                var that = this;\n                var containers = that.element.children(':visible');\n                containers = that._sortContainers(containers);\n                containers.each(function () {\n                    $(this).appendTo(that.element);\n                });\n            },\n            _resizable: function () {\n                var that = this;\n                var side;\n                var down;\n                var id;\n                var fractionWidth;\n                var fractionHeight;\n                var currentContainer;\n                var lastXLocation = 0;\n                var lastYLocation = 0;\n                var initialWidth = 0;\n                var initialHeight = 0;\n                var startColSpan = 0;\n                var startRowSpan = 0;\n                var itemsMaxSpace = 0;\n                var rowsCount;\n                if (that.options.resizable) {\n                    that.element.on('mousemove' + NS, selector(TileLayout.styles.item), function (e) {\n                        var rightPosition;\n                        var downPosition;\n                        var container = $(this);\n                        var rectPosition = container[0].getBoundingClientRect();\n                        rightPosition = Math.abs(rectPosition.right - e.clientX) < 16;\n                        downPosition = Math.abs(rectPosition.bottom - e.clientY) < 16;\n                        if (rightPosition && downPosition) {\n                            that._createResizeHandle(container, true, true);\n                        } else if (rightPosition) {\n                            that._createResizeHandle(container, true, false);\n                        } else if (downPosition) {\n                            that._createResizeHandle(container, false, true);\n                        }\n                    });\n                    that.resizable = new ui.Resizable(that.element, {\n                        handle: 'div.k-tilelayout-item > .k-resize-handle',\n                        start: function (e) {\n                            var resizeHandle = $(e.currentTarget);\n                            currentContainer = resizeHandle.data('div');\n                            id = currentContainer.attr('id');\n                            side = resizeHandle.attr('side');\n                            down = resizeHandle.attr('down');\n                            rowsCount = that.element.css('grid-template-rows').split(' ').length;\n                            if (side) {\n                                fractionWidth = that._calculateFractionWidth();\n                                itemsMaxSpace = that._calculateRightEndSide(fractionWidth);\n                                lastXLocation = e.x.location;\n                                initialWidth = currentContainer.width();\n                                startColSpan = parseInt(currentContainer.css('grid-column-end').replace('span', ''), 10);\n                            }\n                            if (down) {\n                                fractionHeight = (that.element[0].scrollHeight - (rowsCount + 1) * that.options.gap.rows) / rowsCount;\n                                lastYLocation = e.y.location;\n                                initialHeight = currentContainer.height();\n                                startRowSpan = parseInt(currentContainer.css('grid-row-end').replace('span', ''), 10);\n                            }\n                            that._isresizing = true;\n                        },\n                        resize: function (e) {\n                            var hintColumns = 0;\n                            var hintRows = 0;\n                            var mouseDeltaX = 0;\n                            var mouseDeltaY = 0;\n                            var overflowsLayout;\n                            var isBeyondMinimum;\n                            var deltaFromStart = 0;\n                            var resizeRowsCount = 0;\n                            var resizeColumnsCount = 0;\n                            var clientRect = that.element[0].getBoundingClientRect();\n                            that._positionAbsolutely(currentContainer);\n                            that._createResizeHint(currentContainer);\n                            if (side == 'true') {\n                                mouseDeltaX = e.x.location - lastXLocation;\n                                overflowsLayout = clientRect.left + itemsMaxSpace - window.scrollX - e.x.location < that.options.gap.columns;\n                                isBeyondMinimum = initialWidth + mouseDeltaX < fractionWidth;\n                                if (!overflowsLayout && !isBeyondMinimum) {\n                                    resizeColumnsCount = mouseDeltaX / (fractionWidth + that.options.gap.columns);\n                                    deltaFromStart = mouseDeltaX - Math.floor(resizeColumnsCount) * (fractionWidth + that.options.gap.columns);\n                                    hintColumns = startColSpan + Math.floor(resizeColumnsCount) + (deltaFromStart >= fractionWidth / 2 ? 1 : 0);\n                                    that.itemsMap[id].colSpan = Math.max(hintColumns, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaX = 0;\n                                }\n                            }\n                            if (down == 'true') {\n                                mouseDeltaY = e.y.location - lastYLocation;\n                                overflowsLayout = clientRect.bottom + window.scrollY - e.y.location < that.options.gap.rows;\n                                isBeyondMinimum = initialHeight + mouseDeltaY <= fractionHeight;\n                                if (!overflowsLayout && !isBeyondMinimum) {\n                                    resizeRowsCount = mouseDeltaY / (fractionHeight + that.options.gap.rows);\n                                    deltaFromStart = mouseDeltaY - Math.floor(resizeRowsCount) * (fractionHeight + that.options.gap.rows);\n                                    hintRows = startRowSpan + Math.floor(resizeRowsCount) + (deltaFromStart >= fractionHeight / 2 ? 1 : 0);\n                                    that.itemsMap[id].rowSpan = Math.max(hintRows, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaY = 0;\n                                }\n                            }\n                            that._positionHint(hintColumns, hintRows);\n                            that._positionResizeHandle(currentContainer, side == 'true', down == 'true');\n                            if (mouseDeltaY) {\n                                currentContainer.css('height', initialHeight + mouseDeltaY);\n                            }\n                            if (mouseDeltaX) {\n                                currentContainer.css('width', initialWidth + mouseDeltaX);\n                            }\n                        },\n                        resizeend: function () {\n                            that._isresizing = false;\n                            that._setContainerCoordinates(currentContainer, that.itemsMap[id]);\n                            that._removeAbsoluteStyles(currentContainer);\n                            that._removeResizeHint();\n                            that.trigger(RESIZE, { container: currentContainer });\n                        }\n                    });\n                }\n            },\n            _calculateFractionWidth: function () {\n                var that = this;\n                var container = that.element.children().first();\n                var colSpan = that.itemsMap[container.attr('id')].colSpan;\n                var totalWidth = container.outerWidth();\n                return (totalWidth - (colSpan - 1) * that.options.gap.columns) / colSpan;\n            },\n            _calculateRightEndSide: function (fractionWidth) {\n                var that = this;\n                var columns = that.options.columns;\n                var columnGap = that.options.gap.columns;\n                return columns * (fractionWidth + columnGap) + columnGap;\n            },\n            _createDropHint: function (settings) {\n                this.dropHint = $('<div class=\\'' + TileLayout.styles.reorderHint + '\\'></div>').css({\n                    'order': settings.order,\n                    'grid-column-end': settings.columnEnd,\n                    'grid-row-end': settings.rowEnd\n                }).attr(kendo.attr('index'), settings.order).attr('direction', settings.direction);\n            },\n            _insertDropHint: function (container, direction) {\n                if (direction == 'right') {\n                    this.dropHint.insertAfter(container);\n                } else {\n                    this.dropHint.insertBefore(container);\n                }\n            },\n            _removeDropHint: function () {\n                if (this.dropHint) {\n                    this.dropHint.remove();\n                    this.dropHint = null;\n                }\n            },\n            _reorderable: function () {\n                if (!this.options.reorderable) {\n                    return;\n                }\n                var that = this;\n                var element = that.element;\n                var originalElement;\n                var itemSelector = selector(TileLayout.styles.item);\n                var headerSelector = selector(TileLayout.styles.itemHeader);\n                var group = kendo.guid();\n                this._draggableInstance = new Draggable(this.element, {\n                    filter: headerSelector,\n                    autoScroll: true,\n                    ignore: ':input',\n                    group: group,\n                    hint: function (target) {\n                        var item = target.closest(itemSelector);\n                        var width = item.width();\n                        var height = item.height();\n                        var clone = item.clone();\n                        clone.find(headerSelector).removeClass(GRABCURSOR).addClass(GRABBINGCURSOR);\n                        return clone.width(width).height(height);\n                    },\n                    dragstart: function (e) {\n                        originalElement = $(e.currentTarget).closest(itemSelector);\n                    },\n                    drag: function (e) {\n                        var elementUnderCursor = kendo.elementUnderCursor(e);\n                        var hint = e.sender.hint;\n                        var dropContainer;\n                        var containerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var direction;\n                        var draggedItem = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var newOrder;\n                        if (containsOrEqualTo(hint[0], elementUnderCursor)) {\n                            hint.hide();\n                            elementUnderCursor = kendo.elementUnderCursor(e);\n                            if (!containsOrEqualTo(originalElement[0], elementUnderCursor)) {\n                                if (that.dropHint && that.dropHint[0] == elementUnderCursor[0]) {\n                                    hint.show();\n                                    return;\n                                }\n                                dropContainer = $(elementUnderCursor);\n                                dropContainer = dropContainer.hasClass(TileLayout.styles.item) ? dropContainer : dropContainer.closest(itemSelector);\n                                if (dropContainer.hasClass(TileLayout.styles.item)) {\n                                    containerBoundaries = dropContainer[0].getBoundingClientRect();\n                                    pixelsToLeftBorder = e.clientX - containerBoundaries.left;\n                                    pixelsToRightBorder = containerBoundaries.right - e.clientX;\n                                    direction = pixelsToLeftBorder > pixelsToRightBorder ? 'right' : 'left';\n                                    newOrder = dropContainer.css('order');\n                                    if (that.dropHint && that.dropHint.attr('direction') !== direction) {\n                                        var clone = that.dropHint.clone();\n                                        clone.css('order', newOrder);\n                                        that.dropHint.remove();\n                                        that.dropHint = clone;\n                                        that._insertDropHint(dropContainer, direction);\n                                        that.dropHint.attr('direction', direction).attr(kendo.attr('index'), newOrder);\n                                    } else if (!that.dropHint) {\n                                        var futureContainer = direction == 'right' ? dropContainer.next() : dropContainer.prev();\n                                        if (futureContainer[0] != originalElement[0]) {\n                                            that._createDropHint({\n                                                order: newOrder,\n                                                columnEnd: draggedItem.css('grid-column-end'),\n                                                rowEnd: draggedItem.css('grid-row-end'),\n                                                direction: direction\n                                            });\n                                            originalElement.hide();\n                                            that._insertDropHint(dropContainer, direction);\n                                        }\n                                    }\n                                }\n                            }\n                            hint.show();\n                        }\n                    },\n                    dragend: function (e) {\n                        if (!that.dropHint) {\n                            e.sender.hint.remove();\n                            that._removeDropHint();\n                            return;\n                        }\n                        var newOrder = parseInt(that.dropHint.css('order'), 10);\n                        var container = e.currentTarget.closest(itemSelector);\n                        var items = that.element.find(itemSelector);\n                        var oldOrder = parseInt(container.css('order'), 10);\n                        var itemId = container.attr('id');\n                        var containers = that.element.children(':visible');\n                        var start;\n                        var end;\n                        var item;\n                        var direction;\n                        containers = that._sortContainers(containers);\n                        newOrder = containers.index(that.dropHint[0]);\n                        end = Math.max(newOrder, oldOrder);\n                        start = Math.min(newOrder, oldOrder);\n                        that.itemsMap[itemId].order = newOrder;\n                        direction = newOrder > oldOrder ? 'right' : 'left';\n                        if (direction == 'left') {\n                            end--;\n                        } else {\n                            start++;\n                        }\n                        for (var i = start; i <= end; i++) {\n                            item = items.filter('[' + kendo.attr('index') + '=\\'' + i + '\\']');\n                            that.itemsMap[item.attr('id')].order += direction == 'left' ? 1 : -1;\n                        }\n                        container.show();\n                        that._updateContainers();\n                        e.sender.hint.remove();\n                        that._removeDropHint();\n                        if (that.options.navigatable) {\n                            that._updateDOM();\n                        }\n                        that.trigger(REORDER, {\n                            newIndex: newOrder,\n                            oldIndex: oldOrder,\n                            container: container\n                        });\n                    }\n                });\n                element.find(itemSelector).kendoDropTarget({\n                    group: group,\n                    dragenter: function (e) {\n                        if (that._isresizing) {\n                            return;\n                        }\n                        var dropContainer = $(e.dropTarget);\n                        var target = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var dropContainerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var futureContainer;\n                        var direction;\n                        if (originalElement[0] != dropContainer[0]) {\n                            dropContainerBoundaries = dropContainer[0].getBoundingClientRect();\n                            pixelsToLeftBorder = e.clientX - dropContainerBoundaries.left;\n                            pixelsToRightBorder = dropContainerBoundaries.right - e.clientX;\n                            direction = pixelsToLeftBorder > pixelsToRightBorder ? 'right' : 'left';\n                            futureContainer = direction == 'right' ? dropContainer.next() : dropContainer.prev();\n                            if (futureContainer[0] == originalElement[0]) {\n                                return;\n                            }\n                            that._removeDropHint();\n                            originalElement.hide();\n                            that._createDropHint({\n                                order: dropContainer.css('order'),\n                                columnEnd: target.css('grid-column-end'),\n                                rowEnd: target.css('grid-row-end'),\n                                direction: direction\n                            });\n                            originalElement.hide();\n                            that._insertDropHint(dropContainer, direction);\n                        }\n                    }\n                });\n            }\n        });\n        function containsOrEqualTo(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n        ui.plugin(TileLayout);\n        $.extend(true, TileLayout, { styles: tileLayoutStyles });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}