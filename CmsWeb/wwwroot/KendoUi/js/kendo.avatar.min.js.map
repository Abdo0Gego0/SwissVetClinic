{"version":3,"sources":["kendo.avatar.js"],"names":["f","define","$","undefined","kendo","window","Widget","ui","DASH","AVATAR_STYLES","widget","avatar","bordered","AVATAR_TYPE","icon","image","text","Avatar","extend","init","element","options","that","this","fn","call","_fromMarkup","_wrapper","_markupContent","length","_contentFromMarkup","_content","name","alt","border","className","fillMode","rounded","size","style","themeColor","type","events","setOptions","currentOptions","wrapper","updatedOptions","_optionsFromWrapper","removeClass","empty","content","span","find","attr","append","first","children","slice","remove","classes","trim","split","forEach","indexOf","substring","addClass","_applyCssClasses","css","prepend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.avatar.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.avatar', ['kendo.core'], f);\n}(function () {\n    var __meta__ = {\n        id: 'avatar',\n        name: 'Avatar',\n        category: 'web',\n        description: 'The Avatar component represents an icon, text, or image rendered in a styled container.',\n        depends: ['core']\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, Widget = kendo.ui.Widget, DASH = '-';\n        var AVATAR_STYLES = {\n            widget: 'k-widget',\n            avatar: 'k-avatar',\n            bordered: 'k-avatar-bordered'\n        };\n        var AVATAR_TYPE = {\n            icon: 'icon',\n            image: 'image',\n            text: 'text'\n        };\n        var Avatar = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                options = options || {};\n                Widget.fn.init.call(that, element, options);\n                this._fromMarkup();\n                this._wrapper();\n                if (this._markupContent && this._markupContent.length > 0) {\n                    this._contentFromMarkup();\n                } else {\n                    this._content();\n                }\n            },\n            options: {\n                name: 'Avatar',\n                alt: null,\n                border: false,\n                className: null,\n                fillMode: 'solid',\n                icon: null,\n                image: null,\n                rounded: 'full',\n                size: 'medium',\n                style: null,\n                text: null,\n                themeColor: 'primary',\n                type: AVATAR_TYPE.text\n            },\n            events: [],\n            setOptions: function (options) {\n                var currentOptions = this.options, wrapper = this.wrapper, updatedOptions = $.extend({}, currentOptions, options);\n                Widget.fn.setOptions.call(this, options);\n                if (!updatedOptions[updatedOptions.type]) {\n                    currentOptions = this._optionsFromWrapper(currentOptions);\n                }\n                if (updatedOptions.border === false) {\n                    wrapper.removeClass(AVATAR_STYLES.bordered);\n                }\n                wrapper.empty();\n                this.options = currentOptions;\n                this._wrapper();\n                this._content();\n            },\n            _content: function () {\n                var span = this.wrapper.find('> span'), options = this.options, type = options.type, content;\n                if (type === AVATAR_TYPE.icon) {\n                    content = $('<span class=\\'k-icon k-i-' + options.icon + '\\'>');\n                } else if (type === AVATAR_TYPE.image) {\n                    content = $('<img src=\\'' + options.image + '\\'>');\n                    if (options.alt) {\n                        content.attr('alt', options.alt);\n                    }\n                } else if (type === AVATAR_TYPE.text) {\n                    content = $('<span>' + options.text + '</span>');\n                }\n                span.append(content);\n            },\n            _contentFromMarkup: function () {\n                var span = this.wrapper.find('> span').first();\n                span.append(this._markupContent);\n            },\n            _fromMarkup: function () {\n                var element = this.element, options = this.options, image, icon;\n                element.children().slice(1).remove();\n                image = element.children('img');\n                icon = element.children('.k-icon');\n                if (image.length > 0) {\n                    options.type = AVATAR_TYPE.image;\n                    this._markupContent = image.first();\n                } else if (icon.length > 0) {\n                    options.type = AVATAR_TYPE.icon;\n                    this._markupContent = icon.first();\n                } else if (element.children().length > 0) {\n                    options.type = AVATAR_TYPE.text;\n                    this._markupContent = element.children();\n                }\n            },\n            _optionsFromWrapper: function (updatedOptions) {\n                var wrapper = this.wrapper, classes, image;\n                if (updatedOptions.type === AVATAR_TYPE.text) {\n                    updatedOptions.text = wrapper.text().trim();\n                } else if (updatedOptions.type === AVATAR_TYPE.icon) {\n                    classes = wrapper.find('.k-icon').attr('class').split(/\\s+/);\n                    classes.forEach(function (name) {\n                        if (name.indexOf('k-i-') === 0) {\n                            updatedOptions.icon = name.substring(4);\n                        }\n                    });\n                } else if (updatedOptions.type === AVATAR_TYPE.image) {\n                    image = wrapper.find('img');\n                    updatedOptions.image = image.attr('src');\n                    if (image.attr('alt')) {\n                        updatedOptions.alt = image.attr('alt');\n                    }\n                }\n                return updatedOptions;\n            },\n            _wrapper: function () {\n                var wrapper = this.element, options = this.options, span = $('<span>');\n                this.wrapper = wrapper;\n                wrapper.addClass(AVATAR_STYLES.avatar);\n                this._applyCssClasses();\n                if (options.border) {\n                    wrapper.addClass(AVATAR_STYLES.bordered);\n                }\n                if (options.style) {\n                    wrapper.css(options.style);\n                }\n                if (options.className) {\n                    wrapper.addClass(options.className);\n                }\n                span.addClass(AVATAR_STYLES.avatar + DASH + options.type);\n                wrapper.prepend(span);\n            }\n        });\n        kendo.cssProperties.registerPrefix('Avatar', 'k-avatar-');\n        kendo.cssProperties.registerValues('Avatar', [{\n                prop: 'rounded',\n                values: kendo.cssProperties.roundedValues.concat([[\n                        'full',\n                        'full'\n                    ]])\n            }]);\n        kendo.ui.plugin(Avatar);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}