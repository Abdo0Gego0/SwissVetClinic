{"version":3,"sources":["kendo.maskedtextbox.js"],"names":["f","define","$","undefined","ns","name","NS","stringDiffStart","str1","str2","i","length","escapeRegExp","text","replace","global","window","min","Math","kendo","caret","keys","ui","Widget","isPlainObject","proxy","setTimeout","LABELCLASSES","STATEDISABLED","STATEINVALID","FOCUSED","DISABLED","READONLY","CHANGE","MOUSEUP","DROP","KEYDOWN","PASTE","INPUT","INPUT_EVENT_NAME","support","propertyChangeEvent","MaskedTextBox","extend","init","element","options","DOMElement","disabled","that","this","fn","call","_rules","rules","_wrapper","_tokenize","_form","addClass","attr","on","value","_togglePrompt","_old","_emptyMask","_oldValue","wrapper","_timeoutId","_maskLength","val","clearTimeout","removeClass","_change","is","parents","enable","readonly","_validationIcon","insertAfter","_label","_applyCssClasses","notify","clearPromptChar","unmaskOnPost","promptChar","culture","mask","label","size","fillMode","rounded","events","0","9","#","L","?","&","C","A","a","setOptions","_unbindInput","_bindInput","destroy","floatingLabel","off","_formElement","_resetHandler","_submitHandler","raw","unmasked","_unmask","RegExp","emptyMask","_mask","_unmaskedValue","_activeElement","show","_editable","disable","version","$angular","_keydown","_drop","_trackChange","_inputHandler","browser","msie","join","_legacyIEInputHandler","toggleClass","prop","trigger","__changing","inputChange","backward","contentStart","content","caretPos","endContent","old","selection","cursor","lengthDiff","mobile","mobileOS","__dropping","android","substring","_trimStartPromptChars","_findCaretPosBackwards","count","indexOf","pos","caretStart","_find","__backward","e","input","type","__pasting","formId","form","closest","key","keyCode","BACKSPACE","ENTER","idx","step","charAt","tokens","start","end","valueLength","chr","current","empty","chrIdx","split","token","tokenIdx","tokensLength","result","test","isFunction","_blinkInvalidState","floating","labelText","id","_floatingLabelContainer","wrap","parent","FloatingLabel","widget","guid","_inputLabel","insertBefore","style","cssText","width","className","_addInvalidState","_invalidStateTimeout","_removeInvalidState","rule","l","maskChars","numberFormat","getCulture","currency","symbol","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.maskedtextbox.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.maskedtextbox', [\n        'kendo.core',\n        'kendo.floatinglabel'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'maskedtextbox',\n        name: 'MaskedTextBox',\n        category: 'web',\n        description: 'The MaskedTextBox widget allows to specify a mask type on an input field.',\n        depends: [\n            'core',\n            'floatinglabel'\n        ]\n    };\n    (function ($, undefined) {\n        var global = window;\n        var min = global.Math.min;\n        var kendo = global.kendo;\n        var caret = kendo.caret;\n        var keys = kendo.keys;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var NS = '.kendoMaskedTextBox';\n        var isPlainObject = $.isPlainObject;\n        var proxy = $.proxy;\n        var setTimeout = window.setTimeout;\n        var LABELCLASSES = 'k-label k-input-label';\n        var STATEDISABLED = 'k-disabled';\n        var STATEINVALID = 'k-invalid';\n        var FOCUSED = 'k-focus';\n        var DISABLED = 'disabled';\n        var READONLY = 'readonly';\n        var CHANGE = 'change';\n        var MOUSEUP = 'mouseup';\n        var DROP = 'drop';\n        var KEYDOWN = 'keydown';\n        var PASTE = 'paste';\n        var INPUT = 'input';\n        function ns(name) {\n            return name + NS;\n        }\n        var INPUT_EVENT_NAME = ns(kendo.support.propertyChangeEvent ? 'propertychange' : INPUT);\n        function stringDiffStart(str1, str2) {\n            var i = 0;\n            while (i < str2.length) {\n                if (str1[i] !== str2[i]) {\n                    break;\n                }\n                i++;\n            }\n            return i;\n        }\n        var MaskedTextBox = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                var DOMElement;\n                Widget.fn.init.call(that, element, options);\n                that._rules = $.extend({}, that.rules, that.options.rules);\n                element = that.element;\n                DOMElement = element[0];\n                that._wrapper();\n                that._tokenize();\n                that._form();\n                that.element.addClass('k-input-inner').attr('autocomplete', 'off').on('focus' + NS, function () {\n                    var value = DOMElement.value;\n                    if (!value) {\n                        DOMElement.value = that._old = that._emptyMask;\n                    } else {\n                        that._togglePrompt(true);\n                    }\n                    that._oldValue = value;\n                    that.wrapper.addClass(FOCUSED);\n                    that._timeoutId = setTimeout(function () {\n                        caret(element, 0, value ? that._maskLength : 0);\n                    });\n                }).on('focusout' + NS, function () {\n                    var value = element.val();\n                    clearTimeout(that._timeoutId);\n                    DOMElement.value = that._old = '';\n                    if (value !== that._emptyMask) {\n                        DOMElement.value = that._old = value;\n                    }\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                    that._togglePrompt();\n                });\n                var disabled = element.is('[disabled]') || $(that.element).parents('fieldset').is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is('[readonly]'));\n                }\n                that.value(that.options.value || element.val());\n                that._validationIcon = $('<span class=\\'k-input-validation-icon k-icon k-i-warning k-hidden\\'></span>').insertAfter(element);\n                that._label();\n                that._applyCssClasses();\n                kendo.notify(that);\n            },\n            options: {\n                name: 'MaskedTextBox',\n                clearPromptChar: false,\n                unmaskOnPost: false,\n                promptChar: '_',\n                culture: '',\n                rules: {},\n                value: '',\n                mask: '',\n                label: null,\n                size: 'medium',\n                fillMode: 'solid',\n                rounded: 'medium'\n            },\n            events: [CHANGE],\n            rules: {\n                '0': /\\d/,\n                '9': /\\d|\\s/,\n                '#': /\\d|\\s|\\+|\\-/,\n                'L': /[a-zA-Z]/,\n                '?': /[a-zA-Z]|\\s/,\n                '&': /\\S/,\n                'C': /./,\n                'A': /[a-zA-Z0-9]/,\n                'a': /[a-zA-Z0-9]|\\s/\n            },\n            setOptions: function (options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n                that._rules = $.extend({}, that.rules, that.options.rules);\n                that._tokenize();\n                this._unbindInput();\n                this._bindInput();\n                that.value(that.element.val());\n            },\n            destroy: function () {\n                var that = this;\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n                that.element.off(NS);\n                if (that._formElement) {\n                    that._formElement.off('reset', that._resetHandler);\n                    that._formElement.off('submit', that._submitHandler);\n                }\n                Widget.fn.destroy.call(that);\n            },\n            raw: function () {\n                var unmasked = this._unmask(this.element.val(), 0);\n                return unmasked.replace(new RegExp(escapeRegExp(this.options.promptChar), 'g'), '');\n            },\n            value: function (value) {\n                var element = this.element;\n                var emptyMask = this._emptyMask;\n                if (value === undefined) {\n                    return this.element.val();\n                }\n                if (value === null) {\n                    value = '';\n                }\n                if (!emptyMask) {\n                    this._oldValue = value;\n                    element.val(value);\n                    return;\n                }\n                value = this._unmask(value + '');\n                element.val(value ? emptyMask : '');\n                this._mask(0, this._maskLength, value);\n                this._unmaskedValue = null;\n                value = element.val();\n                this._oldValue = value;\n                if (kendo._activeElement() !== element) {\n                    if (value === emptyMask) {\n                        element.val('');\n                    } else {\n                        this._togglePrompt();\n                    }\n                }\n            },\n            _togglePrompt: function (show) {\n                var DOMElement = this.element[0];\n                var value = DOMElement.value;\n                if (this.options.clearPromptChar) {\n                    if (!show) {\n                        value = value.replace(new RegExp(escapeRegExp(this.options.promptChar), 'g'), ' ');\n                    } else {\n                        value = this._oldValue;\n                    }\n                    DOMElement.value = this._old = value;\n                }\n            },\n            readonly: function (readonly) {\n                var that = this;\n                this._editable({\n                    readonly: readonly === undefined ? true : readonly,\n                    disable: false\n                });\n                if (that.floatingLabel) {\n                    that.floatingLabel.readonly(readonly === undefined ? true : readonly);\n                }\n            },\n            enable: function (enable) {\n                var that = this;\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined ? true : enable)\n                });\n                if (that.floatingLabel) {\n                    that.floatingLabel.enable(enable = enable === undefined ? true : enable);\n                }\n            },\n            _bindInput: function () {\n                var that = this;\n                if (that._maskLength) {\n                    if (that.options.$angular) {\n                        that.element.off(INPUT);\n                    }\n                    that.element.on(ns(KEYDOWN), proxy(that._keydown, that)).on(ns(DROP), proxy(that._drop, that)).on(ns(CHANGE), proxy(that._trackChange, that)).on(INPUT_EVENT_NAME, proxy(that._inputHandler, that));\n                    if (kendo.support.browser.msie) {\n                        var version = kendo.support.browser.version;\n                        if (version > 8 && version < 11) {\n                            var events = [\n                                ns(MOUSEUP),\n                                ns(DROP),\n                                ns(KEYDOWN),\n                                ns(PASTE)\n                            ].join(' ');\n                            that.element.on(events, proxy(that._legacyIEInputHandler, that));\n                        }\n                    }\n                }\n            },\n            _unbindInput: function () {\n                var events = [\n                    INPUT_EVENT_NAME,\n                    ns(KEYDOWN),\n                    ns(MOUSEUP),\n                    ns(DROP),\n                    ns(PASTE)\n                ].join(' ');\n                this.element.off(events);\n            },\n            _editable: function (options) {\n                var that = this;\n                var element = that.element;\n                var wrapper = that.wrapper;\n                var disable = options.disable;\n                var readonly = options.readonly;\n                that._unbindInput();\n                if (!readonly && !disable) {\n                    element.prop(DISABLED, false).prop(READONLY, false);\n                    wrapper.removeClass(STATEDISABLED);\n                    that._bindInput();\n                } else {\n                    element.attr(DISABLED, disable).attr(READONLY, readonly);\n                    wrapper.toggleClass(STATEDISABLED, disable);\n                }\n            },\n            _change: function () {\n                var that = this;\n                var value = that.value();\n                if (value !== that._oldValue) {\n                    that._oldValue = value;\n                    that.trigger(CHANGE);\n                    that.element.trigger(CHANGE);\n                } else if (value === '' && that.__changing) {\n                    that.element.trigger(CHANGE);\n                }\n            },\n            inputChange: function (backward) {\n                var that = this;\n                var old = that._old;\n                var element = that.element[0];\n                var value = element.value;\n                var selection = caret(element);\n                var cursor = selection[1];\n                var lengthDiff = value.length - old.length;\n                var mobile = kendo.support.mobileOS;\n                if (that.__dropping && lengthDiff < 0) {\n                    return;\n                }\n                if (lengthDiff === -1 && mobile.android && mobile.browser === 'chrome') {\n                    backward = true;\n                }\n                var contentStart = min(cursor, stringDiffStart(value, old));\n                var content = value.substring(contentStart, cursor);\n                element.value = value.substring(0, contentStart) + that._emptyMask.substring(contentStart);\n                var caretPos = that._mask(contentStart, cursor, content);\n                var endContent = that._trimStartPromptChars(value.substring(cursor), min(lengthDiff, caretPos - contentStart));\n                var unmasked = that._unmask(endContent, old.length - endContent.length);\n                that._mask(caretPos, caretPos, unmasked);\n                if (backward) {\n                    caretPos = that._findCaretPosBackwards(contentStart);\n                }\n                caret(element, caretPos);\n                that.__dropping = false;\n            },\n            _trimStartPromptChars: function (content, count) {\n                var promptChar = this.options.promptChar;\n                while (count-- > 0 && content.indexOf(promptChar) === 0) {\n                    content = content.substring(1);\n                }\n                return content;\n            },\n            _findCaretPosBackwards: function (pos) {\n                var caretStart = this._find(pos, true);\n                if (caretStart < pos) {\n                    caretStart += 1;\n                }\n                return caretStart;\n            },\n            _inputHandler: function () {\n                if (kendo._activeElement() !== this.element[0]) {\n                    return;\n                }\n                this.inputChange(this.__backward);\n            },\n            _legacyIEInputHandler: function (e) {\n                var that = this;\n                var input = that.element[0];\n                var value = input.value;\n                var type = e.type;\n                that.__pasting = type === 'paste';\n                setTimeout(function () {\n                    if (type === 'mouseup' && that.__pasting) {\n                        return;\n                    }\n                    if (input.value && input.value !== value) {\n                        that.inputChange(that.__backward);\n                    }\n                });\n            },\n            _trackChange: function () {\n                var that = this;\n                that.__changing = true;\n                setTimeout(function () {\n                    that.__changing = false;\n                });\n            },\n            _form: function () {\n                var that = this;\n                var element = that.element;\n                var formId = element.attr('form');\n                var form = formId ? $('#' + formId) : element.closest('form');\n                if (form[0]) {\n                    that._resetHandler = function () {\n                        setTimeout(function () {\n                            that.value(element[0].value);\n                        });\n                    };\n                    that._submitHandler = function () {\n                        that.element[0].value = that._old = that.raw();\n                    };\n                    if (that.options.unmaskOnPost) {\n                        form.on('submit', that._submitHandler);\n                    }\n                    that._formElement = form.on('reset', that._resetHandler);\n                }\n            },\n            _keydown: function (e) {\n                var key = e.keyCode;\n                this.__backward = key === keys.BACKSPACE;\n                if (key === keys.ENTER) {\n                    this._change();\n                }\n            },\n            _drop: function () {\n                this.__dropping = true;\n            },\n            _find: function (idx, backward) {\n                var value = this.element.val() || this._emptyMask;\n                var step = 1;\n                if (backward === true) {\n                    step = -1;\n                }\n                while (idx > -1 || idx <= this._maskLength) {\n                    if (value.charAt(idx) !== this.tokens[idx]) {\n                        return idx;\n                    }\n                    idx += step;\n                }\n                return -1;\n            },\n            _mask: function (start, end, value, backward) {\n                var element = this.element[0];\n                var current = element.value || this._emptyMask;\n                var empty = this.options.promptChar;\n                var valueLength;\n                var chrIdx = 0;\n                var unmasked;\n                var chr;\n                var idx;\n                start = this._find(start, backward);\n                if (start > end) {\n                    end = start;\n                }\n                unmasked = this._unmask(current.substring(end), end);\n                value = this._unmask(value, start);\n                valueLength = value.length;\n                if (value) {\n                    unmasked = unmasked.replace(new RegExp('^_{0,' + valueLength + '}'), '');\n                }\n                value += unmasked;\n                current = current.split('');\n                chr = value.charAt(chrIdx);\n                while (start < this._maskLength) {\n                    current[start] = chr || empty;\n                    chr = value.charAt(++chrIdx);\n                    if (idx === undefined && chrIdx > valueLength) {\n                        idx = start;\n                    }\n                    start = this._find(start + 1);\n                }\n                element.value = this._old = current.join('');\n                if (kendo._activeElement() === element) {\n                    if (idx === undefined) {\n                        idx = this._maskLength;\n                    }\n                    caret(element, idx);\n                }\n                return idx;\n            },\n            _unmask: function (value, idx) {\n                if (!value) {\n                    return '';\n                }\n                if (this._unmaskedValue === value) {\n                    return this._unmaskedValue;\n                }\n                value = (value + '').split('');\n                var chr;\n                var token;\n                var chrIdx = 0;\n                var tokenIdx = idx || 0;\n                var empty = this.options.promptChar;\n                var valueLength = value.length;\n                var tokensLength = this.tokens.length;\n                var result = '';\n                while (tokenIdx < tokensLength) {\n                    chr = value[chrIdx];\n                    token = this.tokens[tokenIdx];\n                    if (chr === token || chr === empty) {\n                        result += chr === empty ? empty : '';\n                        chrIdx += 1;\n                        tokenIdx += 1;\n                    } else if (typeof token !== 'string') {\n                        if (token && token.test && token.test(chr) || kendo.isFunction(token) && token(chr)) {\n                            result += chr;\n                            tokenIdx += 1;\n                        } else {\n                            if (valueLength === 1) {\n                                this._blinkInvalidState();\n                            }\n                        }\n                        chrIdx += 1;\n                    } else {\n                        tokenIdx += 1;\n                    }\n                    if (chrIdx >= valueLength) {\n                        break;\n                    }\n                }\n                this._unmaskedValue = result;\n                return result;\n            },\n            _label: function () {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var id = element.attr('id');\n                var floating;\n                var labelText;\n                if (options.label !== null) {\n                    floating = isPlainObject(options.label) ? options.label.floating : false;\n                    labelText = isPlainObject(options.label) ? options.label.content : options.label;\n                    if (floating) {\n                        that._floatingLabelContainer = that.wrapper.wrap('<span></span>').parent();\n                        that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    }\n                    if (kendo.isFunction(labelText)) {\n                        labelText = labelText.call(that);\n                    }\n                    if (!labelText) {\n                        labelText = '';\n                    }\n                    if (!id) {\n                        id = options.name + '_' + kendo.guid();\n                        element.attr('id', id);\n                    }\n                    that._inputLabel = $('<label class=\\'' + LABELCLASSES + '\\' for=\\'' + id + '\\'>' + labelText + '</label>\\'').insertBefore(that.wrapper);\n                }\n            },\n            _wrapper: function () {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper = element.wrap('<span class=\\'k-input k-maskedtextbox\\'></span>').parent();\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = '100%';\n                that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n            },\n            _blinkInvalidState: function () {\n                var that = this;\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(proxy(that._removeInvalidState, that), 100);\n            },\n            _addInvalidState: function () {\n                var that = this;\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass('k-hidden');\n            },\n            _removeInvalidState: function () {\n                var that = this;\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass('k-hidden');\n                that._invalidStateTimeout = null;\n            },\n            _tokenize: function () {\n                var tokens = [];\n                var tokenIdx = 0;\n                var mask = this.options.mask || '';\n                var maskChars = mask.split('');\n                var length = maskChars.length;\n                var idx = 0;\n                var chr;\n                var rule;\n                var emptyMask = '';\n                var promptChar = this.options.promptChar;\n                var numberFormat = kendo.getCulture(this.options.culture).numberFormat;\n                var rules = this._rules;\n                for (; idx < length; idx++) {\n                    chr = maskChars[idx];\n                    rule = rules[chr];\n                    if (rule) {\n                        tokens[tokenIdx] = rule;\n                        emptyMask += promptChar;\n                        tokenIdx += 1;\n                    } else {\n                        if (chr === '.' || chr === ',') {\n                            chr = numberFormat[chr];\n                        } else if (chr === '$') {\n                            chr = numberFormat.currency.symbol;\n                        } else if (chr === '\\\\') {\n                            idx += 1;\n                            chr = maskChars[idx];\n                        }\n                        chr = chr.split('');\n                        for (var i = 0, l = chr.length; i < l; i++) {\n                            tokens[tokenIdx] = chr[i];\n                            emptyMask += chr[i];\n                            tokenIdx += 1;\n                        }\n                    }\n                }\n                this.tokens = tokens;\n                this._emptyMask = emptyMask;\n                this._maskLength = emptyMask.length;\n            }\n        });\n        function escapeRegExp(text) {\n            return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n        }\n        kendo.cssProperties.registerPrefix('MaskedTextBox', 'k-input-');\n        kendo.cssProperties.registerValues('MaskedTextBox', [{\n                prop: 'rounded',\n                values: kendo.cssProperties.roundedValues.concat([[\n                        'full',\n                        'full'\n                    ]])\n            }]);\n        ui.plugin(MaskedTextBox);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}