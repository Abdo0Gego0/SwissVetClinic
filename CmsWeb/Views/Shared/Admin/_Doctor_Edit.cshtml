
@model Doctor

@inject ISelectListService slSrvc

<center>
    <h3 class="text-danger">@ViewBag.ErrorMessage</h3>
</center>

<form asp-action="Edit_Doctor" asp-controller="Doctor" method="post" id="myForm" enctype='multipart/form-data'>

    <div class="container">


        <div class="row" style="width:100%;align-items:center;justify-content:center">


            <input asp-for="ImageName" hidden>
            <input asp-for="MedicalCenterId" hidden>
            <input asp-for="Id" hidden>


            @{
                if (!string.IsNullOrEmpty(Model.ImageName))
                {
                    <div onclick="document.getElementById('ImageFile').click()" class="picCircle" id="prevImg1" style="cursor:pointer;background-image:url(@Model.ImageFullPath) !important">
                    </div>
                }
                else
                {
                    <div onclick="document.getElementById('ImageFile').click()" class="picCircle" id="prevImg1" style="cursor:pointer;">
                    </div>
                }
            }

            <center>
                <div>
                    <span>
                        <i style="background-image:url('/AdminDashboard/images/gallery-export.svg');display: inline-block;width:24px;height:24px"></i>
                        <span class="uploadPicture"
                              onclick="document.getElementById('ImageFile').click()">
@Localizer["ChooseImage"]   
</span>
                    </span>
                    <input type="file" id="ImageFile" onchange="preview()" accept="image/*" style="display:none" name="ImageFile">
                </div>
            </center>
        </div>

        <hr />

        <p class="text-center mb-6">@Localizer["Doctor info from passport"]</p>

        <div class="row">
            <div class="col-md-4 mb-3">
                <label class="fieldLabel" asp-for="FirstName"></label>
                <input class="form-control fieldInput" asp-for="FirstName" />
                <span class="text-danger" asp-validation-for="FirstName"></span>

            </div>

            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="MiddleName"></label>
                <input class="form-control fieldInput" asp-for="MiddleName"  />
                <span class="text-danger" asp-validation-for="MiddleName"></span>

            </div>

            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="LastName"></label>
                <input class="form-control fieldInput" asp-for="LastName"  />
                <span class="text-danger" asp-validation-for="LastName"></span>

            </div>

            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="NationalCardId"></label>
                <input class="form-control fieldInput" asp-for="NationalCardId"  />
                <span class="text-danger" asp-validation-for="NationalCardId"></span>

            </div>


            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="Nationality"></label>
                <input class="form-control fieldInput" asp-for="Nationality"  />
                <span class="text-danger" asp-validation-for="Nationality"></span>

            </div>

            <div class="col-md-4">
                <label class="fieldLabel" asp-for="PassportNumber"></label>
                <input class="form-control fieldInput" asp-for="PassportNumber"  />
                <span class="text-danger" asp-validation-for="PassportNumber"></span>

            </div>

            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="JobCardNumber"></label>
                <input class="form-control fieldInput" asp-for="JobCardNumber"  />
                <span class="text-danger" asp-validation-for="JobCardNumber"></span>

            </div>

        </div>


        <hr />

        @Html.Hidden("PreviousEmail", Model.PersonEmail)
        @Html.Hidden("PreviousUsername", Model.PersonUserName)


        <p class="text-center mb-6">@Localizer["Account Info"]</p>
        <div class="row">
            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="PersonEmail"></label>
                <input class="form-control fieldInput" asp-for="PersonEmail" />
                <span class="text-danger" asp-validation-for="PersonEmail"></span>
            </div>
            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="PersonPhone"></label>
                <input class="form-control fieldInput" asp-for="PersonPhone" />
                <span class="text-danger" asp-validation-for="PersonPhone"></span>
            </div>

            <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="PersonUserName"></label>
                <input class="form-control fieldInput" asp-for="PersonUserName" />
                <span class="text-danger" asp-validation-for="PersonUserName"></span>
            </div>

@*             <div class="col-md-4  mb-3">
                <label class="fieldLabel" asp-for="Password"></label>
                <input class="form-control fieldInput" asp-for="Password" value="@ViewBag.Password" />
                <span class="text-danger" asp-validation-for="Password"></span>
            </div> *@

        </div>


        <hr />


        <p class="text-center mb-6">@Localizer["Doctor info to display in mobile"]</p>


        <input asp-for="DoctorTranslation[0].Id" hidden>
        <input asp-for="DoctorTranslation[0].DoctorId" hidden>

        <input asp-for="DoctorTranslation[1].Id" hidden>
        <input asp-for="DoctorTranslation[1].DoctorId" hidden>

        <div class="row">
            <div class="col-md-12 mb-3">
                    <label class="fieldLabel" style="direction:ltr !important">
                    Name
                    </label>
                    <input class="form-control fieldInput" style="direction:ltr !important"  asp-for="DoctorTranslation[0].Name"  />
                <span class="text-danger"  style="direction:ltr !important" asp-validation-for="DoctorTranslation[0].Name"></span>

                </div>
                <br />
        </div>

        <div class="row">
            <div class="col-md-12 mb-3">
                <label class="fieldLabel" style="direction:ltr !important">
                    Description
                </label>
                <input class="form-control fieldInput" style="direction:ltr !important" asp-for="DoctorTranslation[0].Description" required />
            </div>
            <br />
        </div>

        <div class="row">
            <div class="col-md-12 mb-3">
                <div dir="rtl">
                    <label class="fieldLabel" style="margin:0px;" dir="rtl">
                       الاسم
                    </label>
                <input class="form-control fieldInput" asp-for="DoctorTranslation[1].Name"  />
                    <span class="text-danger" asp-validation-for="DoctorTranslation[1].Name"></span>

                </div>
                <br />
            </div>
        </div>

        <div class="row">
            <div class="col-md-12 mb-3">
                <div dir="rtl">
                    <label class="fieldLabel" style="margin:0px;" dir="rtl">
                        الوصف
                    </label>
                    <input class="form-control fieldInput" asp-for="DoctorTranslation[1].Description" required />
                </div>
                <br />
            </div>
        </div>

        <hr />


        <br />
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                                        <label class="fieldLabel">@Localizer["Doctor Speciality"]</label>
                    <select required class="form-control" asp-for="DoctorSpeciality" asp-items="@slSrvc.DoctorSepcialtySL()">
                        <option selected>@Localizer["Clinic Speciality"]</option>
                    </select>
                </div>
            </div>
        </div>

        <hr />


                <p class="text-center mb-6">@Localizer["Doctor Certificates"]</p>

        <div class="@Localizer["k-rtl"]">
        @(
            Html.Kendo().Grid<Certificate>()
            .Name("grid")
            .ToolBar
            (
            toolbar =>
            {

                toolbar.Create().Text(@Localizer["Add new"]).IconClass("k-icon k-i-plus k-button-icon").HtmlAttributes(new { @class = "addCtrl" });
                @*             toolbar.Save().SaveText(@Localizer["Save"]).CancelText(@Localizer["Cancel"]).IconClass("fa fa-save").HtmlAttributes(new { @class = "addCtrl" });
        toolbar.Search().Text(Localizer["Search"]); *@
            }).HtmlAttributes(new { @class = "myToolBar" })

            .Columns(columns =>
            {
                columns.Bound(p => p.ImageFullPath)
                .ClientTemplate(
            @"<div class='prof-photo'
        style='background-image: url(" + @Url.Content("#:ImageFullPath#") + ");'></div>")

                .Width(100)
                .Title(" ").Filterable(false);
                columns.Bound(p => p.Id).Visible(false);
                columns.Bound(p => p.CertificateTranslation[0].Name).Title("Name");
                columns.Bound(p => p.CertificateTranslation[1].Name).Title("الاسم");


                columns.Command(command =>
                {
                    command.Edit().TemplateId("Temp_Edit");
                    command.Destroy().TemplateId("Temp_Destroy");
                }).Width(250);
            }

            )
            .Mobile(MobileMode.Auto)

            .Editable(ed =>
            {
                ed.Mode(GridEditMode.PopUp).TemplateName("CertificateEditor"); ; ed.DisplayDeleteConfirmation(true);

                ed.DisplayDeleteConfirmation(Localizer["Do you want to delete this certificate?"]);


            })

            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(25)
            .Responsive(true)
            .Info(true)
            .Numeric(true)
            )
            .Sortable()
            .Navigatable()
            .Resizable(r => r.Columns(true))
            .Reorderable(r => r.Columns(true))
                .Filterable(filt =>
                {
                    filt.Messages(msg => msg.And(Localizer["And"]));
                    filt.Messages(msg => msg.Or(Localizer["Or"]));
                    filt.Messages(msg => msg.Equals(Localizer["Equal"]));
                    filt.Messages(msg => msg.Clear(Localizer["Cancel"]));
                    filt.Messages(msg => msg.Filter(Localizer["Search"]));
                    filt.Messages(msg => msg.Info(""));

                    filt.Operators(op => op.ForDate(
                    fs =>
                    {
                        fs.Clear();
                        fs.IsNotEqualTo(Localizer["Equal"]);
                        fs.IsEqualTo(Localizer["Not Equal"]);
                        fs.IsLessThan(Localizer["Smaller"]);
                        fs.IsLessThanOrEqualTo(Localizer["Smaller or Equal"]);
                        fs.IsGreaterThan(Localizer["Greater"]);
                        fs.IsGreaterThanOrEqualTo(Localizer["Greater or Equal"]);
                    }
                    )
                    );

                    filt.Operators(op => op.ForString(
                    fs =>
                    {
                        fs.Clear();
                        fs.StartsWith(Localizer["Starts with"]);
                        fs.EndsWith(Localizer["Ends with"]);
                        fs.Contains(Localizer["Contains"]);
                        fs.IsNotEqualTo(Localizer["Not Equal"]);
                        fs.IsEqualTo(Localizer["Equal"]);
                        fs.DoesNotContain(Localizer["Does not Contain"]);

                    }
                    )
                    );


                    filt.Operators(op => op.ForNumber(
                    fs =>
                    {
                        fs.Clear();
                        fs.IsNotEqualTo(Localizer["Not Equal"]);
                        fs.IsEqualTo(Localizer["Equal"]);

                        fs.IsLessThan(Localizer["Smaller"]);
                        fs.IsLessThanOrEqualTo(Localizer["Smaller or Equal"]);
                        fs.IsGreaterThan(Localizer["Greater"]);
                        fs.IsGreaterThanOrEqualTo(Localizer["Greater or Equal"]);

                    }
                    )
                    );



                })
            .Scrollable()


            .HtmlAttributes(new { @class = "custom-grid", @style="height:400px;" }) // Add a custom class

            .DataSource(
            dataSource => dataSource

            .Ajax()
            @* .Batch(true) *@
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Model(model => model.Field(p => p.CertificateTranslation).DefaultValue(new List<CertificateTranslation> { new CertificateTranslation { LangCode = "en-us", Name = "name" }, new CertificateTranslation { LangCode = "ar", Name = "الاسم" } }))
            .Read(read => read.Action("Certificate_Read", "Doctor", new { id = Model.Id}).Type(HttpVerbs.Get))

            .Destroy(destroy =>
            {
                destroy.Action("Destroy_Certificate", "Doctor");
            })

            .Create(destroy =>
            {
                destroy.Action("Create_Certificate", "Doctor", new { docId = Model.Id });
            })

            .Update(destroy =>
            {
                destroy.Action("Update_Certificate", "Doctor");
            })

            .Events(events => events.Sync("sync_handler").RequestEnd("requestEnd").RequestStart("requestStart"))

            )
            .Events(events => events.Edit("onEditCer"))
            .Events(events => events.DataBound("onDataBound"))
            )

        </div>
        <script>

            function onEditCer(e) {
                if (!e.model.isNew()) {
                                        e.container.kendoWindow("title", '@Localizer["Edit"]');
                    var prevImg = $('#prevImg');
                    prevImg.css('background-image', 'url(' + e.model.ImageFullPath + ')');
                    $("#docId").val("@ViewBag.Id").trigger("change");

                }
            }

        </script>


        <script id="Temp_Destroy" type="text/kendo-tmpl">
            <span class="k-grid-delete" style="font-size:24px;cursor:pointer;color:red"><i class="fa fa-trash"></i></span>
        </script>

        <script id="Temp_Edit" type="text/kendo-tmpl">
            <span class="k-grid-edit"   style="font-size:24px;cursor:pointer;color:var(--site-light-pink)"><i class="fas fa-pencil"></i></span>
        </script>


        


            <br />
            <br />
            <br />
        @* <button type="submit" class="form-control addCtrl"> @Localizer["Save"]</button> *@

    </div>


</form>


<script>
    function preview(evt) {
        var filee = event.target.files[0];
        document.getElementById('prevImg1').style.backgroundImage = "url('" + URL.createObjectURL(filee) + "')";
    }
</script>

<script id="Temp_Destroy" type="text/kendo-tmpl">
    <span class="k-grid-delete" style="font-size:24px;cursor:pointer;color:red"><i class="fa fa-trash"></i></span>
</script>
